---
title: "A tuturial of ggplot2"
description: "This is a again a lesson on ggplot2"
author:
  - name: "Tuan Le Khac"
    url: https://lktuan.github.io/
date: 12-24-2023
categories: [R, ggplot2, Data Visualization] # self-defined categories
# citation: 
#   url: https://github.com/lktuan/lktuan.github.io/blog/2023-12-24_post/
image: ggplot2.png
draft: false # setting this to `true` will prevent your post from appearing on your listing page until you're ready!

format: 
  html: 
    code-fold: true
    code-summary: "Show the code"
    code-line-numbers: true
css: html/styles.scss
editor: visual
---

# Preparation

I need to install the following packages:

```{r}
# | eval: false
# install CRAN packages
pkg_install =   c("ggplot2", "tibble", "tidyr", "forcats", "purrr", "prismatic", "corrr", 
    "cowplot", "ggforce", "ggrepel", "ggridges", "ggsci", "ggtext", "ggthemes", 
    "grid", "gridExtra", "patchwork", "rcartocolor", "scico", "showtext", 
    "shiny", "plotly", "highcharter", "echarts4r")
# install.packages(pkg_install)


```

I was facing the error of installing devtools

```{r}
# | eval: false
# install from GitHub since not on CRAN
# install.packages('devtools')
# devtools::install_github("JohnCoene/charter")
```

I tried to update R to the latest version (commented the code as it would be run once)

```{r}
# | eval: false
# update.packages(repos='http://cran.rstudio.com/', ask=FALSE, checkBuilt=TRUE)
```

--\> Not worked

**Oops I was should be using "'devtools'" instead of "devtools"!!! Problem solved**

# The Dataset

I was using the dataset: "*National Morbidity and Mortality Air Pollution Study* (NMMAPS)"

Install the readr first:

```{r}
# | eval: false
# install.packages('readr')
# install.packages("quarto")
```

#### Import data

": :" here call the namespace and can be used to access a function without loading the package.

```{r}
chic <- readr::read_csv("https://cedricscherer.com/data/chicago-nmmaps-custom.csv")
```

view some data

```{r}
tibble::glimpse(chic)
```

```{r}
head(chic,10)
```

# The {ggplot2} Package

A ggplot is built up from a few basic elements:

1.  Data;
2.  Geometries `geom_`: the geometric shape (hình học) that will represent the data;
3.  Aesthetics `aes_`: aesthetics (tính thẩm mỹ) of the geometric or statistical objects, such as postition, color, size, shape, and transparency;
4.  Scales `scale_`: map between the data and the aesthetics dimensions (ánh xạ từ dữ liệu đến đồ thị), such as data range to plot width or factor values to colors;
5.  Statistical transformations `stat_`: statistical summaries (thống kê) of data, such as quantitles, fitted curves, and sums;
6.  Coordinate system `coord_`: the transformation used for mapping data coordinates into the plane of the data rectangles (hệ tọa độ);
7.  Facets `facet_`: the arrangement of the data into a grid of plots;
8.  Visual themes `theme()`: the overall visual defaults of a plot, such as background, grids, axes, default typeface, sizes and colors (tông).

🚀**Không nhất thiết một phần từ được gọi, và chúng cũng có thể được gọi nhiều lần.**

# A default ggplot

Load the package for ability to use the functionality:

```{r}
library(ggplot2)
```

A default ggplot needs three things that you have to specify: the *data*, *aesthetics*, and a *geometry.*

-   starting define a plot by using `ggplot(data = df)`;

-   if we want to plot (in most cases) 2 variables, we must add *positional aesthestics* `aes(x = var1, y = var2);`

**🚀Data được đề cập *bên ngoài*`aes()`, trong khi đó biến/variables được đề cập *bên trong*`aes()`.**

Ví dụ:

```{r}
(g <- ggplot(chic, aes(x = date, y = temp)))
```

Just a blank panel, because `{ggplot2}` *does not know* how we plot data \~ we still need to provide geometry.

**🚀`ggplot2` cho phép chúng ta lưu `ggobject` thành một biến, trong trường hợp này là `g` . Chúng ta có thể mở rộng `g` bằng cách thêm cách layers về sau.**

**🚀Bằng cách dùng dấu `()`, chúng ta có thể *in* ngay object được gán ra.**

Many different geometries to use (called `geoms` because each function usually starts with `geom_`). For e.g., if we want to plot a scatter plot.

```{r}
g + geom_point()
```

also a lineplot which our managers always like:

```{r}
g + geom_line()
```

cool but the plot does not look optimal, we can also using mutiple layers of geometry, where the magic and fun start.

```{r}
g + geom_point() + geom_line()
# it's the same if we write g + geom_line() + geom_point() 
```

### Change properties of geometries

Turn all points to large fire-red diamonds:

```{r}
g + geom_point(color = 'firebrick', shape = 'diamond', size = 2)
```

**🚀 `ggplot2` hiểu khi chúng ta dùng `color`, `colour`, cũng như `col`.**

**🐱‍🏍Có thể dùng [màu mặc định](http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf) hoặc [màu hex](https://www.techopedia.com/definition/29788/color-hex-code), hoặc thậm chí là màu RGB/RGBA với hàm `rgb()`. Ví dụ:**

```{r}
g + geom_point(color = "#b22222", shape = "diamond", size = 2)
g + geom_point(color = rgb(178, 34, 34, maxColorValue = 255), shape = "diamond", size = 2)
```

# References

Source: <https://www.cedricscherer.com/2019/08/05/a-ggplot2-tutorial-for-beautiful-plotting-in-r/>