{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Data Science Project with Mamba, Python, and VS Code on Window\"\n",
        "description: \"In search for the best environment & dependencies management tool for data project\"\n",
        "author:\n",
        "  - name: \"Tuan Le Khac\"\n",
        "    url: https://lktuan.github.io/\n",
        "categories: [python] \n",
        "image: mamba.png\n",
        "date: 11-04-2024\n",
        "date-modified: 11-04-2024\n",
        "toc: true\n",
        "code-fold: true\n",
        "format:\n",
        "  html:\n",
        "    code-overflow: wrap\n",
        "---\n",
        "\n",
        "\n",
        "# Vì sao mà Mamba?\n",
        "\n",
        "Là một non-tech data coder, mình vẫn loay hoay việc setup một dự án có thể được tái sử dụng và dễ dàng deploy, đặc biệt là với dự án dạng data - khi mà DS/DA sẽ làm việc nhiều với notebook - rất anti production.\n",
        "\n",
        ":::: {.columns}\n",
        "\n",
        "::: {.column width=\"60%\"}\n",
        "![Arggg! Cơn đau đầu của non-tech làm data, nguồn ảnh [Analytics Vidhya](https://www.analyticsvidhya.com/blog/2023/03/choosing-the-right-python-environment-tool-for-your-next-project/)](meme_top.png)\n",
        ":::\n",
        "\n",
        "::: {.column width=\"40%\"}\n",
        "![](meme_bottom.png)\n",
        ":::\n",
        "\n",
        "::::\n",
        "\n",
        "Mình tìm hiểu một số công cụ và dưới đây là so sánh:\n",
        "\n",
        "1. `Mamba` ✅\n",
        "\n",
        "+ Ưu điểm:\n",
        "\n",
        "  - Nhanh hơn Conda nhiều lần\n",
        "  - Tương thích hoàn toàn với Conda\n",
        "  - Quản lý được cả Python và non-Python dependencies\n",
        "  - Tích hợp tốt với notebooks\n",
        "\n",
        "2. `Poetry`\n",
        "\n",
        "+ Ưu điểm:\n",
        "\n",
        "  - Dependency resolution tốt\n",
        "  - Lock file chính xác\n",
        "\n",
        "+ Nhược điểm:\n",
        "\n",
        "  - Khó xử lý non-Python dependencies\n",
        "  - Cần thêm setup cho notebook kernels\n",
        "  - Không phù hợp lắm với data science\n",
        "\n",
        "1. `venv`\n",
        "\n",
        "- Quá đơn giản cho data science\n",
        "- Không xử lý được dependencies phức tạp\n",
        "- Cần nhiều cấu hình thủ công\n",
        "\n",
        "4. `pipenv`\n",
        "\n",
        "- Tương tự Poetry nhưng ít tính năng hơn\n",
        "- Không phù hợp với data science\n",
        "\n",
        "5. `uv`\n",
        "\n",
        "- Mới và nhanh\n",
        "- Chưa đủ chín muồi cho data science\n",
        "- Thiếu nhiều tính năng cần thiết\n",
        "\n",
        "Xem ra `mamba` có vẻ ổn nhất, hãy đào sâu hơn về ưu điểm của nó:\n",
        "\n",
        "1. Xử lý dependencies phức tạp\n",
        "\n",
        "- Data science thường cần nhiều thư viện với dependencies phức tạp (numpy, pandas, scipy, pytorch...)\n",
        "- Mamba giải quyết dependencies nhanh và hiệu quả hơn Conda\n",
        "- Xử lý tốt các thư viện có binary dependencies (như CUDA)\n",
        "\n",
        "2. Quản lý môi trường kernel cho notebooks\n",
        "\n",
        "- Tự động tích hợp với Jupyter notebooks\n",
        "- Dễ dàng switch giữa các môi trường trong notebook\n",
        "- Không cần cấu hình thêm cho notebook kernels\n",
        "\n",
        "Oke giờ hãy thử xem làm thế nào để tổ chức phát triển một dự án với mamba - VS Code trên Window.\n",
        "\n",
        "# Hướng dẫn Cài đặt và Sử dụng Mamba với VS Code trên Windows\n",
        "\n",
        "## 1. Cài đặt Mamba trên Windows\n",
        "\n",
        "### Cách 1: Tải trực tiếp\n",
        "\n",
        "- Tải Mambaforge cho Windows từ: <https://github.com/conda-forge/miniforge#mambaforge>\n",
        "- Chạy file installer và làm theo hướng dẫn.\n",
        "\n",
        "### Cách 2: Dùng Windows Terminal/PowerShell\n",
        "\n",
        "```bash\n",
        "wget https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Windows-x86_64.exe -OutFile mambaforge.exe\n",
        "start /wait \"\" mambaforge.exe /InstallationType=JustMe /RegisterPython=0 /S /D=%UserProfile%\\Mambaforge\n",
        "```\n",
        "\n",
        "## 2. Tích hợp với VS Code\n",
        "\n",
        "### Cài đặt Extensions\n",
        "\n",
        "1. Python (Microsoft)\n",
        "2. Jupyter (Microsoft)\n",
        "\n",
        "### Tạo và Cấu hình Môi trường\n",
        "\n",
        "Tạo file `environment.yml`:\n",
        "\n",
        "```yaml\n",
        "name: ds-project\n",
        "channels:\n",
        "  - conda-forge\n",
        "  - defaults\n",
        "dependencies:\n",
        "  - python=3.10\n",
        "  - ipykernel\n",
        "  - pandas\n",
        "  - numpy\n",
        "  - matplotlib\n",
        "  - scikit-learn\n",
        "  - jupyter\n",
        "```\n",
        "\n",
        "Tạo môi trường từ file:\n",
        "\n",
        "```bash\n",
        "mamba env create -f environment.yml\n",
        "```\n",
        "\n",
        "## 3. Cấu hình VS Code\n",
        "\n",
        "### Chọn Python Interpreter\n",
        "\n",
        "1. Mở Command Palette (`Ctrl + Shift + P`)\n",
        "2. Tìm \"Python: Select Interpreter\"\n",
        "3. Chọn môi trường Mamba vừa tạo\n",
        "\n",
        "### Cấu hình Notebooks\n",
        "\n",
        "- VS Code tự động nhận diện kernel từ môi trường Mamba\n",
        "- Kernel có thể được chọn ở góc phải trên của notebook\n",
        "\n",
        "## 4. Cấu trúc Project Đề Xuất\n",
        "\n",
        "```md\n",
        "project/\n",
        "│\n",
        "├── .vscode/                      # VS Code settings\n",
        "│   ├── settings.json\n",
        "│   └── launch.json\n",
        "│\n",
        "├── data/\n",
        "│   ├── raw/\n",
        "│   └── processed/\n",
        "│\n",
        "├── notebooks/\n",
        "│   ├── 01_exploration.ipynb\n",
        "│   └── 02_analysis.ipynb\n",
        "│\n",
        "├── src/\n",
        "│   └── processing/\n",
        "│       ├── __init__.py\n",
        "│       └── data_processing.py\n",
        "│\n",
        "├── environment.yml\n",
        "├── .gitignore\n",
        "└── README.md\n",
        "```\n",
        "\n",
        "## 5. Cấu hình VS Code Settings\n",
        "\n",
        "Tạo file `.vscode/settings.json`:\n",
        "\n",
        "```json\n",
        "{\n",
        "    \"python.defaultInterpreterPath\": \"${env:USERPROFILE}\\\\Mambaforge\\\\envs\\\\ds-project\\\\python.exe\",\n",
        "    \"jupyter.notebookFileRoot\": \"${workspaceFolder}\",\n",
        "    \"python.analysis.extraPaths\": [\"${workspaceFolder}/src\"],\n",
        "    \"python.formatting.provider\": \"black\",\n",
        "    \"editor.formatOnSave\": true,\n",
        "    \"ruff.enable\": true,\n",
        "    \"ruff.format.args\": [\"--config=pyproject.toml\"],\n",
        "    \"ruff.lint.args\": [\"--config=pyproject.toml\"],\n",
        "    \"mypy.enabled\": true,\n",
        "    \"mypy.configFile\": \"pyproject.toml\"\n",
        "}\n",
        "```\n",
        "\n",
        "## 6. Cấu hình Development Tools\n",
        "\n",
        "### 6.1 Cài đặt Development Dependencies\n",
        "\n",
        "Cập nhật `environment.yml`:\n",
        "\n",
        "```yaml\n",
        "name: ds-project\n",
        "channels:\n",
        "  - conda-forge\n",
        "  - defaults\n",
        "dependencies:\n",
        "  - python=3.10\n",
        "  - ipykernel\n",
        "  - pandas\n",
        "  - numpy\n",
        "  - matplotlib\n",
        "  - scikit-learn\n",
        "  - jupyter\n",
        "  # Dev dependencies\n",
        "  - black\n",
        "  - ruff\n",
        "  - mypy\n",
        "  - pre-commit\n",
        "  - nbqa\n",
        "  - jupytext\n",
        "```\n",
        "\n",
        "### 6.2 Cấu hình pyproject.toml\n",
        "\n",
        "Tạo file `pyproject.toml`:\n",
        "\n",
        "```toml\n",
        "[tool.black]\n",
        "line-length = 88\n",
        "target-version = [\"py310\"]\n",
        "include = '\\.pyi?$'\n",
        "\n",
        "[tool.ruff]\n",
        "line-length = 88\n",
        "target-version = \"py310\"\n",
        "select = [\n",
        "    \"E\",  # pycodestyle\n",
        "    \"F\",  # pyflakes\n",
        "    \"I\",  # isort\n",
        "    \"UP\", # pyupgrade\n",
        "]\n",
        "ignore = []\n",
        "\n",
        "[tool.ruff.isort]\n",
        "known-first-party = [\"src\"]\n",
        "\n",
        "[tool.mypy]\n",
        "python_version = \"3.10\"\n",
        "warn_return_any = true\n",
        "warn_unused_configs = true\n",
        "disallow_untyped_defs = true\n",
        "check_untyped_defs = true\n",
        "\n",
        "[[tool.mypy.overrides]]\n",
        "module = [\n",
        "    \"pandas.*\",\n",
        "    \"numpy.*\",\n",
        "    \"matplotlib.*\",\n",
        "    \"seaborn.*\"\n",
        "]\n",
        "ignore_missing_imports = true\n",
        "```\n",
        "\n",
        "### 6.3 Cấu hình Pre-commit\n",
        "\n",
        "Tạo file `.pre-commit-config.yaml`:\n",
        "\n",
        "```yaml\n",
        "repos:\n",
        "-   repo: https://github.com/pre-commit/pre-commit-hooks\n",
        "    rev: v4.5.0\n",
        "    hooks:\n",
        "    -   id: trailing-whitespace\n",
        "    -   id: end-of-file-fixer\n",
        "    -   id: check-yaml\n",
        "    -   id: check-json\n",
        "    -   id: check-added-large-files\n",
        "        args: ['--maxkb=5000']\n",
        "\n",
        "-   repo: https://github.com/psf/black\n",
        "    rev: 24.1.1\n",
        "    hooks:\n",
        "    -   id: black\n",
        "\n",
        "-   repo: https://github.com/astral-sh/ruff-pre-commit\n",
        "    rev: v0.2.1\n",
        "    hooks:\n",
        "    -   id: ruff\n",
        "        args: [--fix]\n",
        "    -   id: ruff-format\n",
        "\n",
        "-   repo: https://github.com/pre-commit/mirrors-mypy\n",
        "    rev: v1.8.0\n",
        "    hooks:\n",
        "    -   id: mypy\n",
        "        additional_dependencies: [types-all]\n",
        "\n",
        "-   repo: https://github.com/nbQA-dev/nbQA\n",
        "    rev: 1.7.1\n",
        "    hooks:\n",
        "    -   id: nbqa-black\n",
        "        additional_dependencies: [black==24.1.1]\n",
        "    -   id: nbqa-ruff\n",
        "        additional_dependencies: [ruff==0.2.1]\n",
        "```\n",
        "\n",
        "### 6.4 Cấu hình Git Ignore\n",
        "\n",
        "Tạo file `.gitignore`:\n",
        "\n",
        "```gitignore\n",
        "# Python\n",
        "__pycache__/\n",
        "*.py[cod]\n",
        "*$py.class\n",
        "*.so\n",
        ".Python\n",
        "build/\n",
        "develop-eggs/\n",
        "dist/\n",
        "downloads/\n",
        "eggs/\n",
        ".eggs/\n",
        "lib/\n",
        "lib64/\n",
        "parts/\n",
        "sdist/\n",
        "var/\n",
        "wheels/\n",
        "*.egg-info/\n",
        ".installed.cfg\n",
        "*.egg\n",
        "\n",
        "# Jupyter Notebook\n",
        ".ipynb_checkpoints\n",
        "*/.ipynb_checkpoints/*\n",
        "profile_default/\n",
        "ipython_config.py\n",
        "\n",
        "# VS Code\n",
        ".vscode/*\n",
        "!.vscode/settings.json\n",
        "!.vscode/tasks.json\n",
        "!.vscode/launch.json\n",
        "!.vscode/extensions.json\n",
        "\n",
        "# Environment\n",
        ".env\n",
        ".venv\n",
        "env/\n",
        "venv/\n",
        "ENV/\n",
        "env.bak/\n",
        "venv.bak/\n",
        ".conda/\n",
        "conda-env/\n",
        "\n",
        "# Data\n",
        "data/raw/*\n",
        "!data/raw/.gitkeep\n",
        "data/processed/*\n",
        "!data/processed/.gitkeep\n",
        "*.csv\n",
        "*.xlsx\n",
        "*.xls\n",
        "*.db\n",
        "*.sqlite\n",
        "*.h5\n",
        "\n",
        "# Logs\n",
        "logs/\n",
        "*.log\n",
        ".hypothesis/\n",
        ".pytest_cache/\n",
        ".coverage\n",
        "htmlcov/\n",
        "\n",
        "# OS specific\n",
        ".DS_Store\n",
        ".DS_Store?\n",
        "._*\n",
        ".Spotlight-V100\n",
        ".Trashes\n",
        "ehthumbs.db\n",
        "Thumbs.db\n",
        "```\n",
        "\n",
        "### 6.5 Khởi tạo Pre-commit\n",
        "\n",
        "```bash\n",
        "# Activate môi trường\n",
        "mamba activate ds-project\n",
        "\n",
        "# Cài đặt pre-commit hooks\n",
        "pre-commit install\n",
        "\n",
        "# (Tùy chọn) Chạy pre-commit trên tất cả files\n",
        "pre-commit run --all-files\n",
        "```\n",
        "\n",
        "### 6.6 Extensions VS Code cho Notebooks\n",
        "\n",
        "Cài thêm các extensions sau:\n",
        "\n",
        "1. \"Jupyter Notebook Renderers\"\n",
        "2. \"Jupytext for Notebooks\"\n",
        "3. \"Black Formatter\"\n",
        "4. \"Ruff\"\n",
        "5. \"Mypy Type Checker\"\n",
        "\n",
        "### 6.7 Cấu hình Jupytext\n",
        "\n",
        "Tạo file `.jupytext.toml`:\n",
        "\n",
        "```toml\n",
        "formats = \"ipynb,qmd\"\n",
        "\n",
        "[formats]\n",
        "ipynb = {}\n",
        "qmd = {}\n",
        "```\n",
        "\n",
        "## 7. Pro Tips cho Windows\n",
        "\n",
        "### Path Management\n",
        "\n",
        "Sử dụng `pathlib` để xử lý đường dẫn:\n",
        "```python\n",
        "from pathlib import Path\n",
        "data_path = Path(\"data\") / \"raw\" / \"file.csv\"\n",
        "```\n",
        "\n",
        "### Git Configuration\n",
        "\n",
        "Tạo file `.gitignore`:\n",
        "```gitignore\n",
        "# .gitignore\n",
        "data/raw/*\n",
        "data/processed/*\n",
        ".ipynb_checkpoints/\n",
        "__pycache__/\n",
        "*.pyc\n",
        "```\n",
        "\n",
        "### Jupyter trong VS Code\n",
        "\n",
        "- Chạy cell: `Shift + Enter`\n",
        "- Variable explorer có sẵn\n",
        "- Plot viewer tích hợp\n",
        "- Intellisense hoạt động tốt\n",
        "\n",
        "### Debugging\n",
        "\n",
        "- Debugger tích hợp cho cả `.py` và `.ipynb`\n",
        "- Có thể đặt breakpoints trong notebooks\n",
        "\n",
        "## 8. Xử lý Lỗi Thường Gặp\n",
        "\n",
        "1. **Path quá dài trên Windows**\n",
        "   \n",
        "   - Sử dụng đường dẫn ngắn hơn\n",
        "   - Kích hoạt hỗ trợ đường dẫn dài trong Windows\n",
        "\n",
        "2. **Conflict với môi trường Python khác**\n",
        "   \n",
        "   - Đảm bảo PATH được cập nhật đúng\n",
        "   - Kiểm tra `where python` trong terminal\n",
        "\n",
        "3. **Jupyter Kernel không hiển thị**\n",
        "   \n",
        "   - Cài lại `ipykernel`\n",
        "   - Kiểm tra jupyter kernelspec list\n",
        "\n",
        "## 9. Resources Hữu ích\n",
        "\n",
        "- [Mamba Documentation](https://mamba.readthedocs.io/)\n",
        "- [VS Code Python Documentation](https://code.visualstudio.com/docs/python/python-tutorial)\n",
        "- [Jupyter in VS Code](https://code.visualstudio.com/docs/datascience/jupyter-notebooks)\n",
        "\n",
        "## 10. Workflow Đề Xuất\n",
        "\n",
        "1. **Khởi tạo project mới**:\n",
        "\n",
        "```bash\n",
        "# Tạo và activate môi trường\n",
        "mamba env create -f environment.yml\n",
        "mamba activate ds-project\n",
        "\n",
        "# Cài đặt pre-commit hooks\n",
        "pre-commit install\n",
        "```\n",
        "\n",
        "2. **Phát triển**:\n",
        "\n",
        "- Code trong VS Code với các extensions đã cài\n",
        "- Notebooks sẽ tự động được format bởi nbQA\n",
        "- Pre-commit sẽ kiểm tra code trước mỗi commit\n",
        "\n",
        "3. **Commit Changes**:\n",
        "\n",
        "```bash\n",
        "git add .\n",
        "git commit -m \"your message\"\n",
        "# Pre-commit sẽ tự động chạy các checks\n",
        "```\n",
        "\n",
        "4. **Update Dependencies**:\n",
        "\n",
        "```bash\n",
        "# Thêm package mới\n",
        "mamba install package-name\n",
        "# Export environment\n",
        "mamba env export > environment.yml\n",
        "```\n",
        "\n",
        "## Bonus: nếu muốn import một module từ `src` trong `notebook.ipynb` thì làm thế nào?\n"
      ],
      "id": "499f10bc"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "# Trong notebook của bạn (ví dụ notebooks/analysis.ipynb)\n",
        "\n",
        "# 1. Setup path\n",
        "import sys\n",
        "from pathlib import Path\n",
        "project_root = str(Path.cwd().parent)\n",
        "if project_root not in sys.path:\n",
        "    sys.path.append(project_root)\n",
        "\n",
        "# 2. Import function\n",
        "from src.processing.data_preprocessing import process_data, clean_data\n",
        "\n",
        "# 3. Sử dụng function\n",
        "df_processed = process_data(df_raw)"
      ],
      "id": "56bc7b9f",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "Với lưu ý:\n",
        "\n",
        "- Đảm bảo có file `__init__.py` trong mỗi thư mục Python\n",
        "- Không nên dùng relative imports (`from ...src.processing`) vì dễ gây lỗi\n",
        "- Nên đặt tên module và function theo PEP 8\n",
        "- Trong `data_preprocessing.py` nên có docstring mô tả function\n"
      ],
      "id": "25d99952"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "# src/processing/data_preprocessing.py\n",
        "\n",
        "def process_data(df):\n",
        "    \"\"\"Process the input dataframe.\n",
        "    \n",
        "    Args:\n",
        "        df (pd.DataFrame): Input dataframe\n",
        "        \n",
        "    Returns:\n",
        "        pd.DataFrame: Processed dataframe\n",
        "    \"\"\"\n",
        "    # your code here\n",
        "    return processed_df"
      ],
      "id": "d63d2ae0",
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "C:\\Users\\tuanlk\\AppData\\Local\\Programs\\Python\\Python313\\share\\jupyter\\kernels\\python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}