<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Le Khac Tuan</title>
<link>https://lktuan.github.io/blog.html</link>
<atom:link href="https://lktuan.github.io/blog.xml" rel="self" type="application/rss+xml"/>
<description>I am a Risk Modeler 🚀</description>
<generator>quarto-1.4.554</generator>
<lastBuildDate>Sun, 23 Jun 2024 17:00:00 GMT</lastBuildDate>
<item>
  <title>Hi Docker 🐳</title>
  <dc:creator>Tuan Le Khac</dc:creator>
  <link>https://lktuan.github.io/blog/2024-06-24-docker/</link>
  <description><![CDATA[ 





<div class="columns">
<div class="column" style="width:40%;">
<p>Xuất phát là dân Kinh tế và hiện tại đi theo hướng DS, mình không giỏi làm việc với các công cụ phát triển phần mềm, Docker là một trong số đó. Tuy nhiên trong một dự án Data của team, mình cần sử dụng các công vụ như Airflow, Airbyte hay DBT. Hầu hết các setup đều cần Docker. Do đó thì, phải học thôi!</p>
<p>Mình học tập theo video <a href="https://www.youtube.com/watch?v=Gh1Sgknc6Fg&amp;t=358s">“Hướng dẫn từ A-Z tự xây dựng ứng dụng với Docker”</a> của anh <a href="https://www.youtube.com/@vietnh1009"><strong>Việt Nguyễn AI</strong></a>.</p>
</div><div class="column" style="width:10%;">
<!-- empty column to create gap -->
</div><div class="column" style="width:50%;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lktuan.github.io/blog/2024-06-24-docker/vs_cot_song.png" class="img-fluid figure-img" style="width:100.0%"></p>
<figcaption>VS Code-song 😪, ảnh nhặt từ J2Team community</figcaption>
</figure>
</div>
</div>
</div>
<section id="introduction-docker-desktop-docker-image-vs-docker-container" class="level1">
<h1>Introduction / Docker Desktop / Docker Image vs Docker Container</h1>
<ul>
<li>Cách cài đặt: trên trang get started, phiên bản Window (rất dễ để mình follow do mình cũng xài Win).</li>
<li>Nhắc lại về Docker Image và Docker Container: giống như Class và Object trong OOP, Image chỉ cho chúng ta biết một cách lý thuyết về thực thể đó, khi dựa vào lý thuyết đó tạo ra một Container thì chũng ta mới có một thực thể dự vào lý thuyết đó.</li>
<li>Trước Docker Image, còn có Dockerfile (giống như công thức nấu ăn) giúp định nghĩa một số phương thức tạo ra Image.</li>
</ul>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="1">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 100.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lktuan.github.io/blog/2024-06-24-docker/class_vs_object.png" class="img-fluid figure-img" style="width:100.0%"></p>
<figcaption>Image vs Container ~ Class vs Object</figcaption>
</figure>
</div>
</div>
</div>
</div>
</section>
<section id="docker-tutorial" class="level1">
<h1>Docker tutorial</h1>
<p>Thực hành theo tutorial trên Docker Desktop: “How do I run a container?”</p>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Tip
</div>
</div>
<div class="callout-body-container callout-body">
<p>Xem nội dung của một file thông qua powershell:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> file_name</span></code></pre></div>
<p>Trong trường hợp thực hành của mình là</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> welcome-to-docker</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> .<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\D</span>ockerfile</span></code></pre></div>
</div>
</div>
<p>Nội dung Dockerfile:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource md number-lines code-with-copy"><code class="sourceCode markdown"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"># Start your image with a node base image</span></span>
<span id="cb3-2">FROM node:18-alpine </span>
<span id="cb3-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"># Mỗi custome docker image đều dựa vào một base image, như một class con kế thừa một class cha. Nơi tìm Docker Image: Docker Hub.</span></span>
<span id="cb3-4"></span>
<span id="cb3-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"># The /app directory should act as the main application directory</span></span>
<span id="cb3-6">WORKDIR /app</span>
<span id="cb3-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"># Chúng ta làm việc ở bên trong thư mục nào (nếu không đề cập thì sẽ tạo trong một thư mục mặc định)</span></span>
<span id="cb3-8"></span>
<span id="cb3-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"># Copy the app package and package-lock.json file</span></span>
<span id="cb3-10">COPY package*.json ./</span>
<span id="cb3-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"># Copy các file trong máy vào bên trong Docker Image - file này chắc là file cấu hình</span></span>
<span id="cb3-12"></span>
<span id="cb3-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"># Copy local directories to the current local directory of our docker image (/app)</span></span>
<span id="cb3-14">COPY ./src ./src</span>
<span id="cb3-15">COPY ./public ./public</span>
<span id="cb3-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"># Copy các thư mục source</span></span>
<span id="cb3-17"></span>
<span id="cb3-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"># Install node packages, install serve, build the app, and remove dependencies at the end</span></span>
<span id="cb3-19">RUN npm install \</span>
<span id="cb3-20">    &amp;&amp; npm install -g serve \</span>
<span id="cb3-21">    &amp;&amp; npm run build \</span>
<span id="cb3-22">    &amp;&amp; rm -fr node_modules</span>
<span id="cb3-23"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"># Run, cài đặt các thư viện, package</span></span>
<span id="cb3-24"></span>
<span id="cb3-25">EXPOSE 3000</span>
<span id="cb3-26"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"># Mở một cổng ở trong Docker container, sau này chúng ta sẽ kết nối cổng này với một cổng trong máy của chúng ta.</span></span>
<span id="cb3-27"></span>
<span id="cb3-28"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"># Start the app using serve command</span></span>
<span id="cb3-29">CMD <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> "serve", "-s", "build" </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb3-30"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"># Chúng ta muốn chạy lệnh gì trong CMD, chỉ một lệnh CMD (lệnh cuối cùng) sẽ được sử dụng trong một Dockerfile.</span></span></code></pre></div>
<p>Build fist image:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> build <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-t</span> welcome-to-docker .</span></code></pre></div>
<p>Breaking down this command:</p>
<blockquote class="blockquote">
<p>The -t flag tags your image with a name. (welcome-to-docker in this case). And the . lets Docker know where it can find the Dockerfile.</p>
</blockquote>
</section>
<section id="tự-xây-dựng-docker-image-để-huấn-luyện-mô-hình-ai" class="level1">
<h1>Tự xây dựng Docker Image để huấn luyện mô hình AI</h1>
<section id="giới-thiệu-về-script-python" class="level2">
<h2 class="anchored" data-anchor-id="giới-thiệu-về-script-python">Giới thiệu về script Python</h2>
<p>Mình có một file python đơn giản, huấn luyện một mô hình <code>ml_project</code> Random forest để nhận diện hoa diễn vĩ từ bộ <code>iris</code> dataset với thư viện <code>sklearn</code> như sau:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>iris_classification.py</strong></pre>
</div>
<div class="sourceCode" id="cb5" data-filename="iris_classification.py" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| eval: false</span></span>
<span id="cb5-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># importing required libraries</span></span>
<span id="cb5-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># importing Scikit-learn library and datasets package</span></span>
<span id="cb5-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> datasets</span>
<span id="cb5-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Splitting arrays or matrices into random train and test subsets</span></span>
<span id="cb5-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.model_selection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> train_test_split</span>
<span id="cb5-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># importing random forest classifier from assemble module</span></span>
<span id="cb5-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.ensemble <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> RandomForestClassifier</span>
<span id="cb5-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># importing scaler</span></span>
<span id="cb5-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.preprocessing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> StandardScaler</span>
<span id="cb5-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># metrics are used to find accuracy or error</span></span>
<span id="cb5-12"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.metrics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> accuracy_score </span>
<span id="cb5-13"></span>
<span id="cb5-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Loading the iris plants dataset (classification)</span></span>
<span id="cb5-15">iris <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> datasets.load_iris()</span>
<span id="cb5-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># dividing the datasets into two parts i.e. training datasets and test datasets</span></span>
<span id="cb5-17">X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> iris.data[:, [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]]</span>
<span id="cb5-18">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> iris.target</span>
<span id="cb5-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># i.e. 70 % training dataset and 30 % test datasets</span></span>
<span id="cb5-20">X_train, X_test, y_train, y_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_test_split(X, y, test_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.20</span>, random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb5-21"></span>
<span id="cb5-22"></span>
<span id="cb5-23">scaler <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StandardScaler()</span>
<span id="cb5-24">x_train <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> scaler.fit_transform(X_train)</span>
<span id="cb5-25">x_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> scaler.transform(X_test)</span>
<span id="cb5-26"></span>
<span id="cb5-27">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RandomForestClassifier()</span>
<span id="cb5-28">model.fit(x_train, y_train)</span>
<span id="cb5-29">y_pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.predict(x_test)</span>
<span id="cb5-30"></span>
<span id="cb5-31"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> pred, label <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(y_pred, y_test):</span>
<span id="cb5-32">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Prediction: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">. Label: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(pred, label))</span>
<span id="cb5-33"></span>
<span id="cb5-34"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Accuracy: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%.2f</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> accuracy_score(y_test, y_pred))</span></code></pre></div>
</div>
</section>
<section id="tìm-base-image-trên-docker-hub" class="level2">
<h2 class="anchored" data-anchor-id="tìm-base-image-trên-docker-hub">Tìm Base Image trên Docker Hub</h2>
<p>Chúng ta có thể tìm các class cha ~ base image trên <code>hub.docker.com</code>, chúng ta muốn app ml này chạy trên <code>ubuntu</code>, do đó có thể start từ image <code>ubuntu</code>.</p>
<p>Mình xây dựng <code>Dockerfile</code> một cách đơn giản như sau:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Dockerfile</strong></pre>
</div>
<div class="sourceCode" id="cb6" data-filename="Dockerfile" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">FROM</span> ubuntu</span></code></pre></div>
</div>
<p>Từ Dockerfile này mình có thể build image thông qua command sau:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-t</span> ml_project .</span></code></pre></div>
<p>Run một docker container (container vừa run sẽ lập tức exit):</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> run image_name container_name</span></code></pre></div>
<p>Nếu muốn “chui” vào bên trong container:</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> run <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-it</span> image_name container_name bash</span></code></pre></div>
<p><code>-it</code> nghĩa là chúng ta chạy container dưới <strong>interactive</strong> mode, <code>bash</code> nghĩa là chạy trong <strong>bash</strong> mode, chúng ta có thể thực hiện các câu lệnh bash từ đây.</p>
</section>
<section id="cài-đặt-các-thư-viện-trong-docker-image" class="level2">
<h2 class="anchored" data-anchor-id="cài-đặt-các-thư-viện-trong-docker-image">Cài đặt các thư viện trong Docker Image</h2>
<p>Bây giờ ta mới chỉ có duy nhất hệ điều hành ubuntu trong container, chưa có python để chạy ứng dụng. Trong ubuntu, ta dùng <code>apt-get</code> để cài đặt python. Chúng ta sẽ thực hiện các lệnh trên bash ở container hiện tại trước, sau đó mới đưa vào Dockerfile với lệnh <code>RUN</code>. Dưới đây là Dockerfile cập nhật:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Dockerfile</strong></pre>
</div>
<div class="sourceCode" id="cb10" data-filename="Dockerfile" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">FROM</span> ubuntu</span>
<span id="cb10-2"></span>
<span id="cb10-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RUN</span> apt-get update</span>
<span id="cb10-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RUN</span> apt-get <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span> install python3</span>
<span id="cb10-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># -y tự động điền yes khi có các câu hỏi Y/N</span></span></code></pre></div>
</div>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Tip
</div>
</div>
<div class="callout-body-container callout-body">
<p>Sử dụng exit() hoặc Ctrl-D để thoát Python mode hoặc Container trong Powershell.</p>
</div>
</div>
<p>Chúng lại truy cập bash của container đang chạy từ Docker desktop hoặc Powershell:</p>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="1">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 100.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lktuan.github.io/blog/2024-06-24-docker/bash_inside_container.png" class="img-fluid figure-img" style="width:100.0%"></p>
<figcaption>Bash inside container</figcaption>
</figure>
</div>
</div>
</div>
</div>
</section>
<section id="copy-dữ-liệu-từ-host-vào-docker-image" class="level2">
<h2 class="anchored" data-anchor-id="copy-dữ-liệu-từ-host-vào-docker-image">Copy dữ liệu từ host vào Docker Image</h2>
<p>Bây giờ chúng ta muốn rằng sau khi vào container, chúng ta không ở thư mục <code>root</code> nữa mà ở <code>src</code> ~ ứng chúng của chúng ta, với mục đích dễ làm việc hơn. Chúng ta thêm cú pháp <code>WORKDIR /src</code>. Đồng thời cũng cần cài đặt <code>sklearn</code> để ứng dụng có thể chạy. Đồng thời, sau khi tất cả được cài đặt, mình cũng muốn chạy luôn ứng dụng, sử dụng <code>CMD</code>.</p>
<p>Cập nhật Dockerfile như sau:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Dockerfile</strong></pre>
</div>
<div class="sourceCode" id="cb11" data-filename="Dockerfile" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">FROM</span> ubuntu</span>
<span id="cb11-2"></span>
<span id="cb11-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">WORKDIR</span> /src</span>
<span id="cb11-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Khi ở trong docker container, mặc định chúng ta sẽ ở root, giờ ta muốn khi vào container, chúng ta sẽ vào /src</span></span>
<span id="cb11-5"></span>
<span id="cb11-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RUN</span> apt-get update</span>
<span id="cb11-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RUN</span> apt-get <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span> install python3</span>
<span id="cb11-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RUN</span> apt-get <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span> install python3-sklearn</span>
<span id="cb11-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># -y tự động điền yes khi có các câu hỏi Y/N</span></span>
<span id="cb11-10"></span>
<span id="cb11-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">COPY</span> iris_classification.py ./iris_classification.py </span>
<span id="cb11-12"></span>
<span id="cb11-13"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">CMD</span> [ <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"python3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"iris_classification.py"</span> ]</span></code></pre></div>
</div>
</section>
</section>
<section id="end" class="level1">
<h1>End</h1>
<p>Sau khi hoàn thiện, mình không cần chạy containter ở interactive mode và tương tác bằng bash nữa. Lệnh run có thể viết gọn như sau:</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> run ml_project</span></code></pre></div>
<p>Bài thực hành đến đây kết thúc 🎉.</p>


<!-- -->

</section>

 ]]></description>
  <category>Docker</category>
  <category>Python</category>
  <guid>https://lktuan.github.io/blog/2024-06-24-docker/</guid>
  <pubDate>Sun, 23 Jun 2024 17:00:00 GMT</pubDate>
  <media:content url="https://lktuan.github.io/blog/2024-06-24-docker/docker.png" medium="image" type="image/png" height="76" width="144"/>
</item>
<item>
  <title>Observable Framework try-out</title>
  <dc:creator>Tuan Le Khac</dc:creator>
  <link>https://lktuan.github.io/blog/2024-06-19-observable/</link>
  <description><![CDATA[ 





<p>I’ve heard that Observable released their Framework as open source in April 2024, and Quarto also supported Observable natively since version 1.4 (?), thus decided to give it a try. Could not agree more with their slogan:</p>
<blockquote class="blockquote">
<p>The best dashboards are built with <code>code</code>.</p>
</blockquote>
<p>This is my <a href="https://github.com/lktuan/first-observable-project">repo</a> for the practice.</p>
<p>🚀 <strong>Observable Framwork</strong> <a href="https://observablehq.com/framework/">documentation</a>.</p>
<blockquote class="blockquote">
<p>Observable Framework — or “Framework” for short — is an open-source static-site generator for data apps. By data app we mean an application that is primarily a display of data. Data apps help you derive insights (to understand) and evaluate potential decisions (to take action).</p>
</blockquote>
<p>It can be a set of coordinated <strong>interactive visualizations</strong> for “self-service” analysis, a <strong>live dashboard</strong>, or a <strong>point-in-time report</strong> that combines graphics and prose to present in-depth analysis.</p>
<p>Why use Framework for your data app?</p>
<ul>
<li>The power of code: Empowered by D3 and Observable Plot library, there’s no limit to what you can create.</li>
<li>Polyglot meets the web: Framework is <em>polyglot</em> ~ it brings multiple languages together.</li>
<li>Static-site architecture: Framework’s data architecture practically forces your app to be fast because data is precomputed at build time. Furthermore, data snapshots can be highly-optimized (and aggregated and anonymized), minimizing what you send to the client.</li>
<li>Automatic reactivity: Instead of wrangling hooks or signals, you can write declarative code in vanilla JavaScript that automatically re-runs whenever variables change, like a spreadsheet.</li>
<li>An end-to-end solution: Well-designed tools let developers focus on high-value, creative work and build better apps.</li>
</ul>
<p>Let’s start!</p>
<section id="inititate-a-new-project" class="level1">
<h1>Inititate a new Project</h1>
<p>🚀 <strong>Observable Framwork</strong> <a href="">getting started</a></p>
<p>The prerequisite is we must have <a href="https://docs.npmjs.com/downloading-and-installing-node-js-and-npm"><code>npm</code></a> installed on our machine. Running <code>npm -v</code>, I know that I have version <code>10.5.0</code> installed.</p>
<p>We first create a folder and navigate to it:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| eval: false</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| echo: true</span></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mkdir</span> first-observable-project</span>
<span id="cb1-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> first-observable-project</span></code></pre></div>
<p>Then simply run this command to initiate the project:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| eval: false</span></span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| echo: true</span></span>
<span id="cb2-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">npm</span> init <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"@observablehq"</span></span></code></pre></div>
<p>We gotta fill some basic params:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| eval: false</span></span>
<span id="cb3-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| echo: true</span></span>
<span id="cb3-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">┌</span>   observable create  v1.5.1</span>
<span id="cb3-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span></span>
<span id="cb3-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">◇</span>  Where to create your project<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">?</span></span>
<span id="cb3-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>  hi-observable</span>
<span id="cb3-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span></span>
<span id="cb3-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">◇</span>  What to title your project<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">?</span></span>
<span id="cb3-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>  Hi Observable</span>
<span id="cb3-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span></span>
<span id="cb3-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">◇</span>  Include sample files to help you get started<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">?</span></span>
<span id="cb3-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>  No</span>
<span id="cb3-13"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span></span>
<span id="cb3-14"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">◇</span>  Install dependencies<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">?</span></span>
<span id="cb3-15"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>  Yes, via npm</span>
<span id="cb3-16"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span></span>
<span id="cb3-17"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">◇</span>  Initialize git repository<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">?</span></span>
<span id="cb3-18"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>  No</span>
<span id="cb3-19"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span></span>
<span id="cb3-20"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">◇</span>  Installed! 🎉</span>
<span id="cb3-21"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span></span>
<span id="cb3-22"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">◇</span>  Next steps… ──────╮</span>
<span id="cb3-23"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>                    │</span>
<span id="cb3-24"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>  cd hi-observable  │</span>
<span id="cb3-25"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>  npm run dev       │</span>
<span id="cb3-26"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>                    │</span>
<span id="cb3-27"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├────────────────────╯</span></span>
<span id="cb3-28"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span></span>
<span id="cb3-29"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">└</span>  Problems<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">?</span> https://observablehq.com/framework/getting-started</span></code></pre></div>
<p>We can now easilly preview the app with <code>npm run dev</code>, and access out dashboard via <code>http://127.0.0.1:3000/</code>. Let’s play a little bit, we can modify the <code>h1</code> tags in <code>docs\index.md</code>, then the dashboard will be updated once we save the file, instantly. Cool!</p>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="1">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 100.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lktuan.github.io/blog/2024-06-19-observable/ojs_fig_1.png" class="img-fluid figure-img" style="width:100.0%"></p>
<figcaption>Home page layout</figcaption>
</figure>
</div>
</div>
</div>
</div>
<p>Here is the structure of my project (after adding those Data Loader, SQL, etc steps below):</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource ini number-lines code-with-copy"><code class="sourceCode ini"></code></pre></div>
<section id="self-hosting" class="level2">
<h2 class="anchored" data-anchor-id="self-hosting">Self hosting</h2>
<p>Wou don’t have to deploy to Observable — Framework projects are simply static sites, so we can host them anywhere. With <code>npm</code>, we can run <code>npm run build</code>, which will generates the <code>dist</code> directory. We can then copy this directory to your static site server or preferred hosting service, like <a href="https://github.com/http-party/http-server"><code>http-server</code></a>, with command <code>npx http-server dist</code>.</p>
<p>For deployment, see the final section at the bottom of this article.</p>
</section>
</section>
<section id="write-first-data-loader" class="level1">
<h1>Write first Data Loader</h1>
<p>In Observable project we can write Data Loader in JavaScript, Python, R or any other languages. Data Loader helps you to (1) minimize file sizes and (2) reduce client side processing.</p>
<p>A data loader file has the name like: <code>dataloader.data_extension.engine_extension</code>. For example, with the American weather forecast API we can have 2 kinds of Data Loader as below:</p>
<p><strong>Javascript 🟨</strong>:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>forecast.json.js</strong></pre>
</div>
<div class="sourceCode" id="cb5" data-filename="forecast.json.js" style="background: #f1f3f5;"><pre class="sourceCode numberSource julia number-lines code-with-copy"><code class="sourceCode julia"><span id="cb5-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> longitude <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">122.47</span>;</span>
<span id="cb5-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> latitude <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">37.8</span>;</span>
<span id="cb5-3"></span>
<span id="cb5-4">async <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">json</span>(url) {</span>
<span id="cb5-5">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> await <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fetch</span>(url, {headers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"User-Agent"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(observablehq.com, support@observablehq.com)"</span>}});</span>
<span id="cb5-6">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (!response.ok) throw <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Error</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">`fetch failed: ${response.status}`</span>);</span>
<span id="cb5-7">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> await response.<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">json</span>();</span>
<span id="cb5-8">}</span>
<span id="cb5-9"></span>
<span id="cb5-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> station <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> await <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">json</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">`https://api.weather.gov/points/${latitude},${longitude}`</span>);</span>
<span id="cb5-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> forecast <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> await <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">json</span>(station.properties.forecastHourly);</span>
<span id="cb5-12"></span>
<span id="cb5-13">process.<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">stdout</span>.<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write</span>(JSON.<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stringify</span>(forecast));</span></code></pre></div>
</div>
<p><strong>Python 🐍</strong>:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>forecast.json.py</strong></pre>
</div>
<div class="sourceCode" id="cb6" data-filename="forecast.json.py" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb6-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> requests</span>
<span id="cb6-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> sys</span>
<span id="cb6-4"></span>
<span id="cb6-5">longitude <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">122.47</span></span>
<span id="cb6-6">latitude <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">37.80</span></span>
<span id="cb6-7"></span>
<span id="cb6-8">station <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> requests.get(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"https://api.weather.gov/points/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>latitude<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">,</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>longitude<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>).json()</span>
<span id="cb6-9">forecast <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> requests.get(station[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"properties"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"forecastHourly"</span>]).json()</span>
<span id="cb6-10"></span>
<span id="cb6-11">json.dump(forecast, sys.stdout)</span></code></pre></div>
</div>
<p>Run the data loader, testing if it work:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| eval: false</span></span>
<span id="cb7-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| echo: true</span></span>
<span id="cb7-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">node</span> hi-observable<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\d</span>ocs<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\d</span>ata<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\f</span>orecast.json.js</span>
<span id="cb7-4"></span>
<span id="cb7-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># or</span></span>
<span id="cb7-6"></span>
<span id="cb7-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> hi-observable<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\d</span>ocs<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\d</span>ata<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\f</span>orecast.json.py</span></code></pre></div>
<p>Now if we refresh the dashboard page, the weather forecasting tab should be there. My first run was failed as I miss a comma in JS file 😂. If we change the data loader, the dashboard will change concurrently.</p>
</section>
<section id="sql-in-observable-framework" class="level1">
<h1>SQL in Observable Framework</h1>
</section>
<section id="grids-cards-and-themes" class="level1">
<h1>Grids, Cards, and Themes</h1>
<p>The <code>Grid</code> class allow us to organize multiple vizualization in a denser format, like a dashboard. The <code>Grid</code> class declares a grid container.</p>
</section>
<section id="deployment-a-project" class="level1">
<h1>Deployment a Project</h1>
</section>
<section id="imports-from-npm-local-files-remote-urls-and-lazy-loading" class="level1">
<h1>Imports: from npm, local files, remote URLs, and lazy loading</h1>


<!-- -->

</section>

 ]]></description>
  <category>Dashboard</category>
  <category>Observable</category>
  <category>til</category>
  <guid>https://lktuan.github.io/blog/2024-06-19-observable/</guid>
  <pubDate>Tue, 18 Jun 2024 17:00:00 GMT</pubDate>
  <media:content url="https://lktuan.github.io/blog/2024-06-19-observable/ojs_forum.png" medium="image" type="image/png"/>
</item>
<item>
  <title>NN-Z2H Lesson 1: The spelled-out intro to neural networks and backpropagation - building micrograd</title>
  <dc:creator>Tuan Le Khac</dc:creator>
  <link>https://lktuan.github.io/blog/2024-06-17-nn-z2h-p1/</link>
  <description><![CDATA[ 





<p><strong>Upfront-note</strong>: There are also greate resources in Vietnamese for learning Backpropagation, for e.g.:</p>
<ol type="1">
<li>Blog <a href="https://machinelearningcoban.com/2017/02/24/mlp/">machinelearningcoban</a></li>
<li>Blog <a href="https://dominhhai.github.io/vi/2018/04/nn-bp/">dominhhai</a></li>
</ol>
<section id="micrograd-from-scratch-yayy" class="level1 page-columns page-full">
<h1>MicroGrad from scratch Yayy!</h1>
<p><a href="https://github.com/karpathy/micrograd"><strong>🚀 MicroGrad repo</strong></a> <a href="https://www.youtube.com/watch?v=VMj-3S1tku0&amp;list=PLAqhIrjkxbuWI23v9cThsA9GvCAUhRvKZ"><strong>🔥 Video Lecture</strong></a></p>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="1">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 100.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://media.geeksforgeeks.org/wp-content/uploads/20240217152156/Frame-13.png" class="img-fluid figure-img" style="width:100.0%"></p>
<figcaption>Backpropagation in Neural Networks, photo credit to <a href="https://www.geeksforgeeks.org/backpropagation-in-neural-network/">GeekforGeek</a></figcaption>
</figure>
</div>
</div>
</div>
</div>
<section id="intro-micrograd-overview---what-does-your-neural-network-training-look-like-under-the-hood" class="level2">
<h2 class="anchored" data-anchor-id="intro-micrograd-overview---what-does-your-neural-network-training-look-like-under-the-hood">intro &amp; micrograd overview - what does your neural network training look like under the hood?</h2>
<p>What is MicroGrad ❓: a tiny <strong>auto-grad</strong> (automatic gradient) engine, implement of <strong>backpropagation</strong> ~ itertively tune the weight of that nn to minimize the loss function -&gt; improve the accuracy of the neural network. Backpropagation will be the mathematical core of any modern deep neutral network like, say <code>pytorch</code>, or <code>jaxx</code>.</p>
<p>Installation: <code>pip install micrograd</code></p>
<p>Example:</p>
<div id="b9df0d96" class="cell" data-execution_count="1">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="annotated-cell-1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python code-annotation-code number-lines code-with-copy code-annotated"><code class="sourceCode python"><span id="annotated-cell-1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> micrograd.engine <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Value</span>
<span id="annotated-cell-1-2"></span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-1" data-target-annotation="1">1</button><span id="annotated-cell-1-3" class="code-annotation-target">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Value(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.0</span>)</span>
<span id="annotated-cell-1-4">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Value(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span>)</span>
<span id="annotated-cell-1-5">c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b</span>
<span id="annotated-cell-1-6">d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="annotated-cell-1-7">c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="annotated-cell-1-8">c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>a)</span>
<span id="annotated-cell-1-9">d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> a).relu()</span>
<span id="annotated-cell-1-10">d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> a).relu()</span>
<span id="annotated-cell-1-11">e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> d</span>
<span id="annotated-cell-1-12">f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> e<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="annotated-cell-1-13">g <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span></span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-1" data-target-annotation="2">2</button><span id="annotated-cell-1-14" class="code-annotation-target">g <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">10.0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> f</span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-1" data-target-annotation="3">3</button><span id="annotated-cell-1-15" class="code-annotation-target"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>g<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.4f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># prints 24.7041, the outcome of this forward pass</span></span>
<span id="annotated-cell-1-16">g.backward()</span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-1" data-target-annotation="4">4</button><span id="annotated-cell-1-17" class="code-annotation-target"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>a<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>grad<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.4f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># prints 138.8338, i.e. the numerical value of dg/da</span></span>
<span id="annotated-cell-1-18"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>b<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>grad<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.4f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># prints 645.5773, i.e. the numerical value of dg/db</span></span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
</details>
<div class="cell-annotation">
<dl class="code-annotation-container-hidden code-annotation-container-grid">
<dt data-target-cell="annotated-cell-1" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-1" data-code-lines="3" data-code-annotation="1">Micrograd allows you to build mathematical expressions, in this case <code>a</code> and <code>b</code> are inputs, wrapped in <code>Value</code> object with value equal to <code>-4.0</code> and <code>2.0</code>, respectively.</span>
</dd>
<dt data-target-cell="annotated-cell-1" data-target-annotation="2">2</dt>
<dd>
<span data-code-cell="annotated-cell-1" data-code-lines="14" data-code-annotation="2"><code>a</code> and <code>b</code> are transformed to <code>c</code>, <code>d</code>, <code>e</code> and eventually <code>f</code>, <code>g</code>. Mathematical operators are implemented, like <code>+</code>, <code>*</code>, <code>**</code>, even <code>relu()</code>.</span>
</dd>
<dt data-target-cell="annotated-cell-1" data-target-annotation="3">3</dt>
<dd>
<span data-code-cell="annotated-cell-1" data-code-lines="15" data-code-annotation="3"><code>Value</code> object contains <code>data</code>, and <code>grad</code>.</span>
</dd>
<dt data-target-cell="annotated-cell-1" data-target-annotation="4">4</dt>
<dd>
<span data-code-cell="annotated-cell-1" data-code-lines="17" data-code-annotation="4">Call <code>backpropagation()</code> process.</span>
</dd>
</dl>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>24.7041
138.8338
645.5773</code></pre>
</div>
</div>
</section>
<section id="derivative-of-a-simple-function-with-one-input" class="level2">
<h2 class="anchored" data-anchor-id="derivative-of-a-simple-function-with-one-input">derivative of a simple function with one input</h2>
<p>❓What exactly is derivative❓</p>
<div id="f5593771" class="cell" data-execution_count="2">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> math</span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb2-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb2-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>matplotlib inline</span></code></pre></div>
</details>
</div>
<p>A simple quadratic function:</p>
<div id="bad2c0f5" class="cell" data-execution_count="3">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> f(x):</span>
<span id="cb3-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span></code></pre></div>
</details>
</div>
<div id="86db4db7" class="cell" data-execution_count="4">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb4-1">f(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.0</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="4">
<pre><code>20.0</code></pre>
</div>
</div>
<p>Input also can be an array, we can plot it for visibility.</p>
<div id="09716b95" class="cell" data-execution_count="5">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb6-1">xs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span>)</span>
<span id="cb6-2">ys <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f(xs)</span>
<span id="cb6-3">plt.plot(xs, ys)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://lktuan.github.io/blog/2024-06-17-nn-z2h-p1/index_files/figure-html/cell-6-output-1.png" width="575" height="411" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<p>If we bump up a litle value <code>h</code> of <code>x</code>, how <code>f(x)</code> will response?</p>
<div id="47f820a3" class="cell" data-execution_count="6">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="annotated-cell-6" style="background: #f1f3f5;"><pre class="sourceCode numberSource python code-annotation-code number-lines code-with-copy code-annotated"><code class="sourceCode python"><button class="code-annotation-anchor" data-target-cell="annotated-cell-6" data-target-annotation="1">1</button><span id="annotated-cell-6-1" class="code-annotation-target">h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.000000000001</span></span>
<span id="annotated-cell-6-2">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.0</span></span>
<span id="annotated-cell-6-3">( f(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>h) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> f(x) ) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> h</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
</details>
<div class="cell-annotation">
<dl class="code-annotation-container-hidden code-annotation-container-grid">
<dt data-target-cell="annotated-cell-6" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-6" data-code-lines="1" data-code-annotation="1">Change the value of <code>h</code> from <code>0.0001</code> to be <code>0.00000...0001</code> -&gt; the slope value comes to <code>14</code> (at the value of <code>3.0</code> of <code>x</code>).</span>
</dd>
</dl>
</div>
<div class="cell-output cell-output-display" data-execution_count="6">
<pre><code>14.001244608152774</code></pre>
</div>
</div>
<p>Try for <code>x = -3.0</code>, <code>x = 5.0</code>, we get different values of the slope, for <code>x = 2/3</code>, the slope is zero. Let’s get more complex.</p>
</section>
<section id="derivative-of-a-function-with-multiple-inputs" class="level2">
<h2 class="anchored" data-anchor-id="derivative-of-a-function-with-multiple-inputs">derivative of a function with multiple inputs</h2>
<div id="0d2be48a" class="cell" data-execution_count="7">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb8-1">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span></span>
<span id="cb8-2">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.0</span></span>
<span id="cb8-3">c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">10.0</span></span>
<span id="cb8-4">d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> c</span>
<span id="cb8-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(d)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>4.0</code></pre>
</div>
</div>
<p>Put our bump-up element to this multi-variables function:</p>
<div id="c8b804a2" class="cell" data-execution_count="8">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="annotated-cell-8" style="background: #f1f3f5;"><pre class="sourceCode numberSource python code-annotation-code number-lines code-with-copy code-annotated"><code class="sourceCode python"><span id="annotated-cell-8-1">h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.001</span></span>
<span id="annotated-cell-8-2"></span>
<span id="annotated-cell-8-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># input</span></span>
<span id="annotated-cell-8-4">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span></span>
<span id="annotated-cell-8-5">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.0</span></span>
<span id="annotated-cell-8-6">c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">10.0</span></span>
<span id="annotated-cell-8-7"></span>
<span id="annotated-cell-8-8">d1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> c</span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-8" data-target-annotation="1">1</button><span id="annotated-cell-8-9" class="code-annotation-target">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> h</span>
<span id="annotated-cell-8-10">d2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> c</span>
<span id="annotated-cell-8-11"></span>
<span id="annotated-cell-8-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'d1: '</span>, d1)</span>
<span id="annotated-cell-8-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'d2: '</span>, d2)</span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-8" data-target-annotation="2">2</button><span id="annotated-cell-8-14" class="code-annotation-target"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'slope: '</span>, (d2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> d1)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>h)</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
</details>
<div class="cell-annotation">
<dl class="code-annotation-container-hidden code-annotation-container-grid">
<dt data-target-cell="annotated-cell-8" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-8" data-code-lines="9" data-code-annotation="1">Do the same for <code>b</code>, <code>c</code>, we’ll get different slopes.</span>
</dd>
<dt data-target-cell="annotated-cell-8" data-target-annotation="2">2</dt>
<dd>
<span data-code-cell="annotated-cell-8" data-code-lines="14" data-code-annotation="2">We say given <code>b = -3.0</code> and <code>c = 10.0</code> are constants, the derivative of <code>d</code> at <code>a = 2.0</code> is <code>-3.0</code>. The rate of which <code>d</code> will increase if we scale <code>a</code>!</span>
</dd>
</dl>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>d1:  4.0
d2:  3.997
slope:  -3.0000000000001137</code></pre>
</div>
</div>
</section>
<section id="starting-the-core-value-object-of-micrograd-and-its-visualization" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="starting-the-core-value-object-of-micrograd-and-its-visualization">starting the core <code>Value</code> object of micrograd and its visualization</h2>
<p>So we now have some intuitive sense of what is derivative is telling you about the function. We now move to the Neural Networks, which would be massive mathematical expressions. We need some data structures that maintain these expressions, we first declare an object <code>Value</code> that holds data.</p>
<div id="b333c6c5" class="cell" data-execution_count="9">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="annotated-cell-9" style="background: #f1f3f5;"><pre class="sourceCode numberSource python code-annotation-code number-lines code-with-copy code-annotated"><code class="sourceCode python"><span id="annotated-cell-9-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Value:</span>
<span id="annotated-cell-9-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, data, </span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-9" data-target-annotation="3">3</button><span id="annotated-cell-9-3" class="code-annotation-target">                        _children<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(),</span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-9" data-target-annotation="5">5</button><span id="annotated-cell-9-4" class="code-annotation-target">                        _op <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>,</span>
<span id="annotated-cell-9-5">                        label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="annotated-cell-9-6">                        ): </span>
<span id="annotated-cell-9-7">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data</span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-9" data-target-annotation="6">6</button><span id="annotated-cell-9-8" class="code-annotation-target">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span></span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-9" data-target-annotation="7">7</button><span id="annotated-cell-9-9" class="code-annotation-target">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._backward <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="annotated-cell-9-10">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._prev <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(_children)</span>
<span id="annotated-cell-9-11">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._op <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _op</span>
<span id="annotated-cell-9-12">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>  label</span>
<span id="annotated-cell-9-13"></span>
<span id="annotated-cell-9-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__repr__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>: <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># a nicer looking for class attributes</span></span>
<span id="annotated-cell-9-15">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Value(data=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">)"</span></span>
<span id="annotated-cell-9-16">    </span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-9" data-target-annotation="4">4</button><span id="annotated-cell-9-17" class="code-annotation-target">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__add__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, other):</span>
<span id="annotated-cell-9-18">        other <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> other <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(other, Value) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> Value(other) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># turn other to Value object before calculation</span></span>
<span id="annotated-cell-9-19">        out <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Value(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> other.data, (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, other), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'+'</span>)</span>
<span id="annotated-cell-9-20"></span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-9" data-target-annotation="8">8</button><span id="annotated-cell-9-21" class="code-annotation-target">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> _backward():</span>
<span id="annotated-cell-9-22">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> out.grad</span>
<span id="annotated-cell-9-23">            other.grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> out.grad</span>
<span id="annotated-cell-9-24">        out._backward <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _backward</span>
<span id="annotated-cell-9-25"></span>
<span id="annotated-cell-9-26">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> out</span>
<span id="annotated-cell-9-27"></span>
<span id="annotated-cell-9-28">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__mul__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, other):</span>
<span id="annotated-cell-9-29">        other <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> other <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(other, Value) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> Value(other) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># turn other to Value object before calculation</span></span>
<span id="annotated-cell-9-30">        out <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Value(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> other.data, (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, other), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'*'</span>)</span>
<span id="annotated-cell-9-31"></span>
<span id="annotated-cell-9-32">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> _backward():</span>
<span id="annotated-cell-9-33">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> other.data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> out.grad</span>
<span id="annotated-cell-9-34">            other.grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> out.grad</span>
<span id="annotated-cell-9-35">        out._backward <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _backward</span>
<span id="annotated-cell-9-36"></span>
<span id="annotated-cell-9-37">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> out</span>
<span id="annotated-cell-9-38"></span>
<span id="annotated-cell-9-39">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> tanh(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="annotated-cell-9-40">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.data</span>
<span id="annotated-cell-9-41">        t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (math.exp(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (math.exp(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="annotated-cell-9-42">        out <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Value(t, (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, ), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tanh'</span>)</span>
<span id="annotated-cell-9-43"></span>
<span id="annotated-cell-9-44">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> _backward():</span>
<span id="annotated-cell-9-45">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> out.grad</span>
<span id="annotated-cell-9-46">        out._backward <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _backward</span>
<span id="annotated-cell-9-47">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> out</span>
<span id="annotated-cell-9-48"></span>
<span id="annotated-cell-9-49">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> backward(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="annotated-cell-9-50">        </span>
<span id="annotated-cell-9-51">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># topo order for all children in the graph</span></span>
<span id="annotated-cell-9-52">        topo <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="annotated-cell-9-53">        visited <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>()</span>
<span id="annotated-cell-9-54">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> build_topo(v):</span>
<span id="annotated-cell-9-55">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> v <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> visited:</span>
<span id="annotated-cell-9-56">                visited.add(v)</span>
<span id="annotated-cell-9-57">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> child <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> v._prev:</span>
<span id="annotated-cell-9-58">                    build_topo(child) </span>
<span id="annotated-cell-9-59">                topo.append(v)</span>
<span id="annotated-cell-9-60">        build_topo(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>)</span>
<span id="annotated-cell-9-61"></span>
<span id="annotated-cell-9-62">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># sequentially apply the chain rules</span></span>
<span id="annotated-cell-9-63">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span></span>
<span id="annotated-cell-9-64">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> node <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">reversed</span>(topo):</span>
<span id="annotated-cell-9-65">            node._backward()</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
</details>
<div class="cell-annotation">
<dl class="code-annotation-container-hidden code-annotation-container-grid">
<dt data-target-cell="annotated-cell-9" data-target-annotation="3">3</dt>
<dd>
<span data-code-cell="annotated-cell-9" data-code-lines="3" data-code-annotation="3">the connective tissue of this expression. We want to keep these expression graphs, so we need to know and keep pointers about what values produce what other values. <code>_children</code> is by default a empty tuple.</span>
</dd>
<dt data-target-cell="annotated-cell-9" data-target-annotation="4">4</dt>
<dd>
<span data-code-cell="annotated-cell-9" data-code-lines="17" data-code-annotation="4">as we added <code>_children</code>, we also need to point out the father - children relationship in method <code>__add__</code> and <code>__mul__</code> as well.</span>
</dd>
<dt data-target-cell="annotated-cell-9" data-target-annotation="5">5</dt>
<dd>
<span data-code-cell="annotated-cell-9" data-code-lines="4" data-code-annotation="5">we want to know the <strong>operation</strong> between father and child, <code>_op</code> is empty string by default, the value <code>+</code> and <code>-</code> will be added to the operator method respectively.</span>
</dd>
<dt data-target-cell="annotated-cell-9" data-target-annotation="6">6</dt>
<dd>
<span data-code-cell="annotated-cell-9" data-code-lines="8" data-code-annotation="6">initially assume that node has no impact to the output.</span>
</dd>
<dt data-target-cell="annotated-cell-9" data-target-annotation="7">7</dt>
<dd>
<span data-code-cell="annotated-cell-9" data-code-lines="9" data-code-annotation="7">this backward function basically do nothing at the initial.</span>
</dd>
<dt data-target-cell="annotated-cell-9" data-target-annotation="8">8</dt>
<dd>
<span data-code-cell="annotated-cell-9" data-code-lines="21" data-code-annotation="8">implement of backward pass for plus node, <code>+=</code> represent the accumulate action (rather than overwrite it), assigne the gradient behaviour for each type of operation, call the <code>_backward</code> concurrently with function.</span>
</dd>
</dl>
</div>
</div>
<p>Setting input and expression:</p>
<div id="dbbfa0d2" class="cell" data-execution_count="10">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="annotated-cell-10" style="background: #f1f3f5;"><pre class="sourceCode numberSource python code-annotation-code number-lines code-with-copy code-annotated"><code class="sourceCode python"><span id="annotated-cell-10-1">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Value(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span>)</span>
<span id="annotated-cell-10-2">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Value(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.0</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'b'</span>)</span>
<span id="annotated-cell-10-3">c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Value(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">10.0</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'c'</span>)</span>
<span id="annotated-cell-10-4"></span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-10" data-target-annotation="1">1</button><span id="annotated-cell-10-5" class="code-annotation-target">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b</span>
<span id="annotated-cell-10-6"></span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-10" data-target-annotation="2">2</button><span id="annotated-cell-10-7" class="code-annotation-target">a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> c</span>
<span id="annotated-cell-10-8"></span>
<span id="annotated-cell-10-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># d = a*b + c rewrite the expression</span></span>
<span id="annotated-cell-10-10">e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> e.label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'e'</span></span>
<span id="annotated-cell-10-11">d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> d.label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'d'</span></span>
<span id="annotated-cell-10-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># d</span></span>
<span id="annotated-cell-10-13">f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Value(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'f'</span>)</span>
<span id="annotated-cell-10-14">L <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> L.label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'L'</span></span>
<span id="annotated-cell-10-15">L</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
</details>
<div class="cell-annotation">
<dl class="code-annotation-container-hidden code-annotation-container-grid">
<dt data-target-cell="annotated-cell-10" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-10" data-code-lines="5" data-code-annotation="1">which will internally call <code>a.__add__(b)</code></span>
</dd>
<dt data-target-cell="annotated-cell-10" data-target-annotation="2">2</dt>
<dd>
<span data-code-cell="annotated-cell-10" data-code-lines="7" data-code-annotation="2">which will internally call <code>(a.__mul__(b)).__add__(c)</code></span>
</dd>
</dl>
</div>
<div class="cell-output cell-output-display" data-execution_count="10">
<pre><code>Value(data=-8.0)</code></pre>
</div>
</div>
<p>So that we can know the children:</p>
<div id="d5fc2d85" class="cell" data-execution_count="11">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb12-1">d._prev</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="11">
<pre><code>{Value(data=-6.0), Value(data=10.0)}</code></pre>
</div>
</div>
<p>We can know the operations:</p>
<div id="8e746d76" class="cell" data-execution_count="12">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb14-1">d._op</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="12">
<pre><code>'+'</code></pre>
</div>
</div>
<p>Now we know exactly how each value came to be by <strong>word</strong> expression and from what other values. These will be quite abit larger, so we need a way to nicely visualize these expressions that we’re building out. Below are a-little-scary codes.</p>
<div id="1b6e7a49" class="cell" data-execution_count="13">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="annotated-cell-13" style="background: #f1f3f5;"><pre class="sourceCode numberSource python code-annotation-code number-lines code-with-copy code-annotated"><code class="sourceCode python"><span id="annotated-cell-13-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="annotated-cell-13-2"></span>
<span id="annotated-cell-13-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Assuming the Graphviz bin directory path is 'C:/Program Files (x86)/Graphviz2.xx/bin'</span></span>
<span id="annotated-cell-13-4">os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PATH"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> os.pathsep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'C:/Program Files (x86)/Graphviz/bin'</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add with the code, Gemini instructed me this 😪</span></span>
<span id="annotated-cell-13-5"></span>
<span id="annotated-cell-13-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> graphviz <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Digraph</span>
<span id="annotated-cell-13-7"></span>
<span id="annotated-cell-13-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> trace(root):</span>
<span id="annotated-cell-13-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># build a set of all nodes and edges in a graph</span></span>
<span id="annotated-cell-13-10">    nodes, edges <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>()</span>
<span id="annotated-cell-13-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> build(v):</span>
<span id="annotated-cell-13-12">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> v <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> nodes:</span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-13" data-target-annotation="1">1</button><span id="annotated-cell-13-13" class="code-annotation-target">            nodes.add(v)</span>
<span id="annotated-cell-13-14">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> child <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> v._prev:</span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-13" data-target-annotation="2">2</button><span id="annotated-cell-13-15" class="code-annotation-target">                edges.add((child, v))</span>
<span id="annotated-cell-13-16">                build(child)</span>
<span id="annotated-cell-13-17">    build(root)</span>
<span id="annotated-cell-13-18"></span>
<span id="annotated-cell-13-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> nodes, edges</span>
<span id="annotated-cell-13-20"></span>
<span id="annotated-cell-13-21"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> draw_dot(root):</span>
<span id="annotated-cell-13-22">    dot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Digraph(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'svg'</span>, graph_attr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rankdir'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'LR'</span>}) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># LR = from left to right</span></span>
<span id="annotated-cell-13-23">    nodes, edges <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> trace(root)</span>
<span id="annotated-cell-13-24">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> nodes:</span>
<span id="annotated-cell-13-25">        uid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>(n))</span>
<span id="annotated-cell-13-26">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for any value in the graph, create a rectangular ('record') node for it</span></span>
<span id="annotated-cell-13-27">        dot.node(name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>uid, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{ </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%s</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> | data </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%.4f</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> | grad </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%.4f</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">}"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> (n.label, n.data, n.grad), shape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'record'</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># why is (n.data, ), but not (n.data) ???</span></span>
<span id="annotated-cell-13-28">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> n._op:</span>
<span id="annotated-cell-13-29">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if this value is a result of some operations, create an op node for it</span></span>
<span id="annotated-cell-13-30">            dot.node(name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> uid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> n._op, label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> n._op)</span>
<span id="annotated-cell-13-31">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># and connect the node to it</span></span>
<span id="annotated-cell-13-32">            dot.edge(uid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> n._op, uid)</span>
<span id="annotated-cell-13-33"></span>
<span id="annotated-cell-13-34">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> n1, n2 <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> edges:</span>
<span id="annotated-cell-13-35">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># connect n1 to the op node of n2</span></span>
<span id="annotated-cell-13-36">        dot.edge(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>(n1)), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>(n2)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> n2._op)</span>
<span id="annotated-cell-13-37"></span>
<span id="annotated-cell-13-38">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> dot</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
</details>
<div class="cell-annotation">
<dl class="code-annotation-container-hidden code-annotation-container-grid">
<dt data-target-cell="annotated-cell-13" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-13" data-code-lines="13" data-code-annotation="1">This will collect all nodes to the <code>nodes</code>.</span>
</dd>
<dt data-target-cell="annotated-cell-13" data-target-annotation="2">2</dt>
<dd>
<span data-code-cell="annotated-cell-13" data-code-lines="15" data-code-annotation="2">This will iteratively recursively collect all nodes to the <code>nodes</code>, add child and node ralationship information to <code>edges</code>.</span>
</dd>
</dl>
</div>
</div>

<div class="no-row-height column-margin column-container"><div class="">
<p>Remember to let <a href="https://graphviz.org/download/">graphviz</a> installed on your machine, not only Python package, I also run this:</p>
<div id="0ead0492" class="cell" data-execution_count="14">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb16-2">os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PATH"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> os.pathsep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'C:\Program Files (x86)\Graphviz</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\b</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">in\dot.exe'</span></span></code></pre></div>
</details>
</div>
</div></div><p>Now we can draw 🚀.</p>
<div id="2df941fe" class="cell" data-execution_count="15">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb17-1">draw_dot(d)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="14">
<div>
<figure class="figure">
<p><img src="https://lktuan.github.io/blog/2024-06-17-nn-z2h-p1/index_files/figure-html/cell-16-output-1.svg" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<p>So far we’ve build out mathematical expressions using only plus <code>+</code> and times <code>*</code>, all <code>Value</code>s are only scalar.</p>
<p>Back to the <code>Value</code> object, we will create 1 more attribute call <code>label</code>, make the expression more complicated by adding intermediate value <code>f</code>, <code>d</code>, out final node will be capital <code>L</code>.</p>
</section>
</section>
<section id="backpropagation" class="level1 page-columns page-full">
<h1>Backpropagation</h1>
<p>In backpropagation, we start at the end and are going to reverse and calculate the gradients along all the intermediate values. What we are actually computing for evert single node here is derivative of that node with respect to <code>L</code>.</p>
<p>In neural nets, <code>L</code> represent to a Loss function. And you will be very interested in the derivative of bassically loss function <code>L</code> with respect to the <strong>weights</strong> of the neural networks.</p>
<p>We need to know how are those <strong>leaf nodes</strong> <code>a</code>, <code>b</code>, <code>c</code>, <code>f</code> are impacting to the loss function. We call it <code>grad</code> and add this attribute to the <code>Value</code> object.</p>
<section id="manual-backpropagation-example-1-simple-expression" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="manual-backpropagation-example-1-simple-expression">manual backpropagation example #1: simple expression</h2>
<div class="page-columns page-full">
<div id="e64e9aae" class="cell page-columns page-full" data-execution_count="16">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb18-1">draw_dot(L)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display page-columns page-full" data-execution_count="15">
<div class="page-columns page-full">
<figure class="figure page-columns page-full">
<p class="page-columns page-full"><img src="https://lktuan.github.io/blog/2024-06-17-nn-z2h-p1/index_files/figure-html/cell-17-output-1.svg" class="img-fluid figure-img column-page"></p>
</figure>
</div>
</div>
</div>
</div>
<p>Let’s do the backpropagation <strong>manually</strong>:</p>
<ol type="1">
<li>First we need to calculate the <code>dL/dL</code>, how <code>L</code> will response if we change <code>L</code> a tiny value <code>h</code>. The response simply is <code>1</code> so <code>L.grad = 1.0</code>.</li>
<li><code>F = d * f</code>, so <code>dL/dd</code> -&gt; <code>(f((x+h)) - f(x))/h = ((d+h)*f - d*f)/h = h*f/h = f = -2.0</code>. Quite straighforward, so <code>d.grad = -2.0</code>.</li>
<li>Similarly, <code>f.grad = d = 4</code>.<br>
</li>
<li>Next, for <code>dL/dc</code>. We first concern <code>dd/dc</code>, we know <code>d = c + e</code>. Same with (2) we will soon know <code>dd/dc = 1.0</code>, by symmetry <code>dd/de = 1.0</code>. Following the <strong>Chain Rules</strong> <img src="https://latex.codecogs.com/png.latex?h'(x)%20=%20f'(g(x))g'(x)">, we have <code>dL/dc = dL/dd * dd/dc = -2.0 * 1 = -2.0</code>. </li>
<li>By symmetry, <code>dL/de = -2.0</code>.</li>
<li><code>dL/da = dL/de * de/da = -2.0 * b = -2.0 * -3.0 = 6.0</code>.</li>
<li><code>dl/db = dL/de * de/db = -2.0 * a = -2.0 * 2.0 = -4.0</code>.</li>
</ol>
<div class="no-row-height column-margin column-container"><span class="margin-aside"><a href="https://en.wikipedia.org/wiki/Chain_rule">Chain Rules Wiki</a></span></div><p>We can also create a function for playing around / gradient check, and not messing up the global scope.</p>
<div id="b0ddb825" class="cell" data-execution_count="17">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> lol():</span>
<span id="cb19-2"></span>
<span id="cb19-3">    h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0001</span></span>
<span id="cb19-4"></span>
<span id="cb19-5">    a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Value(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span>)</span>
<span id="cb19-6">    b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Value(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.0</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'b'</span>)</span>
<span id="cb19-7">    c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Value(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">10.0</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'c'</span>)</span>
<span id="cb19-8">    e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> e.label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'e'</span></span>
<span id="cb19-9">    d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> d.label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'d'</span></span>
<span id="cb19-10">    f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Value(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'f'</span>)</span>
<span id="cb19-11">    L <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> L.label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'L'</span></span>
<span id="cb19-12">    L1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> L.data</span>
<span id="cb19-13"></span>
<span id="cb19-14">    a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Value(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span>)</span>
<span id="cb19-15">    b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Value(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.0</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'b'</span>)</span>
<span id="cb19-16">    c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Value(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">10.0</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'c'</span>)</span>
<span id="cb19-17">    c.data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> h <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># dL/dc = -2.0</span></span>
<span id="cb19-18">    e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> e.label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'e'</span></span>
<span id="cb19-19">    d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> d.label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'d'</span></span>
<span id="cb19-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># d.data += h # dL/dd = -2.0</span></span>
<span id="cb19-21">    f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Value(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># + h # dL/df = 4.0</span></span>
<span id="cb19-22">                , label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'f'</span>) </span>
<span id="cb19-23">    L <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> L.label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'L'</span></span>
<span id="cb19-24">    L2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> L.data <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># + h # dL/dL = 1.0</span></span>
<span id="cb19-25"></span>
<span id="cb19-26">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>((L2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> L1) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> h)</span>
<span id="cb19-27"></span>
<span id="cb19-28">lol()</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>-1.9999999999953388</code></pre>
</div>
</div>
<p>So that is backpropagation ~ just recursively applying the Chain Rules, multiplying local derivatives.</p>
</section>
<section id="preview-of-a-single-optimization-step" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="preview-of-a-single-optimization-step">preview of a single optimization step</h2>
<p>We can change the input that we can control <code>a, b, c, f</code> to see 1 step of the optimization of process.</p>
<div id="61c0f1aa" class="cell" data-execution_count="18">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb21-1">a.grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.0</span></span>
<span id="cb21-2">b.grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.0</span></span>
<span id="cb21-3">c.grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span></span>
<span id="cb21-4">f.grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.0</span></span>
<span id="cb21-5"></span>
<span id="cb21-6">a.data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> a.grad</span>
<span id="cb21-7">b.data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> b.grad</span>
<span id="cb21-8">c.data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> c.grad</span>
<span id="cb21-9">f.data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> f.grad</span>
<span id="cb21-10"></span>
<span id="cb21-11">e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> e.grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> e.label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'e'</span></span>
<span id="cb21-12">d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> d.grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> d.label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'d'</span></span>
<span id="cb21-13">L <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> f</span>
<span id="cb21-14"></span>
<span id="cb21-15"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(L.data)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>-7.286496</code></pre>
</div>
</div>
<p>We can see the changes, <code>L</code> increased a little bit as expected.</p>
<div class="page-columns page-full">
<div id="5117ec3b" class="cell page-columns page-full" data-execution_count="19">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb23-1">draw_dot(L)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display page-columns page-full" data-execution_count="18">
<div class="page-columns page-full">
<figure class="figure page-columns page-full">
<p class="page-columns page-full"><img src="https://lktuan.github.io/blog/2024-06-17-nn-z2h-p1/index_files/figure-html/cell-20-output-1.svg" class="img-fluid figure-img column-page"></p>
</figure>
</div>
</div>
</div>
</div>
</section>
<section id="manual-backpropagation-example-2-a-neuron" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="manual-backpropagation-example-2-a-neuron">manual backpropagation example #2: a neuron</h2>
<p>Anatomy of neurons, we have:</p>
<ul>
<li><code>axon</code> as input <img src="https://latex.codecogs.com/png.latex?x_0">;</li>
<li><code>synapse</code> string as weight <img src="https://latex.codecogs.com/png.latex?w_0">;</li>
<li>information flows into the cell body will be <img src="https://latex.codecogs.com/png.latex?x_0w_0">;</li>
<li>there are multiple inputs <img src="https://latex.codecogs.com/png.latex?x_iw_i"> flow into the cell body;</li>
<li>the cell body has some <em>bias</em> itself <img src="https://latex.codecogs.com/png.latex?b">;</li>
<li>the cell body processes all information, the output will flow through an <em>activation</em> function ~ which is some kind of a squashing function, like <code>sigmoid</code>, <code>tanh</code> or something like that;</li>
</ul>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="1">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 100.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://www.researchgate.net/publication/364814302/figure/fig5/AS:11431281092677232@1666928276027/Neural-net-Structure-with-an-Activation-Function-Source-CS231n-Stanford-2017.png" class="img-fluid figure-img" style="width:100.0%"></p>
<figcaption>Neural net Structure with an Activation Function, CS231n Stanford 2017</figcaption>
</figure>
</div>
</div>
</div>
</div>
<p>🚀How does the <code>tanh</code> look like? this hyperbolic function will squash the output to the edge values: <code>-1.0</code> or <code>1.0</code>.</p>
<div id="1435c01a" class="cell" data-execution_count="20">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb24-1">plt.plot(np.arange(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>), np.tanh(np.arange(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>)))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> plt.grid()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://lktuan.github.io/blog/2024-06-17-nn-z2h-p1/index_files/figure-html/cell-21-output-1.png" width="590" height="411" class="figure-img"></p>
</figure>
</div>
</div>
</div>

<div class="no-row-height column-margin column-container"><div class="">
<p>We first implement <a href="https://en.wikipedia.org/wiki/Hyperbolic_functions"><code>tanh</code></a> function to our class <code>Value</code>.</p>
<div id="c999efd4" class="cell" data-execution_count="21">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb25-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> tanh(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb25-2">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.data</span>
<span id="cb25-3">    t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (math.exp(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (math.exp(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb25-4">    out <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Value(t, (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, ), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tanh'</span>)</span>
<span id="cb25-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> out</span>
<span id="cb25-6"></span>
<span id="cb25-7">Value.tanh <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tanh</span></code></pre></div>
</details>
</div>
</div></div><p>Let’s take a simple example of 2-dimensional neuron with 2 inputs <code>x1</code> and <code>x2</code>:</p>
<div id="adf855ae" class="cell" data-execution_count="22">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb26-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># input x1, x2</span></span>
<span id="cb26-2">x1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Value(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x1'</span>)</span>
<span id="cb26-3">x2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Value(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x2'</span>)</span>
<span id="cb26-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># weights w1,w2</span></span>
<span id="cb26-5">w1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Value(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.0</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'w1'</span>)</span>
<span id="cb26-6">w2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Value(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'w2'</span>)</span>
<span id="cb26-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># bias of neuron b</span></span>
<span id="cb26-8">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Value(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.88137358</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'b'</span>)</span>
<span id="cb26-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># x1*w1 + x2*w2 + b</span></span>
<span id="cb26-10">x1w1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>w1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> x1w1.label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x1w1'</span></span>
<span id="cb26-11">x2w2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>w2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> x2w2.label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x2w2'</span></span>
<span id="cb26-12">x1w1x2w2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x1w1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x2w2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> x1w1x2w2.label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x1w1 + x2w2'</span></span>
<span id="cb26-13">n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x1w1x2w2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> n.label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n'</span></span>
<span id="cb26-14"></span>
<span id="cb26-15">o <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> n.tanh()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> o.label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># not define yet</span></span></code></pre></div>
</details>
</div>
<div class="page-columns page-full">
<div id="b5fc4c81" class="cell page-columns page-full" data-execution_count="23">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb27-1">draw_dot(o)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display page-columns page-full" data-execution_count="21">
<div class="page-columns page-full">
<figure class="figure page-columns page-full">
<p class="page-columns page-full"><img src="https://lktuan.github.io/blog/2024-06-17-nn-z2h-p1/index_files/figure-html/cell-24-output-1.svg" class="img-fluid figure-img column-page"></p>
</figure>
</div>
</div>
</div>
</div>

<div class="no-row-height column-margin column-container"><div class="">
<div id="050f50a4" class="cell" data-execution_count="24">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb28-1">o.grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span></span>
<span id="cb28-2">n.grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> o.data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb28-3">b.grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> n.grad</span>
<span id="cb28-4">x1w1x2w2.grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> n.grad</span>
<span id="cb28-5">x1w1.grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x1w1x2w2.grad</span>
<span id="cb28-6">x2w2.grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x1w1x2w2.grad</span>
<span id="cb28-7">x1.grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> w1.data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> x1w1.grad</span>
<span id="cb28-8">w1.grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x1.data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> x1w1.grad</span>
<span id="cb28-9">x2.grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> w2.data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> x2w2.grad</span>
<span id="cb28-10">w2.grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x2.data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> x2w2.grad</span></code></pre></div>
</details>
</div>
</div></div><p>From here we will manually calculate the gradient again:</p>
<ol type="1">
<li><code>do/do = 1</code>, that’s the base case, so <code>o.grad = 1.0</code>.</li>
<li><code>o = tanh(n)</code>, follow that Wiki link (and of course can be easily proof) we have <code>do/dn = 1 - tanh(x)^2 = 1 - o^2</code>.</li>
<li><code>n = x1w1x2w2 + b</code>, this is plus node, which gradient will flow to children equally, <code>do/db = do/dn * dn/db = do/dn * 1</code>.</li>
<li>By symmertry, <code>do/dx1w1x2w2 = do/db</code>.</li>
<li><code>do/dx1w1 = do/dx1w1x2w2</code>.</li>
<li><code>do/dx2w2 = do/dx1w1x2w2</code>.</li>
<li><code>do/dx1 = w1 * do/dx1w1</code>.</li>
<li><code>do/dw1 = x1 * do/dx1w1</code>.</li>
<li><code>do/dx2 = w2 * do/dx2w2</code>.</li>
<li><code>do/dw2 = x2 * do/dx2w2</code>.</li>
</ol>
<div class="page-columns page-full">
<div id="b2a5685c" class="cell page-columns page-full" data-execution_count="25">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb29-1">draw_dot(o)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display page-columns page-full" data-execution_count="23">
<div class="page-columns page-full">
<figure class="figure page-columns page-full">
<p class="page-columns page-full"><img src="https://lktuan.github.io/blog/2024-06-17-nn-z2h-p1/index_files/figure-html/cell-26-output-1.svg" class="img-fluid figure-img column-page"></p>
</figure>
</div>
</div>
</div>
</div>
</section>
<section id="implementing-the-backward-function-for-each-operation" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="implementing-the-backward-function-for-each-operation">implementing the backward function for each operation</h2>
<p>Doing the backpropagation manually is obviously ridiculous and we are now to put an end to this suffering. We will see how we can implement backward pass a bit more automatically.</p>
<p>We create <code>_backward</code> operation for each operator, implement the Chain Rules. Activate the <code>_backward</code> call along with funtion execution.</p>
<div id="724b9351" class="cell" data-execution_count="26">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb30-1">o.grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span></span>
<span id="cb30-2"></span>
<span id="cb30-3">o._backward()</span>
<span id="cb30-4">n._backward()</span>
<span id="cb30-5">b._backward()</span>
<span id="cb30-6">x1w1x2w2._backward()</span>
<span id="cb30-7">x1w1._backward()</span>
<span id="cb30-8">x2w2._backward()</span></code></pre></div>
</details>
</div>
<div class="page-columns page-full">
<div id="7b8ca278" class="cell page-columns page-full" data-execution_count="27">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb31-1">draw_dot(o)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display page-columns page-full" data-execution_count="25">
<div class="page-columns page-full">
<figure class="figure page-columns page-full">
<p class="page-columns page-full"><img src="https://lktuan.github.io/blog/2024-06-17-nn-z2h-p1/index_files/figure-html/cell-28-output-1.svg" class="img-fluid figure-img column-page"></p>
</figure>
</div>
</div>
</div>
</div>
<p>We still need to call the <code>_backward</code> node by node. Now we move to the next step, to implement backward function to whole expression graph.</p>
</section>
<section id="implementing-the-backward-function-for-a-whole-expression-graph" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="implementing-the-backward-function-for-a-whole-expression-graph">implementing the backward function for a whole expression graph</h2>
<p>In short, we need to do everything after each node before we call the backward function itself. For every node, all dependencies, everything that it depends on has to propagate to it before we can continue backpropagation.</p>
<p>This ordering of graph can be archived using something like <a href="https://en.wikipedia.org/wiki/Topological_sorting">topological sort</a>.</p>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="1">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 100.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://miro.medium.com/v2/resize:fit:720/format:webp/1*0jRSNI2zo30sENk2qlqEvw.png" class="img-fluid figure-img" style="width:100.0%"></p>
<figcaption>Topological Sort, photo credit to <a href="https://yuminlee2.medium.com/topological-sort-cf9f8e43af6a">Claire Lee</a></figcaption>
</figure>
</div>
</div>
</div>
</div>

<div class="no-row-height column-margin column-container"><div class="">
<div id="8e1cf168" class="cell" data-execution_count="28">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb32-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># we first reset the Values</span></span>
<span id="cb32-2">x1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Value(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x1'</span>)</span>
<span id="cb32-3">x2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Value(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x2'</span>)</span>
<span id="cb32-4">w1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Value(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.0</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'w1'</span>)</span>
<span id="cb32-5">w2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Value(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'w2'</span>)</span>
<span id="cb32-6">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Value(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.88137358</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'b'</span>)</span>
<span id="cb32-7">x1w1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>w1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> x1w1.label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x1w1'</span></span>
<span id="cb32-8">x2w2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>w2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> x2w2.label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x2w2'</span></span>
<span id="cb32-9">x1w1x2w2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x1w1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x2w2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> x1w1x2w2.label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x1w1 + x2w2'</span></span>
<span id="cb32-10">n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x1w1x2w2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> n.label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n'</span></span>
<span id="cb32-11">o <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> n.tanh()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> o.label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span></span></code></pre></div>
</details>
</div>
</div></div><p>Below is the code:</p>
<div id="701c37a6" class="cell" data-execution_count="29">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb33-1">topo <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb33-2">visited <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>()</span>
<span id="cb33-3"></span>
<span id="cb33-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> build_topo(v):</span>
<span id="cb33-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> v <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> visited:</span>
<span id="cb33-6">        visited.add(v)</span>
<span id="cb33-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> child <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> v._prev:</span>
<span id="cb33-8">            build_topo(child) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># recursively look up all children for v</span></span>
<span id="cb33-9">        topo.append(v)</span>
<span id="cb33-10"></span>
<span id="cb33-11">build_topo(o)</span>
<span id="cb33-12">topo</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="27">
<pre><code>[Value(data=6.88137358),
 Value(data=2.0),
 Value(data=-3.0),
 Value(data=-6.0),
 Value(data=0.0),
 Value(data=1.0),
 Value(data=0.0),
 Value(data=-6.0),
 Value(data=0.88137358),
 Value(data=0.707106777676776)]</code></pre>
</div>
</div>
<p>We implement the topological sort to <code>backward()</code> (without underscore) function. Now we can trigger the whole process:</p>
<div id="23bc7fa2" class="cell" data-execution_count="30">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb35-1">o.backward()</span></code></pre></div>
</details>
</div>
<div class="page-columns page-full">
<div id="ffb0088c" class="cell page-columns page-full" data-execution_count="31">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb36-1">draw_dot(o)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display page-columns page-full" data-execution_count="29">
<div class="page-columns page-full">
<figure class="figure page-columns page-full">
<p class="page-columns page-full"><img src="https://lktuan.github.io/blog/2024-06-17-nn-z2h-p1/index_files/figure-html/cell-32-output-1.svg" class="img-fluid figure-img column-page"></p>
</figure>
</div>
</div>
</div>
</div>
</section>
<section id="fixing-a-backprop-bug-when-one-node-is-used-multiple-times" class="level2">
<h2 class="anchored" data-anchor-id="fixing-a-backprop-bug-when-one-node-is-used-multiple-times">fixing a backprop bug when one node is used multiple times ⛔</h2>
<p>This <code>a.grad</code> should be <code>2.0</code>.</p>
<div id="6eaa6894" class="cell" data-execution_count="32">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb37-1">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Value(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.0</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'a'</span>)</span>
<span id="cb37-2">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> b.label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'b'</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># this case self and other are both a, we should not overwrite the gradient, we should accumulate it.</span></span>
<span id="cb37-3">b.backward()</span>
<span id="cb37-4">draw_dot(b)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="30">
<div>
<figure class="figure">
<p><img src="https://lktuan.github.io/blog/2024-06-17-nn-z2h-p1/index_files/figure-html/cell-33-output-1.svg" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="breaking-up-a-tanh-exercising-with-more-operations" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="breaking-up-a-tanh-exercising-with-more-operations">breaking up a <code>tanh</code>, exercising with more operations</h2>
<p>Sometime we do operations between <code>Value</code> and other, like <code>int</code>. We can not do this unless we add below code to <code>__add__</code> and <code>__mul__</code> operations. Now we can <code>Value(1.0) + 1.0</code>, or <code>Value(2.0) * 2</code>.</p>
<div id="e91741ed" class="cell" data-execution_count="33">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb38-1">other <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> other <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(other, Value) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> Value(other)</span></code></pre></div>
</details>
</div>
<p>But for <code>2 * Value(2.0)</code>, which will internally call <code>2.__mul__(Value(2.0))</code>, will not work. We add <code>__rmul__</code>:</p>
<div id="80439bef" class="cell" data-execution_count="34">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb39-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__rmul__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, other): <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># other * self</span></span>
<span id="cb39-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> other</span>
<span id="cb39-3"></span>
<span id="cb39-4">Value.<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__rmul__</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__rmul__</span></span></code></pre></div>
</details>
</div>
<p>For exponential, we add <code>epx</code>:</p>
<div id="13022508" class="cell" data-execution_count="35">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb40-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> exp(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb40-2">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.data</span>
<span id="cb40-3">    out <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Value(math.exp(x), (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, ), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'exp'</span>)</span>
<span id="cb40-4"></span>
<span id="cb40-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> _backward():</span>
<span id="cb40-6">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> out.data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> out.grad</span>
<span id="cb40-7">    out._backward <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _backward</span>
<span id="cb40-8"></span>
<span id="cb40-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> out</span>
<span id="cb40-10"></span>
<span id="cb40-11">Value.exp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> exp</span></code></pre></div>
</details>
</div>
<p>For division, we add <code>__truediv__</code>:</p>
<div id="b4ac6bfa" class="cell" data-execution_count="36">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb41-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__truediv__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, other): <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># self / other</span></span>
<span id="cb41-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> other<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb41-3"></span>
<span id="cb41-4">Value.<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__truediv__</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__truediv__</span></span></code></pre></div>
</details>
</div>
<p>For power, we add <code>__pow__</code>:</p>
<div id="b5e05d88" class="cell" data-execution_count="37">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb42-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__pow__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, other): <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># self ** other</span></span>
<span id="cb42-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">assert</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(other, (<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>)), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TypeError: only supporting int/float power for now"</span></span>
<span id="cb42-3">    out <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Value(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>other, (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, ), <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'**</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>other<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb42-4"></span>
<span id="cb42-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> _backward():</span>
<span id="cb42-6">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> other <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> ( <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> (other <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> out.grad</span>
<span id="cb42-7">    out._backward <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _backward</span>
<span id="cb42-8"></span>
<span id="cb42-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> out</span>
<span id="cb42-10"></span>
<span id="cb42-11">Value.<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__pow__</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__pow__</span> </span></code></pre></div>
</details>
</div>
<p>For subtract, we add <code>__neg__</code> and <code>__sub__</code>:</p>
<div id="46cb1ab6" class="cell" data-execution_count="38">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb43-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__neg__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>): <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># - self</span></span>
<span id="cb43-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span></span>
<span id="cb43-3"></span>
<span id="cb43-4">Value.<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__neg__</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__neg__</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># self - other</span></span>
<span id="cb43-5"></span>
<span id="cb43-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__sub__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, other):</span>
<span id="cb43-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>other)</span>
<span id="cb43-8"></span>
<span id="cb43-9">Value.<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__sub__</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__sub__</span></span></code></pre></div>
</details>
</div>
<p>Now we are ready to try <code>tanh</code> in a different way:</p>
<div id="6164cb90" class="cell" data-execution_count="39">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb44-1">x1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Value(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x1'</span>)</span>
<span id="cb44-2">x2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Value(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x2'</span>)</span>
<span id="cb44-3">w1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Value(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.0</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'w1'</span>)</span>
<span id="cb44-4">w2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Value(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'w2'</span>)</span>
<span id="cb44-5">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Value(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.88137358</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'b'</span>)</span>
<span id="cb44-6">x1w1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>w1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> x1w1.label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x1w1'</span></span>
<span id="cb44-7">x2w2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>w2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> x2w2.label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x2w2'</span></span>
<span id="cb44-8">x1w1x2w2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x1w1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x2w2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> x1w1x2w2.label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x1w1 + x2w2'</span></span>
<span id="cb44-9">n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x1w1x2w2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> n.label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n'</span></span>
<span id="cb44-10"></span>
<span id="cb44-11">e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n).exp()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> e.label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'e'</span></span>
<span id="cb44-12">o <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb44-13">o.label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span></span>
<span id="cb44-14">o.backward()</span></code></pre></div>
</details>
</div>
<div class="page-columns page-full">
<div id="548cf0cd" class="cell page-columns page-full" data-execution_count="40">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb45-1">draw_dot(o)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display page-columns page-full" data-execution_count="37">
<div class="page-columns page-full">
<figure class="figure page-columns page-full">
<p class="page-columns page-full"><img src="https://lktuan.github.io/blog/2024-06-17-nn-z2h-p1/index_files/figure-html/cell-41-output-1.svg" class="img-fluid figure-img column-screen"></p>
</figure>
</div>
</div>
</div>
</div>
</section>
</section>
<section id="pytorch-comparison" class="level1">
<h1>PyTorch comparison</h1>
<section id="doing-the-same-thing-but-in-pytorch-comparison" class="level2">
<h2 class="anchored" data-anchor-id="doing-the-same-thing-but-in-pytorch-comparison">doing the same thing but in PyTorch: comparison</h2>
<div id="188c2133" class="cell" data-execution_count="41">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb46-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb46-2"></span>
<span id="cb46-3">x1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.tensor([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span>]).double()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> x1.requires_grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb46-4">x2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.tensor([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>]).double()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> x2.requires_grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb46-5">w1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.tensor([<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.0</span>]).double()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> w1.requires_grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb46-6">w2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.tensor([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>]).double()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> w2.requires_grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb46-7">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.tensor([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.8813735870195432</span>]).double()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> b.requires_grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb46-8"></span>
<span id="cb46-9">n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>w1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>w2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b</span>
<span id="cb46-10">o <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.tanh(n)</span>
<span id="cb46-11"></span>
<span id="cb46-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(o.data.item())</span>
<span id="cb46-13">o.backward()</span>
<span id="cb46-14"></span>
<span id="cb46-15"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'------------------'</span>)</span>
<span id="cb46-16"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x1'</span>, x1.grad.item())</span>
<span id="cb46-17"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'w1'</span>, w1.grad.item())</span>
<span id="cb46-18"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x2'</span>, x2.grad.item())</span>
<span id="cb46-19"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'w2'</span>, w2.grad.item())</span>
<span id="cb46-20"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'------------------'</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>0.7071066904050358
------------------
x1 -1.5000003851533106
w1 1.0000002567688737
x2 0.5000001283844369
w2 0.0
------------------</code></pre>
</div>
</div>
</section>
</section>
<section id="building-the-library" class="level1 page-columns page-full">
<h1>Building the library</h1>
<section id="building-out-a-neural-net-library-multi-layer-perceptron-in-micrograd" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="building-out-a-neural-net-library-multi-layer-perceptron-in-micrograd">building out a neural net library (multi-layer perceptron) in micrograd</h2>
<p>We are going to build out a two-layer perceptron.</p>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="1">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 100.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://cs231n.github.io/assets/nn1/neural_net2.jpeg" class="img-fluid figure-img" style="width:100.0%"></p>
<figcaption>A 3-layer neural network with three inputs, two hidden layers of 4 neurons each and one output layer. Notice that in both cases there are connections (synapses) between neurons across layers, but not within a layer, photo credit to <a href="https://cs231n.github.io/neural-networks-1/">cs231n</a></figcaption>
</figure>
</div>
</div>
</div>
</div>
<div id="e0a044d7" class="cell" data-execution_count="42">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="annotated-cell-31" style="background: #f1f3f5;"><pre class="sourceCode numberSource python code-annotation-code number-lines code-with-copy code-annotated"><code class="sourceCode python"><span id="annotated-cell-31-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Neuron:</span>
<span id="annotated-cell-31-2"></span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-31" data-target-annotation="1">1</button><span id="annotated-cell-31-3" class="code-annotation-target">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, nin):</span>
<span id="annotated-cell-31-4">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [Value(np.random.uniform(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(nin)]</span>
<span id="annotated-cell-31-5">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Value(np.random.uniform(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="annotated-cell-31-6">    </span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-31" data-target-annotation="2">2</button><span id="annotated-cell-31-7" class="code-annotation-target">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__call__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, x):</span>
<span id="annotated-cell-31-8">        activation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>((wi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>xi <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> wi, xi <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w, x)), <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.b)</span>
<span id="annotated-cell-31-9">        out <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> activation.tanh()</span>
<span id="annotated-cell-31-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> out</span>
<span id="annotated-cell-31-11"></span>
<span id="annotated-cell-31-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> parameters(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="annotated-cell-31-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.b] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># list plus list gives you a list</span></span>
<span id="annotated-cell-31-14"></span>
<span id="annotated-cell-31-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Layer:</span>
<span id="annotated-cell-31-16"></span>
<span id="annotated-cell-31-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, nin, nout):</span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-31" data-target-annotation="3">3</button><span id="annotated-cell-31-18" class="code-annotation-target">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.neurons <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [Neuron(nin) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(nout)]</span>
<span id="annotated-cell-31-19"></span>
<span id="annotated-cell-31-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__call__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, x):</span>
<span id="annotated-cell-31-21">        outs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [n(x) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.neurons]</span>
<span id="annotated-cell-31-22">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> outs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(outs) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> outs</span>
<span id="annotated-cell-31-23"></span>
<span id="annotated-cell-31-24">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> parameters(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="annotated-cell-31-25">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> [p <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> neuron <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.neurons <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> p <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> neuron.parameters()] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># list comprehension</span></span>
<span id="annotated-cell-31-26">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># params = []</span></span>
<span id="annotated-cell-31-27">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for neuron in self.neurons:</span></span>
<span id="annotated-cell-31-28">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     ps = neuron.parameters()</span></span>
<span id="annotated-cell-31-29">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     params.extend(ps)</span></span>
<span id="annotated-cell-31-30">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># return params</span></span>
<span id="annotated-cell-31-31"></span>
<span id="annotated-cell-31-32"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> MLP:</span>
<span id="annotated-cell-31-33"></span>
<button class="code-annotation-anchor" data-target-cell="annotated-cell-31" data-target-annotation="4">4</button><span id="annotated-cell-31-34" class="code-annotation-target">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, nin, nouts):</span>
<span id="annotated-cell-31-35">        sz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [nin] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> nouts</span>
<span id="annotated-cell-31-36">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.layers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [Layer(sz[i], sz[i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(nouts))]</span>
<span id="annotated-cell-31-37"></span>
<span id="annotated-cell-31-38">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__call__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, x):</span>
<span id="annotated-cell-31-39">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> layer <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.layers:</span>
<span id="annotated-cell-31-40">            x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> layer(x)</span>
<span id="annotated-cell-31-41">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> x</span>
<span id="annotated-cell-31-42"></span>
<span id="annotated-cell-31-43">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> parameters(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="annotated-cell-31-44">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> [p <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> layer <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.layers <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> p <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> layer.parameters()] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for neuron in layer.neurons for neuron.parameters()]</span></span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
</details>
<div class="cell-annotation">
<dl class="code-annotation-container-hidden code-annotation-container-grid">
<dt data-target-cell="annotated-cell-31" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-31" data-code-lines="3" data-code-annotation="1">Number of <code>input</code> for the Neuron. <code>w</code> is randomly generated for each input, same for <code>b</code> which is the bias that controll “the happiness”.</span>
</dd>
<dt data-target-cell="annotated-cell-31" data-target-annotation="2">2</dt>
<dd>
<span data-code-cell="annotated-cell-31" data-code-lines="7" data-code-annotation="2">Object as a function: define the forward pass of the Neuron <img src="https://latex.codecogs.com/png.latex?%5Csum%5Climits_%7Bi=1%7D%5E%7Bnin%7D%20w_ix_i+b">, then squash the output using <code>tanh</code>.</span>
</dd>
<dt data-target-cell="annotated-cell-31" data-target-annotation="3">3</dt>
<dd>
<span data-code-cell="annotated-cell-31" data-code-lines="18" data-code-annotation="3">A Layer is a list of Neurons, <code>nout</code> specifies how many Neurons in the Layer. Each neuron has <code>nin</code> inputs ~ nin-D. We just initialize completely independent neurons with this given dimensionality.</span>
</dd>
<dt data-target-cell="annotated-cell-31" data-target-annotation="4">4</dt>
<dd>
<span data-code-cell="annotated-cell-31" data-code-lines="34" data-code-annotation="4">A MLP is a sequence of Layers, picture above depicts a 3-layers MLP containing 1 input layer and 3 output layers, we say the size is 4. We sequentially create connection from the input layer to the 1st output layer, 1st output layer to 2nd output layer,…</span>
</dd>
</dl>
</div>
</div>
<div id="ff8ca4dd" class="cell" data-execution_count="43">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb48-1">nin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb48-2">nouts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.0</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>]</span>
<span id="cb48-3">[nin] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> nouts</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="40">
<pre><code>[3, 2.0, 3.0, -1.0]</code></pre>
</div>
</div>
<div id="04dc941c" class="cell" data-execution_count="44">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb50-1">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.0</span>]</span>
<span id="cb50-2">n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Neuron(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb50-3">l <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Layer(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb50-4">n(x)</span>
<span id="cb50-5">l(x)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="41">
<pre><code>[Value(data=0.6482171154461839),
 Value(data=-0.9819100896618514),
 Value(data=0.42012274248341236)]</code></pre>
</div>
</div>
<div id="8cf5d3a3" class="cell" data-execution_count="45">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb52" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb52-1">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.0</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>]</span>
<span id="cb52-2">m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> MLP(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># a MLP with 3-D input, 3 output layers contains 4, 4, 1 neurons in each layer respectively</span></span>
<span id="cb52-3">m(x)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="42">
<pre><code>Value(data=-0.4705965544324498)</code></pre>
</div>
</div>
<div class="page-columns page-full">
<div id="237a863d" class="cell page-columns page-full" data-execution_count="46">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb54" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb54-1">draw_dot(m(x))</span></code></pre></div>
</details>
<div class="cell-output cell-output-display page-columns page-full" data-execution_count="43">
<div class="page-columns page-full">
<figure class="figure page-columns page-full">
<p class="page-columns page-full"><img src="https://lktuan.github.io/blog/2024-06-17-nn-z2h-p1/index_files/figure-html/cell-47-output-1.svg" class="img-fluid figure-img column-screen"></p>
</figure>
</div>
</div>
</div>
</div>
</section>
<section id="creating-a-tiny-dataset-writing-the-loss-function" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="creating-a-tiny-dataset-writing-the-loss-function">creating a tiny dataset, writing the loss function</h2>
<p>A simple data set, <code>m()</code> is the MLP we defined above.</p>
<div id="20ba7355" class="cell" data-execution_count="47">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb55" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb55-1">xs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb55-2">    [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.0</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>],</span>
<span id="cb55-3">    [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.0</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>],</span>
<span id="cb55-4">    [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>],</span>
<span id="cb55-5">    [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>]</span>
<span id="cb55-6">]</span>
<span id="cb55-7">ys <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># designed targets</span></span></code></pre></div>
</details>
</div>
<div class="page-columns page-full"><p>Writing the loss function. </p><div class="no-row-height column-margin column-container"><span class="margin-aside">I was unable to sum a list of Value, found the solution <a href="https://stackoverflow.com/questions/54153552/unsupported-operand-type-error-when-adding-objects-within-list-using-sum-functio">here</a>; Edit: I used Numpy random instead of random</span></div></div>
<div id="bad2b0d7" class="cell" data-execution_count="48">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb56" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb56-1">ypred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [m(x) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> xs]</span>
<span id="cb56-2">loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([(yout <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> ygt)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> ygt, yout <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(ys, ypred)]).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()</span>
<span id="cb56-3"></span>
<span id="cb56-4">loss</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="45">
<pre><code>Value(data=3.7846173239470486)</code></pre>
</div>
</div>
<p>Backpropagation the <code>loss</code>, some magical here:</p>
<div id="88f8a81a" class="cell" data-execution_count="49">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb58" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb58-1">loss.backward()</span></code></pre></div>
</details>
</div>
<p>We can look into the gradient of weight of the first neuron of the first layer (input layer)</p>
<div id="6bfcc38c" class="cell" data-execution_count="50">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb59" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb59-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'value of 1st neuron in 1st layer: '</span>,m.layers[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].neurons[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].w[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].data)</span>
<span id="cb59-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'grad of 1st neuron in 1st layer: '</span>,m.layers[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].neurons[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].w[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].grad)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>value of 1st neuron in 1st layer:  -0.6357735432605731
grad of 1st neuron in 1st layer:  -4.1814374695537895</code></pre>
</div>
</div>
<div class="page-columns page-full">
<div id="2c9861ac" class="cell page-columns page-full" data-execution_count="51">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb61" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb61-1">draw_dot(loss)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display page-columns page-full" data-execution_count="48">
<div class="page-columns page-full">
<figure class="figure page-columns page-full">
<p class="page-columns page-full"><img src="https://lktuan.github.io/blog/2024-06-17-nn-z2h-p1/index_files/figure-html/cell-52-output-1.svg" class="img-fluid figure-img column-screen"></p>
</figure>
</div>
</div>
</div>
</div>
</section>
<section id="collecting-all-of-the-parameters-of-the-neural-net" class="level2">
<h2 class="anchored" data-anchor-id="collecting-all-of-the-parameters-of-the-neural-net">collecting all of the parameters of the neural net</h2>
<p>We aim to produce the fitness <code>ypred</code>. <code>xs</code> is the data, the input of problem, we can not change it. <code>ys</code> is the ground true, can not changes as well. What we can change is the “paramters” of each neuron, which is weight <code>w</code> and bias <code>b</code>.</p>
<p>We add in to each class a <code>parameters()</code> function to collect those. Finally we can get all the paramters of the MLP:</p>
<div id="d4c227bc" class="cell" data-execution_count="52">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb62" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb62-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(m.parameters())</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="49">
<pre><code>41</code></pre>
</div>
</div>
</section>
<section id="doing-gradient-descent-optimization-manually-training-the-network" class="level2">
<h2 class="anchored" data-anchor-id="doing-gradient-descent-optimization-manually-training-the-network">doing gradient descent optimization manually, training the network</h2>
<p>Now we will try to change the paramters to minimize the loss, which means our prediction will be more close to the ground true.</p>
<p><strong>Forward pass</strong>, calculate the loss:</p>
<div id="6a39b17e" class="cell" data-execution_count="53">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb64" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb64-1">ypred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [m(x) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> xs]</span>
<span id="cb64-2">loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([(yout <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> ygt)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> ygt, yout <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(ys, ypred)]).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()</span>
<span id="cb64-3">loss</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="50">
<pre><code>Value(data=3.7846173239470486)</code></pre>
</div>
</div>
<p><strong>Backward pass</strong>, calculate the parameters:</p>
<div id="799752ef" class="cell" data-execution_count="54">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb66" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb66-1">loss.backward()</span></code></pre></div>
</details>
</div>
<p><strong>Update the parameters</strong>, change the parameters following opposite direction to reduce the loss:</p>
<div id="d46206a7" class="cell" data-execution_count="55">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb67" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb67-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> p <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> m.parameters():</span>
<span id="cb67-2">    p.data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> p.grad <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># we want the p.data go on opposite direction of the loss</span></span></code></pre></div>
</details>
</div>
<p><code>0.01</code> is the learning rate!</p>
<p><strong>New loss</strong></p>
<div id="5fb4eec1" class="cell" data-execution_count="56">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb68" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb68-1">ypred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [m(x) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> xs]</span>
<span id="cb68-2">loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([(yout <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> ygt)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> ygt, yout <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(ys, ypred)]).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()</span>
<span id="cb68-3">loss</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="53">
<pre><code>Value(data=0.885210729994525)</code></pre>
</div>
</div>
<p>Yeah the loss decreased. In short, the process is:</p>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"><p></p>
<div>
<pre class="mermaid mermaid-js">%%{init: {'theme':'dark'}}%%
flowchart LR

P1(Updated parameters) -- Forward Pass --&gt; L(Loss)
L(Loss) -- Backward Pass --&gt; P2(Parameters to update) 
P2(Parameters to update)  -- Update Pamameters --&gt; P1(Updated parameters)
</pre>
</div>
<p></p></figure><p></p>
</div>
</div>
</div>
<p><strong>Automate the training loop</strong>:</p>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Warning
</div>
</div>
<div class="callout-body-container callout-body">
<p>For each process, there remained a subtle bug above that we didn’t flush the grads before backpropagation. Because we did not overwrite the gradients (remember the <code>+=</code>), they kept accumulated. The next action of backward and changing parameters using learning rate and grad (which produce a massive step size) become wrong! We must set the grad to zero before backward pass.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lktuan.github.io/blog/2024-06-17-nn-z2h-p1/guilty.png" class="img-fluid figure-img"></p>
<figcaption>Common guilties when training the NN</figcaption>
</figure>
</div>
</div>
</div>
<div id="e6a7c5f1" class="cell" data-execution_count="57">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb70" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb70-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> k <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>):</span>
<span id="cb70-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># forward pass:</span></span>
<span id="cb70-3">    ypred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [m(x) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> xs]</span>
<span id="cb70-4">    loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([(yout <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> ygt)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> ygt, yout <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(ys, ypred)]).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()</span>
<span id="cb70-5"></span>
<span id="cb70-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># backward pass:</span></span>
<span id="cb70-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> p <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> m.parameters():</span>
<span id="cb70-8">        p.grad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span></span>
<span id="cb70-9">    loss.backward()</span>
<span id="cb70-10"></span>
<span id="cb70-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># update params:</span></span>
<span id="cb70-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> p <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> m.parameters():</span>
<span id="cb70-13">        p.data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> p.grad</span>
<span id="cb70-14"></span>
<span id="cb70-15">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(k, loss.data)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>0 0.885210729994525
1 0.7272070306002337
2 0.6335880961402813
3 0.5694033268577418
4 0.5210728602755308
5 0.48234433619750416
6 0.4499798770914163
7 0.4221446577843293
8 0.3977190488833604
9 0.3759751713337349
10 0.3564130670665513
11 0.33867257920988014
12 0.32248348490480044
13 0.30763598643104695
14 0.29396252735650596
15 0.28132615850080067
16 0.2696128276033427
17 0.25872609733197516
18 0.2485834130081963
19 0.23911338866893608</code></pre>
</div>
</div>
<div id="69ae0b38" class="cell" data-execution_count="58">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb72" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb72-1">ypred</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="55">
<pre><code>[Value(data=0.7723855044989809),
 Value(data=-0.7666895995000865),
 Value(data=-0.7316139699290238),
 Value(data=0.7533418844066474)]</code></pre>
</div>
</div>
</section>
</section>
<section id="summary" class="level1">
<h1>Summary</h1>
<section id="summary-of-what-we-learned-how-to-go-towards-modern-neural-nets" class="level2">
<h2 class="anchored" data-anchor-id="summary-of-what-we-learned-how-to-go-towards-modern-neural-nets">summary of what we learned, how to go towards modern neural nets</h2>
<ol type="1">
<li>What are Neural Nets: they are mathematical expressions, in case of MLP it takes: (1) data as the input, and (2) weights and biases as parameters to build out expression for the forward pass followed by the loss function.</li>
<li>The loss function is kind of measure for the accuracy of predictions. The low loss implies that predicted values are matching our targets and the networks are behaving well.</li>
<li>The process of Gradient Descent is for each step, we calculate the loss (output of the nets), backwarding it to get paramters, then updating data (which we can change - weights and biases) follow the opposite side of the loss (negative grad * learning rate). We’ll get a lower loss, and backwarding again and again. This process will find the local minimum of the loss.</li>
</ol>
</section>
<section id="walkthrough-of-the-full-code-of-micrograd-on-github" class="level2">
<h2 class="anchored" data-anchor-id="walkthrough-of-the-full-code-of-micrograd-on-github">walkthrough of the full code of micrograd on github</h2>
<p>Same with which we built today:</p>
<ul>
<li>engine: Value</li>
<li>nn: Neuron, Layer, MLP, and modulize the zero grad process to class Module</li>
<li>test: sanity check - compare the backward with <code>torch</code>, also for the forward pass</li>
<li>demo: a bit complicated example with <code>sklearn</code> dataset, using batch processing when the dataset come large, the loss is slightly different - SVM max-margin loss and using of auto L2 regularization</li>
<li>learning rate decay: is a scaled as a function of number of iterations, high at begin and low at the end</li>
</ul>
</section>
<section id="real-stuff-diving-into-pytorch-finding-their-backward-pass-for-tanh" class="level2">
<h2 class="anchored" data-anchor-id="real-stuff-diving-into-pytorch-finding-their-backward-pass-for-tanh">real stuff: diving into PyTorch, finding their backward pass for <code>tanh</code></h2>
<p>These libraries unfortunately grow in size and <strong>entropy</strong>, if you just search for <code>tanh</code> it’ll give you thousands of results.</p>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">conclusion</h2>
<p>There will be follow up session yeah haha.</p>
</section>
<section id="outtakes" class="level2">
<h2 class="anchored" data-anchor-id="outtakes">outtakes :)</h2>
<p>Pytorch self-defined autograd.</p>
<p>🤙🚀🔥</p>


<!-- -->

</section>
</section>

 ]]></description>
  <category>til</category>
  <category>python</category>
  <category>andrej karpathy</category>
  <category>nn-z2h</category>
  <category>backpropagation</category>
  <category>neural networks</category>
  <guid>https://lktuan.github.io/blog/2024-06-17-nn-z2h-p1/</guid>
  <pubDate>Sat, 15 Jun 2024 17:00:00 GMT</pubDate>
  <media:content url="https://lktuan.github.io/blog/2024-06-17-nn-z2h-p1/puppy.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Bitcoin tour in Python</title>
  <dc:creator>Tuan Le Khac</dc:creator>
  <link>https://lktuan.github.io/blog/2024-06-10-python-bitcoin/</link>
  <description><![CDATA[ 





<p>A from-scratch implementation of Bitcoin in Python under tuturial from Andrej Karpathy.</p>
<section id="motivation" class="level1">
<h1>Motivation</h1>
<p>Đây là bài thực hành implement Bitcoin sử dụng Python mà tôi học được trên trang blog của Andrej Karpathy, nhà Khoa học máy tính, cựu Director mảng AI của Open AI.</p>
<p><a href="https://karpathy.ai/">Andrej Karpathy</a> cho rằng blockchain đang giúp nới rộng trạng thái của ngành công nghiệp phát triển phần mềm, từ open source thành open source plus. Nghĩa là chúng ta đang không chỉ chia sẻ, công khai mã nguồn, mà còn cả tài nguyên (run time, computing machine). Và với tinh thần:</p>
<blockquote class="blockquote">
<p>“what I cannot create I do not understand”</p>
</blockquote>
<p>, cách tốt nhất để học nó là thực hiện nó. Tôi cũng cho là thế!</p>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="1">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 100.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lktuan.github.io/blog/2024-06-10-python-bitcoin/karpathy-podcast.jpg" class="img-fluid figure-img" style="width:100.0%"></p>
<figcaption>Andrej Karpathy trong podcast với Lex Fridman</figcaption>
</figure>
</div>
</div>
</div>
</div>
<p>Phạm vi bài thực hành này là <strong>tạo, ký số, phát hành các giao dịch Bitcoin thuần Python, từ con số 0, không thư viện phụ thuộc</strong>.</p>
<p>Đây là môi trường Python của mình:</p>
<div id="3789c07c" class="cell" data-execution_count="1">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> sys</span>
<span id="cb1-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(sys.version)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>3.11.4 (tags/v3.11.4:d2340ef, Jun  7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)]</code></pre>
</div>
</div>
</section>
<section id="step-1-generating-a-crypto-identity" class="level1 page-columns page-full">
<h1>Step 1: generating a crypto identity</h1>
<p>Một trong những đặc tính quan trọng nhất của Bitcoin nói riêng và Blockchain (chuỗi khối) nói chung là tính bảo mật. Blockchain sử dụng các phương thức bảo mật như: <strong>ECC</strong>, <strong>ECDH</strong> hoặc <strong>ECDSA</strong>, trong đó <code>EC</code> chính là viết tắt của Elliptic Curve. Không chỉ trong lĩnh vực blockchain, <code>EC</code> còn được sử dụng rộng rãi trong bảo mật <a href="https://datatracker.ietf.org/doc/html/rfc4492"><code>TLS</code></a>, <a href="https://datatracker.ietf.org/doc/html/rfc6637"><code>PGP</code></a>, <a href="https://datatracker.ietf.org/doc/html/rfc5656"><code>SSH</code></a>.</p>
<p>Khác với các bảo mật <strong>đối xứng</strong> thông thường, ta có một key duy nhất để mã hóa và giải mã ~ có key là có tất cả, không có key là không có gì, các thuật toán mã hóa EC là <strong>Bất đối xứng</strong>. Trong đó, ta có một cặp <code>private key</code>/<code>public key</code> (khóa bí mật và khóa công khai). Khóa bí mật chỉ là một con số ngẫu nhiên, cần được chủ nhân của nó <strong>giữ bí mật hoàn toàn</strong>, ví nó là thứ duy nhất tạo ra được <strong>chữ kí</strong> cho họ. Khác với khóa bí mật, khóa công khai được công khai cho tất cả mọi người. <code>public key</code> được tạo ra bởi <strong>phép nhân</strong> với <code>private key</code> trong <strong>đường cong Elliptic</strong>. Phép nhân đường cong Elliptic là một phép toán <strong>trap door</strong> (cửa lật), có nghĩa là nó dễ tính theo <strong>một chiều</strong> (phép nhân) và không thể tính được theo chiều ngược lại (phép chia) ~ đó là lý do ta gọi nó là mã hóa bất đối xứng.</p>
<div class="page-columns page-full"><p>Bitcoin sử dụng Hệ mật trên đường cong Elliptic (ECC) để bảo mật giao dịch .</p><div class="no-row-height column-margin column-container"><span class="margin-aside">Xem thêm: 1. <a href="https://viblo.asia/p/gioi-thieu-ve-he-mat-tren-duong-cong-elliptic-ecc-XL6lA2PR5ek">Viblo</a>, 2. <a href="https://en.wikipedia.org/wiki/Elliptic-curve_cryptography">Wiki</a>, 3. <a href="https://mathworld.wolfram.com/EllipticCurve.html">Wolfram</a>, quá khó cho tôi tại thời điểm bây giờ - nên tôi sẽ tạm bỏ qua, dù gì cũng cần phác thảo một khung tranh “mờ mờ” trước, việc vẽ chi tiết để sau.</span></div></div>
<p>Đường cong <img src="https://latex.codecogs.com/png.latex?E:%20y%5E2%20=%20x%5E3%20+%20ax%20+%20b%20%5C:(mod%5C:p)"> trên trường hữu hạn <img src="https://latex.codecogs.com/png.latex?Z_p"> (cũng có người gọi là <img src="https://latex.codecogs.com/png.latex?Z/p">,<img src="https://latex.codecogs.com/png.latex?GF_(p)">,hoặc <img src="https://latex.codecogs.com/png.latex?F_p">, với p là số nguyên tố) được xác định bởi 6 tham số <img src="https://latex.codecogs.com/png.latex?T%20=%20(p,a,b,G,n,h)"> sau:</p>
<ul>
<li><p><img src="https://latex.codecogs.com/png.latex?p%20=%20FFFFFFFF%20FFFFFFFF%20FFFFFFFF%20FFFFFFFF%20FFFFFFFF%20FFFFFFFF%20FFFFFFFE%20FFFFFC2F"></p>
<p><img src="https://latex.codecogs.com/png.latex?=%202%5E%7B256%7D%20-%202%5E%7B32%7D%20-%202%5E9%20-%202%5E8%20-%202%5E7%20-%202%5E6%20-%202%5E4%20-%201"></p>
<p><img src="https://latex.codecogs.com/png.latex?=%202%5E%7B256%7D%20-%202%5E%7B32%7D%20-%20977"></p></li>
<li><p><img src="https://latex.codecogs.com/png.latex?a%20=%2000000000%2000000000%2000000000%2000000000%2000000000%2000000000%2000000000%2000000000"></p></li>
<li><p><img src="https://latex.codecogs.com/png.latex?b%20=%2000000000%2000000000%2000000000%2000000000%2000000000%2000000000%2000000000%2000000007"></p></li>
</ul>
<p>Vì được xác định trên <img src="https://latex.codecogs.com/png.latex?Z_p">, nên trên thực tế nó là một đường không liên lục, và trông sẽ như các điểm ngẫu nhiên trên một biểu đồ phân tán. Để dễ tưởng tượng và min họa, khi xác định trên trường số thực, EC sẽ trông như thế này:</p>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="1">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 100.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lktuan.github.io/blog/2024-06-10-python-bitcoin/what_does_ec_look_like.png" class="img-fluid figure-img" style="width:100.0%"></p>
<figcaption><a href="https://bitcoin.stackexchange.com/questions/21907/what-does-the-curve-used-in-bitcoin-secp256k1-look-like">What does the curve used in Bitcoin, secp256k1, look like?</a></figcaption>
</figure>
</div>
</div>
</div>
</div>
<p>Đây là tài liệu mà Andrej gợi ý cho chúng ta đọc về ECC: <a href="https://andrea.corbellini.name/2015/05/17/elliptic-curve-cryptography-a-gentle-introduction/">blog post</a> của Andrea Corbellini. Bài viết đầu tiên của ông giới thiệu EC trên <strong>trường số thực và luật nhóm</strong>. Theo đó, với EC được xác định bằng <img src="https://latex.codecogs.com/png.latex?%5C%7B(x,y)%5Cin%20R%5E2%20%7C%20y%5E2%20=%20x%5E3%20+%20ax%20+%20b,%204a%5E3%20+%2027b%5E2%20%5Cneq%200%5C%7D%20%5Ccup%20%5C%7B0%5C%7D">, trong đó (<img src="https://latex.codecogs.com/png.latex?4a%5E3%20+%2027b%5E2%20%5Cneq%200"> là để tránh điểm kỳ dị singular), cùng với các tiên đề về phép toán cộng (<img src="https://latex.codecogs.com/png.latex?+">) được trang bị gồm:</p>
<ol type="1">
<li>Tính đóng (closure): nếu <img src="https://latex.codecogs.com/png.latex?a"> và <img src="https://latex.codecogs.com/png.latex?b"> thuộc <img src="https://latex.codecogs.com/png.latex?G">, thì <img src="https://latex.codecogs.com/png.latex?a+b"> cũng thuộc <img src="https://latex.codecogs.com/png.latex?G">;</li>
<li>Tính kết hợp (associativity): <img src="https://latex.codecogs.com/png.latex?(a+b)+c%20=%20a%20+%20(b+c)">;</li>
<li>Sự tồn tại của phần tử đơn vị (identity element 0): <img src="https://latex.codecogs.com/png.latex?a+0=0+a=a">;</li>
<li>Tính khả nghịch (commutativity): với mọi <img src="https://latex.codecogs.com/png.latex?a">, tồn tại <img src="https://latex.codecogs.com/png.latex?b"> sao cho <img src="https://latex.codecogs.com/png.latex?a+b=0">;</li>
</ol>
<p>Nếu chúng ta có thêm tính chất thứ 5 sau:</p>
<ol start="5" type="1">
<li>Tính giao hoán (commutativity): <img src="https://latex.codecogs.com/png.latex?a+b%20=%20b+a">.</li>
</ol>
<p>Thì nhóm đó được xem là một nhóm Abel (Ví dụ: tập hợp các số nguyên <img src="https://latex.codecogs.com/png.latex?Z"> là một nhóm - Abel).</p>
<p>Tập hợp các điểm trên EC là một nhóm Abel, do đó nó cũng có tính chất trên: có sự tồn tại của <strong>phần tử đơn vị</strong> 0 (cũng là vô hạn); phần tử <strong>nghịch đảo</strong> của <img src="https://latex.codecogs.com/png.latex?P">, ký hiệu <img src="https://latex.codecogs.com/png.latex?-P">, là điểm đối xứng của P qua trục hoành; <strong>phép cộng</strong> được định nghĩa như sau: với ba điểm <img src="https://latex.codecogs.com/png.latex?P">, <img src="https://latex.codecogs.com/png.latex?Q">, <img src="https://latex.codecogs.com/png.latex?R"> khác 0 và thẳng hàng trên EC, thì <img src="https://latex.codecogs.com/png.latex?P%20+%20Q%20+%20R%20=%200">, bất kể thứ tự của các điểm - ta thấy nó thỏa mãn các tính chất kết hợp và giao hoán của một nhóm Abel!.</p>
<p><strong>Phép cộng hình học và đại số</strong> và <strong>phép nhân vô hướng</strong> sẽ được trình bày ở phía sau - trực tiếp trong không gian hữu hạn. Hiện tại ình chỉ cố gắng <strong>hình dung</strong> các tính chất của EC thông qua việc xem xét nó trên <strong>trường số thực</strong>.</p>
<p>Block code dưới đây định nghĩa đường cong EC. Bitcoin (hay Ethereum) sử dụng một đường cong theo tiêu chuẩn <a href="https://en.bitcoin.it/wiki/Secp256k1">secp256k1</a> do <em>Viện Tiêu Chuẩn và Kỹ Thuật Quốc Gia Mỹ (NIST)</em> đặt ra. Với <img src="https://latex.codecogs.com/png.latex?a=0">, <img src="https://latex.codecogs.com/png.latex?b=7">, định nghĩa đường cong trên trường <img src="https://latex.codecogs.com/png.latex?Z_p"> giờ sẽ là:</p>
<p><img src="https://latex.codecogs.com/png.latex?%5C%7B(x,y)%5Cin%20(Z_p)%5E2%20%7C%5C:%20y%5E2%20%5Cequiv%20x%5E3%20+%207%20%5C:%20(mod%20%5C:%20p)%5C%7D%20%5Ccup%20%5C%7B0%5C%7D"></p>
<div id="30597419" class="cell" data-execution_count="2">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from __future__ import annotations # PEP 563: Postponed evaluation of annotations</span></span>
<span id="cb3-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># since my python version is 3.11.4 so no need to use future annotation feature </span></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># which redefined since python 3.5</span></span>
<span id="cb3-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> dataclasses <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> dataclass <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># replace constructor __init__, </span></span>
<span id="cb3-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># help us to easily declare class attributes.</span></span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@dataclass</span></span>
<span id="cb3-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Curve:</span>
<span id="cb3-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb3-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Elliptic Curve over the field of integers modulo a prime.</span></span>
<span id="cb3-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Points on the curve satisfy y^2 = x^3 + a*x + b (mod p).</span></span>
<span id="cb3-12"></span>
<span id="cb3-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Z_p là một TẬP HỢP, khi p là số nguyên tố thì có thể coi nó là một TRƯỜNG </span></span>
<span id="cb3-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    https://forum.mathscope.org/archive/index.php/t-11835.html</span></span>
<span id="cb3-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb3-16">    p: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ta nói secp256k1 có đặc trưng p, được định trong trường Z_p</span></span>
<span id="cb3-17">    a: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span></span>
<span id="cb3-18">    b: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span></span>
<span id="cb3-19"></span>
<span id="cb3-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># secp256k1 uses a = 0, b = 7, so we're dealing with the curve y^2 = x^3 + 7 (mod p)</span></span>
<span id="cb3-21">bitcoin_curve <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Curve(</span>
<span id="cb3-22">    p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F</span>,</span>
<span id="cb3-23">    a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x0000000000000000000000000000000000000000000000000000000000000000</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># a = 0</span></span>
<span id="cb3-24">    b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x0000000000000000000000000000000000000000000000000000000000000007</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># b = 7</span></span>
<span id="cb3-25">)</span></code></pre></div>
</details>
</div>
<p>Chúng ta chưa thấy phương trình của EC được thể hiện trong class <code>Curve</code>, chúng ta implement nó bằng cách tạo một class <code>Point</code>. Sau khi xác định curve, ta xác định generator - điểm sinh G (là một điểm dùng để khởi tạo quá trình “walk” trên đường cong)</p>
<div id="aba59c9c" class="cell" data-execution_count="3">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@dataclass</span></span>
<span id="cb4-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Point:</span>
<span id="cb4-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">""" Số nguyên tọa độ (x,y) trên đường cong """</span></span>
<span id="cb4-4">    curve: Curve</span>
<span id="cb4-5">    x: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span></span>
<span id="cb4-6">    y: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span></span>
<span id="cb4-7"></span>
<span id="cb4-8">G <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Point(</span>
<span id="cb4-9">    bitcoin_curve,</span>
<span id="cb4-10">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798</span>,</span>
<span id="cb4-11">    y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8</span>,    </span>
<span id="cb4-12">)</span>
<span id="cb4-13"></span>
<span id="cb4-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># xác nhận xem G có nằm trên đường cong hay không, tức là y^2 = x^3 + 7 (mod p)</span></span>
<span id="cb4-15"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G is on the curve:"</span>, (G.y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> G.x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> bitcoin_curve.p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb4-16"></span>
<span id="cb4-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># các giá trị bất kỳ khác HẦU NHƯ sẽ không nằm trên đường cong:</span></span>
<span id="cb4-18"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb4-19">random.seed(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1337</span>)</span>
<span id="cb4-20">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random.randrange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, bitcoin_curve.p) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ngẫu nhiên giữa 0 và p</span></span>
<span id="cb4-21">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random.randrange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, bitcoin_curve.p)</span>
<span id="cb4-22"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"G is on the curve:"</span>, (y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> bitcoin_curve.p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>G is on the curve: True
G is on the curve: False</code></pre>
</div>
</div>
<p>Some notes to be updated here</p>
<div id="13491355" class="cell" data-execution_count="4">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@dataclass</span></span>
<span id="cb6-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Generator:</span>
<span id="cb6-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb6-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    A Generator over a curve: an initial point and pre-declared order.</span></span>
<span id="cb6-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb6-6">    G: Point <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># starting point on the curve</span></span>
<span id="cb6-7">    n: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the order 0*G = n*G = INF (????)</span></span>
<span id="cb6-8"></span>
<span id="cb6-9">bitcoin_gen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Generator(</span>
<span id="cb6-10">    G <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> G,</span>
<span id="cb6-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the order of G is known and can be mathematically derived</span></span>
<span id="cb6-12">    n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141</span>,</span>
<span id="cb6-13">)</span></code></pre></div>
</details>
</div>
<p>Như vậy đã định nghĩa xong Đường Cong, Điểm sinh (<code>G</code>), và Trình tạo. Giờ ta sẽ tạo <code>private key</code> (hay <code>secret key</code>) - một số nguyên ngẫu nhiên thỏa <code>1&lt;= key &lt; n</code> (n đại diện cho order).</p>
<div id="3d3042bf" class="cell" data-execution_count="5">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb7-1">secret_key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>.from_bytes(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">b'Hi, this is Tuan'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'big'</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># this is how I will do it for reproducibility</span></span>
<span id="cb7-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">assert</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> secret_key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> bitcoin_gen.n</span>
<span id="cb7-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(secret_key)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>96250501864010348276735010787267273070</code></pre>
</div>
</div>
<p>Giờ chúng ta sẽ tạo <code>public key</code>, chỉnh là cộng <code>G</code> <code>private key</code> lần.</p>
<div id="5a9f1c81" class="cell" data-execution_count="6">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb9-1">INF <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Point(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># special point at "infinity", kind of like a zero</span></span>
<span id="cb9-2"></span>
<span id="cb9-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> extended_euclidean_algorithm(a, b):</span>
<span id="cb9-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb9-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns (gcd, x, y) s.t. a * x + b * y == gcd</span></span>
<span id="cb9-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This function implements the extended Euclidean</span></span>
<span id="cb9-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    algorithm and runs in O(log b) in the worst case,</span></span>
<span id="cb9-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    taken from Wikipedia.</span></span>
<span id="cb9-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb9-10">    old_r, r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a, b</span>
<span id="cb9-11">    old_s, s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb9-12">    old_t, t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb9-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb9-14">        quotient <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> old_r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> r</span>
<span id="cb9-15">        old_r, r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r, old_r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> quotient <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> r</span>
<span id="cb9-16">        old_s, s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> s, old_s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> quotient <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> s</span>
<span id="cb9-17">        old_t, t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> t, old_t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> quotient <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> t</span>
<span id="cb9-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> old_r, old_s, old_t</span>
<span id="cb9-19"></span>
<span id="cb9-20"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> inv(n, p):</span>
<span id="cb9-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">""" returns modular multiplicate inverse m s.t. (n * m) % p == 1 """</span></span>
<span id="cb9-22">    gcd, x, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> extended_euclidean_algorithm(n, p) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pylint: disable=unused-variable</span></span>
<span id="cb9-23">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> p</span>
<span id="cb9-24"></span>
<span id="cb9-25"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> elliptic_curve_addition(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, other: Point) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> Point:</span>
<span id="cb9-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># handle special case of P + 0 = 0 + P = 0</span></span>
<span id="cb9-27">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> INF:</span>
<span id="cb9-28">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> other</span>
<span id="cb9-29">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> other <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> INF:</span>
<span id="cb9-30">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span></span>
<span id="cb9-31">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># handle special case of P + (-P) = 0</span></span>
<span id="cb9-32">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> other.x <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">and</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> other.y:</span>
<span id="cb9-33">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> INF</span>
<span id="cb9-34">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># compute the "slope"</span></span>
<span id="cb9-35">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> other.x: <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (self.y = other.y is guaranteed too per above check)</span></span>
<span id="cb9-36">        m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.curve.a) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> inv(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.curve.p)</span>
<span id="cb9-37">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb9-38">        m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> other.y) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> inv(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> other.x, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.curve.p)</span>
<span id="cb9-39">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># compute the new point</span></span>
<span id="cb9-40">    rx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (m<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> other.x) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.curve.p</span>
<span id="cb9-41">    ry <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>(m<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(rx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.curve.p</span>
<span id="cb9-42">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> Point(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.curve, rx, ry)</span>
<span id="cb9-43"></span>
<span id="cb9-44">Point.<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__add__</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> elliptic_curve_addition <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># monkey patch addition into the Point class</span></span></code></pre></div>
</details>
</div>
<p>Giờ ta sẽ thử gen một số bộ <code>private key</code>, <code>public key</code>:</p>
<div id="d26875a2" class="cell" data-execution_count="7">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if our secret key was the integer 1, then our public key would just be G:</span></span>
<span id="cb10-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use sk for secret key = private key</span></span>
<span id="cb10-3">sk <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb10-4">pk <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> G</span>
<span id="cb10-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f" secret key: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>sk<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> public key: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>(pk.x, pk.y)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb10-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Verify the public key is on the curve: "</span>, (pk.y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> pk.x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> bitcoin_curve.p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb10-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if it was 2, the public key is G + G:</span></span>
<span id="cb10-8">sk <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb10-9">pk <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> G <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> G</span>
<span id="cb10-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f" secret key: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>sk<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> public key: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>(pk.x, pk.y)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb10-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Verify the public key is on the curve: "</span>, (pk.y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> pk.x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> bitcoin_curve.p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb10-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># etc.:</span></span>
<span id="cb10-13">sk <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb10-14">pk <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> G <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> G <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> G</span>
<span id="cb10-15"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f" secret key: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>sk<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> public key: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>(pk.x, pk.y)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb10-16"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Verify the public key is on the curve: "</span>, (pk.y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> pk.x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> bitcoin_curve.p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code> secret key: 1
 public key: (55066263022277343669578718895168534326250603453777594175500187360389116729240, 32670510020758816978083085130507043184471273380659243275938904335757337482424)
Verify the public key is on the curve:  True
 secret key: 2
 public key: (89565891926547004231252920425935692360644145829622209833684329913297188986597, 12158399299693830322967808612713398636155367887041628176798871954788371653930)
Verify the public key is on the curve:  True
 secret key: 3
 public key: (112711660439710606056748659173929673102114977341539408544630613555209775888121, 25583027980570883691656905877401976406448868254816295069919888960541586679410)
Verify the public key is on the curve:  True</code></pre>
</div>
</div>
<p>Chúng ta cần tăng tốc việc cộng <code>G</code> với chính nó với số lần cực kì lớn, do đó Andrej sử dụng 1 thuật toán <code>double_and_add</code> như sau:</p>
<div id="170ec2b6" class="cell" data-execution_count="8">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> double_and_add(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, k: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> Point:</span>
<span id="cb12-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">assert</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(k, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">and</span> k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb12-3">    result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> INF</span>
<span id="cb12-4">    append <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span></span>
<span id="cb12-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> k:</span>
<span id="cb12-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb12-7">            result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> append</span>
<span id="cb12-8">        append <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> append</span>
<span id="cb12-9">        k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb12-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> result</span>
<span id="cb12-11"></span>
<span id="cb12-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># monkey patch double and add into the Point class for convenience</span></span>
<span id="cb12-13">Point.<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__rmul__</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> double_and_add</span>
<span id="cb12-14"></span>
<span id="cb12-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># "verify" correctness</span></span>
<span id="cb12-16"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(G <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>G)</span>
<span id="cb12-17"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(G <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> G <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>G)</span>
<span id="cb12-18"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(G <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> G <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> G <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>G)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>True
True
True</code></pre>
</div>
</div>
<p>Giờ test với <code>private_key</code> mà chúng ta tạo lúc đầu:</p>
<div id="16574aa1" class="cell" data-execution_count="9">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># efficiently calculate our actual public key!</span></span>
<span id="cb14-2">public_key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> secret_key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> G</span>
<span id="cb14-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"x: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>public_key<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">y: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>public_key<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>y<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb14-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Verify the public key is on the curve: "</span>, (public_key.y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> public_key.x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> bitcoin_curve.p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>x: 95402322600731393781298762734940467224395293762704745012558525900395478371250
y: 53299222514341331201918874000650944949613849271347665849281678080211837503484
Verify the public key is on the curve:  True</code></pre>
</div>
</div>
<p><strong>🚀Đã được modulized ở</strong> <a href=""><code>curves.py</code></a></p>
<p>Với cặp private/public key ta đã implement được khả năng định danh cho Bitcoin. Giờ ta cần liên kết nó với địa chỉ ví. Trước hết ta cần triển khai một số hàm hash.</p>
<p>Có thể sử dụng <code>hashlib</code> của Python tuy nhiên Andrej không muốn sử dụng thư viện phụ thuộc. Andrej đã viết lại hai hàm hash mà Bitcoin sử dụng là <code>SHA-256</code> và <code>RIPEMD-160</code>, lần lượt dưới đây, mình note giải thích của Andrej ở phần code comment.</p>
<p>Có lẽ sẽ cần một dịp khác để hiểu hai hàm băm này, nó nằm ngoài khả năng của mình.</p>
<div id="b56be535" class="cell" data-execution_count="10">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> gen_sha256_with_variable_scope_protector_to_not_pollute_global_namespace():</span>
<span id="cb16-2"></span>
<span id="cb16-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb16-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    SHA256 implementation.</span></span>
<span id="cb16-5"></span>
<span id="cb16-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Follows the FIPS PUB 180-4 description for calculating SHA-256 hash function</span></span>
<span id="cb16-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf</span></span>
<span id="cb16-8"></span>
<span id="cb16-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Noone in their right mind should use this for any serious reason. This was written</span></span>
<span id="cb16-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    purely for educational purposes.</span></span>
<span id="cb16-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb16-12"></span>
<span id="cb16-13">    <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> math</span>
<span id="cb16-14">    <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> itertools <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> count, islice</span>
<span id="cb16-15"></span>
<span id="cb16-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># -----------------------------------------------------------------------------</span></span>
<span id="cb16-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># SHA-256 Functions, defined in Section 4</span></span>
<span id="cb16-18"></span>
<span id="cb16-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> rotr(x, n, size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>):</span>
<span id="cb16-20">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> (x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> n) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> (x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> n) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb16-21"></span>
<span id="cb16-22">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> shr(x, n):</span>
<span id="cb16-23">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> n</span>
<span id="cb16-24"></span>
<span id="cb16-25">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> sig0(x):</span>
<span id="cb16-26">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> rotr(x, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span> rotr(x, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span> shr(x, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb16-27"></span>
<span id="cb16-28">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> sig1(x):</span>
<span id="cb16-29">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> rotr(x, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">17</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span> rotr(x, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span> shr(x, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb16-30"></span>
<span id="cb16-31">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> capsig0(x):</span>
<span id="cb16-32">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> rotr(x, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span> rotr(x, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span> rotr(x, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span>)</span>
<span id="cb16-33"></span>
<span id="cb16-34">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> capsig1(x):</span>
<span id="cb16-35">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> rotr(x, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span> rotr(x, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span> rotr(x, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>)</span>
<span id="cb16-36"></span>
<span id="cb16-37">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> ch(x, y, z):</span>
<span id="cb16-38">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> (x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> y)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span> (<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> z)</span>
<span id="cb16-39"></span>
<span id="cb16-40">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> maj(x, y, z):</span>
<span id="cb16-41">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> (x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> y) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span> (x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> z) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span> (y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> z)</span>
<span id="cb16-42"></span>
<span id="cb16-43">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> b2i(b):</span>
<span id="cb16-44">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>.from_bytes(b, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'big'</span>)</span>
<span id="cb16-45"></span>
<span id="cb16-46">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> i2b(i):</span>
<span id="cb16-47">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> i.to_bytes(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'big'</span>)</span>
<span id="cb16-48"></span>
<span id="cb16-49">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># -----------------------------------------------------------------------------</span></span>
<span id="cb16-50">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># SHA-256 Constants</span></span>
<span id="cb16-51"></span>
<span id="cb16-52">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> is_prime(n):</span>
<span id="cb16-53">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">any</span>(f <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> f <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(math.sqrt(n))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb16-54"></span>
<span id="cb16-55">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> first_n_primes(n):</span>
<span id="cb16-56">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> islice(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(is_prime, count(start<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)), n)</span>
<span id="cb16-57"></span>
<span id="cb16-58">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> frac_bin(f, n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>):</span>
<span id="cb16-59">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">""" return the first n bits of fractional part of float f """</span></span>
<span id="cb16-60">        f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> math.floor(f) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get only the fractional part</span></span>
<span id="cb16-61">        f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>n <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># shift left</span></span>
<span id="cb16-62">        f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(f) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># truncate the rest of the fractional content</span></span>
<span id="cb16-63">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> f</span>
<span id="cb16-64"></span>
<span id="cb16-65">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> genK():</span>
<span id="cb16-66">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb16-67"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Follows Section 4.2.2 to generate K</span></span>
<span id="cb16-68"></span>
<span id="cb16-69"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        The first 32 bits of the fractional parts of the cube roots of the first</span></span>
<span id="cb16-70"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        64 prime numbers:</span></span>
<span id="cb16-71"></span>
<span id="cb16-72"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        428a2f98 71374491 b5c0fbcf e9b5dba5 3956c25b 59f111f1 923f82a4 ab1c5ed5</span></span>
<span id="cb16-73"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        d807aa98 12835b01 243185be 550c7dc3 72be5d74 80deb1fe 9bdc06a7 c19bf174</span></span>
<span id="cb16-74"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        e49b69c1 efbe4786 0fc19dc6 240ca1cc 2de92c6f 4a7484aa 5cb0a9dc 76f988da</span></span>
<span id="cb16-75"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        983e5152 a831c66d b00327c8 bf597fc7 c6e00bf3 d5a79147 06ca6351 14292967</span></span>
<span id="cb16-76"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        27b70a85 2e1b2138 4d2c6dfc 53380d13 650a7354 766a0abb 81c2c92e 92722c85</span></span>
<span id="cb16-77"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        a2bfe8a1 a81a664b c24b8b70 c76c51a3 d192e819 d6990624 f40e3585 106aa070</span></span>
<span id="cb16-78"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        19a4c116 1e376c08 2748774c 34b0bcb5 391c0cb3 4ed8aa4a 5b9cca4f 682e6ff3</span></span>
<span id="cb16-79"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        748f82ee 78a5636f 84c87814 8cc70208 90befffa a4506ceb bef9a3f7 c67178f2</span></span>
<span id="cb16-80"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        """</span></span>
<span id="cb16-81">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> [frac_bin(p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.0</span>)) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> p <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> first_n_primes(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>)]</span>
<span id="cb16-82"></span>
<span id="cb16-83">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> genH():</span>
<span id="cb16-84">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb16-85"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Follows Section 5.3.3 to generate the initial hash value H^0</span></span>
<span id="cb16-86"></span>
<span id="cb16-87"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        The first 32 bits of the fractional parts of the square roots of</span></span>
<span id="cb16-88"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        the first 8 prime numbers.</span></span>
<span id="cb16-89"></span>
<span id="cb16-90"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        6a09e667 bb67ae85 3c6ef372 a54ff53a 9b05688c 510e527f 1f83d9ab 5be0cd19</span></span>
<span id="cb16-91"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        """</span></span>
<span id="cb16-92">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> [frac_bin(p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span>)) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> p <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> first_n_primes(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>)]</span>
<span id="cb16-93"></span>
<span id="cb16-94">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># -----------------------------------------------------------------------------</span></span>
<span id="cb16-95"></span>
<span id="cb16-96">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> pad(b):</span>
<span id="cb16-97">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">""" Follows Section 5.1: Padding the message """</span></span>
<span id="cb16-98">        b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bytearray</span>(b) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># convert to a mutable equivalent</span></span>
<span id="cb16-99">        l <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(b) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># note: len returns number of bytes not bits</span></span>
<span id="cb16-100"></span>
<span id="cb16-101">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># append but "1" to the end of the message</span></span>
<span id="cb16-102">        b.append(<span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0b10000000</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># appending 10000000 in binary (=128 in decimal)</span></span>
<span id="cb16-103"></span>
<span id="cb16-104">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># follow by k zero bits, where k is the smallest non-negative solution to</span></span>
<span id="cb16-105">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># l + 1 + k = 448 mod 512</span></span>
<span id="cb16-106">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># i.e. pad with zeros until we reach 448 (mod 512)</span></span>
<span id="cb16-107">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> (<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(b)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">512</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">448</span>:</span>
<span id="cb16-108">            b.append(<span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x00</span>)</span>
<span id="cb16-109"></span>
<span id="cb16-110">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the last 64-bit block is the length l of the original message</span></span>
<span id="cb16-111">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># expressed in binary (big endian)</span></span>
<span id="cb16-112">        b.extend(l.to_bytes(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'big'</span>))</span>
<span id="cb16-113"></span>
<span id="cb16-114">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> b</span>
<span id="cb16-115"></span>
<span id="cb16-116">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> sha256(b: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bytes</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bytes</span>:</span>
<span id="cb16-117"></span>
<span id="cb16-118">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Section 4.2</span></span>
<span id="cb16-119">        K <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> genK()</span>
<span id="cb16-120"></span>
<span id="cb16-121">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Section 5: Preprocessing</span></span>
<span id="cb16-122">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Section 5.1: Pad the message</span></span>
<span id="cb16-123">        b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pad(b)</span>
<span id="cb16-124">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Section 5.2: Separate the message into blocks of 512 bits (64 bytes)</span></span>
<span id="cb16-125">        blocks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [b[i:i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(b), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>)]</span>
<span id="cb16-126"></span>
<span id="cb16-127">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for each message block M^1 ... M^N</span></span>
<span id="cb16-128">        H <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> genH() <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Section 5.3</span></span>
<span id="cb16-129"></span>
<span id="cb16-130">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Section 6</span></span>
<span id="cb16-131">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> M <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> blocks: <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># each block is a 64-entry array of 8-bit bytes</span></span>
<span id="cb16-132"></span>
<span id="cb16-133">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1. Prepare the message schedule, a 64-entry array of 32-bit words</span></span>
<span id="cb16-134">            W <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb16-135">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> t <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>):</span>
<span id="cb16-136">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>:</span>
<span id="cb16-137">                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the first 16 words are just a copy of the block</span></span>
<span id="cb16-138">                    W.append(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bytes</span>(M[t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>:t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]))</span>
<span id="cb16-139">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb16-140">                    term1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sig1(b2i(W[t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]))</span>
<span id="cb16-141">                    term2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> b2i(W[t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>])</span>
<span id="cb16-142">                    term3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sig0(b2i(W[t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>]))</span>
<span id="cb16-143">                    term4 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> b2i(W[t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>])</span>
<span id="cb16-144">                    total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (term1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> term2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> term3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> term4) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span></span>
<span id="cb16-145">                    W.append(i2b(total))</span>
<span id="cb16-146"></span>
<span id="cb16-147">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2. Initialize the 8 working variables a,b,c,d,e,f,g,h with prev hash value</span></span>
<span id="cb16-148">            a, b, c, d, e, f, g, h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> H</span>
<span id="cb16-149"></span>
<span id="cb16-150">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3.</span></span>
<span id="cb16-151">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> t <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>):</span>
<span id="cb16-152">                T1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> capsig1(e) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> ch(e, f, g) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> K[t] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b2i(W[t])) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span></span>
<span id="cb16-153">                T2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (capsig0(a) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> maj(a, b, c)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span></span>
<span id="cb16-154">                h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> g</span>
<span id="cb16-155">                g <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f</span>
<span id="cb16-156">                f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> e</span>
<span id="cb16-157">                e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> T1) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span></span>
<span id="cb16-158">                d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> c</span>
<span id="cb16-159">                c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> b</span>
<span id="cb16-160">                b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a</span>
<span id="cb16-161">                a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (T1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> T2) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span></span>
<span id="cb16-162"></span>
<span id="cb16-163">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 4. Compute the i-th intermediate hash value H^i</span></span>
<span id="cb16-164">            delta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [a, b, c, d, e, f, g, h]</span>
<span id="cb16-165">            H <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [(i1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> i2) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i1, i2 <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(H, delta)]</span>
<span id="cb16-166"></span>
<span id="cb16-167">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">b''</span>.join(i2b(i) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> H)</span>
<span id="cb16-168"></span>
<span id="cb16-169">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> sha256</span>
<span id="cb16-170"></span>
<span id="cb16-171">sha256 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gen_sha256_with_variable_scope_protector_to_not_pollute_global_namespace()</span>
<span id="cb16-172"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"verify empty hash:"</span>, sha256(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">b''</span>).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">hex</span>()) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># should be e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855</span></span>
<span id="cb16-173"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(sha256(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">b'here is a random bytes message, cool right?'</span>).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">hex</span>())</span>
<span id="cb16-174"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"number of bytes in a sha256 digest: "</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(sha256(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">b''</span>)))</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>verify empty hash: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
69b9779edaa573a509999cbae415d3408c30544bad09727a1d64eff353c95b89
number of bytes in a sha256 digest:  32</code></pre>
</div>
</div>
<p>Hàm băm thứ hai là <code>RIPEMD-160</code>:</p>
<div id="f5582013" class="cell" data-execution_count="11">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> gen_ripemd160_with_variable_scope_protector_to_not_pollute_global_namespace():</span>
<span id="cb18-2"></span>
<span id="cb18-3">    <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> sys</span>
<span id="cb18-4">    <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> struct</span>
<span id="cb18-5"></span>
<span id="cb18-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># -----------------------------------------------------------------------------</span></span>
<span id="cb18-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># public interface</span></span>
<span id="cb18-8"></span>
<span id="cb18-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> ripemd160(b: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bytes</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bytes</span>:</span>
<span id="cb18-10">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">""" simple wrapper for a simpler API to this hash function, just bytes to bytes """</span></span>
<span id="cb18-11">        ctx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RMDContext()</span>
<span id="cb18-12">        RMD160Update(ctx, b, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(b))</span>
<span id="cb18-13">        digest <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RMD160Final(ctx)</span>
<span id="cb18-14">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> digest</span>
<span id="cb18-15"></span>
<span id="cb18-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># -----------------------------------------------------------------------------</span></span>
<span id="cb18-17"></span>
<span id="cb18-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> RMDContext:</span>
<span id="cb18-19">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb18-20">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.state <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x67452301</span>, <span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0xEFCDAB89</span>, <span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x98BADCFE</span>, <span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x10325476</span>, <span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0xC3D2E1F0</span>] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># uint32</span></span>
<span id="cb18-21">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># uint64</span></span>
<span id="cb18-22">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">buffer</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># uchar</span></span>
<span id="cb18-23"></span>
<span id="cb18-24">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> RMD160Update(ctx, inp, inplen):</span>
<span id="cb18-25">        have <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>((ctx.count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>)</span>
<span id="cb18-26">        inplen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(inplen)</span>
<span id="cb18-27">        need <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> have</span>
<span id="cb18-28">        ctx.count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> inplen</span>
<span id="cb18-29">        off <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb18-30">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> inplen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> need:</span>
<span id="cb18-31">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> have:</span>
<span id="cb18-32">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(need):</span>
<span id="cb18-33">                    ctx.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">buffer</span>[have<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> inp[i]</span>
<span id="cb18-34">                RMD160Transform(ctx.state, ctx.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">buffer</span>)</span>
<span id="cb18-35">                off <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> need</span>
<span id="cb18-36">                have <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb18-37">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> off <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> inplen:</span>
<span id="cb18-38">                RMD160Transform(ctx.state, inp[off:])</span>
<span id="cb18-39">                off <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span></span>
<span id="cb18-40">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> off <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> inplen:</span>
<span id="cb18-41">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(inplen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> off):</span>
<span id="cb18-42">                ctx.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">buffer</span>[have<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> inp[off<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>i]</span>
<span id="cb18-43"></span>
<span id="cb18-44">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> RMD160Final(ctx):</span>
<span id="cb18-45">        size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> struct.pack(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;Q"</span>, ctx.count)</span>
<span id="cb18-46">        padlen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> ((ctx.count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>)</span>
<span id="cb18-47">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> padlen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>:</span>
<span id="cb18-48">            padlen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span></span>
<span id="cb18-49">        RMD160Update(ctx, PADDING, padlen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>)</span>
<span id="cb18-50">        RMD160Update(ctx, size, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>)</span>
<span id="cb18-51">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> struct.pack(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;5L"</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>ctx.state)</span>
<span id="cb18-52"></span>
<span id="cb18-53">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># -----------------------------------------------------------------------------</span></span>
<span id="cb18-54"></span>
<span id="cb18-55">    K0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x00000000</span></span>
<span id="cb18-56">    K1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x5A827999</span></span>
<span id="cb18-57">    K2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x6ED9EBA1</span></span>
<span id="cb18-58">    K3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x8F1BBCDC</span></span>
<span id="cb18-59">    K4 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0xA953FD4E</span></span>
<span id="cb18-60">    KK0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x50A28BE6</span></span>
<span id="cb18-61">    KK1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x5C4DD124</span></span>
<span id="cb18-62">    KK2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x6D703EF3</span></span>
<span id="cb18-63">    KK3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x7A6D76E9</span></span>
<span id="cb18-64">    KK4 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x00000000</span></span>
<span id="cb18-65"></span>
<span id="cb18-66">    PADDING <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x80</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">63</span></span>
<span id="cb18-67"></span>
<span id="cb18-68">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> ROL(n, x):</span>
<span id="cb18-69">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> ((x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> n) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0xffffffff</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> (x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> n))</span>
<span id="cb18-70"></span>
<span id="cb18-71">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> F0(x, y, z):</span>
<span id="cb18-72">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span> z</span>
<span id="cb18-73"></span>
<span id="cb18-74">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> F1(x, y, z):</span>
<span id="cb18-75">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> (x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> y) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> (((<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>x) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x100000000</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> z)</span>
<span id="cb18-76"></span>
<span id="cb18-77">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> F2(x, y, z):</span>
<span id="cb18-78">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> (x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> ((<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>y) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x100000000</span>)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span> z</span>
<span id="cb18-79"></span>
<span id="cb18-80">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> F3(x, y, z):</span>
<span id="cb18-81">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> (x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> z) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> (((<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>z) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x100000000</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> y)</span>
<span id="cb18-82"></span>
<span id="cb18-83">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> F4(x, y, z):</span>
<span id="cb18-84">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span> (y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> ((<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>z) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x100000000</span>))</span>
<span id="cb18-85"></span>
<span id="cb18-86">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> R(a, b, c, d, e, Fj, Kj, sj, rj, X):</span>
<span id="cb18-87">        a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ROL(sj, (a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Fj(b, c, d) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> X[rj] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Kj) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x100000000</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> e</span>
<span id="cb18-88">        c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ROL(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, c)</span>
<span id="cb18-89">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x100000000</span>, c</span>
<span id="cb18-90"></span>
<span id="cb18-91">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> RMD160Transform(state, block): <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#uint32 state[5], uchar block[64]</span></span>
<span id="cb18-92"></span>
<span id="cb18-93">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb18-94">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">assert</span> sys.byteorder <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'little'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Only little endian is supported atm for RIPEMD160"</span></span>
<span id="cb18-95">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> struct.unpack(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;16L'</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bytes</span>(block[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>]))</span>
<span id="cb18-96"></span>
<span id="cb18-97">        a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> state[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb18-98">        b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> state[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb18-99">        c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> state[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb18-100">        d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> state[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]</span>
<span id="cb18-101">        e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> state[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]</span>
<span id="cb18-102"></span>
<span id="cb18-103">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#/* Round 1 */</span></span>
<span id="cb18-104">        a, c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(a, b, c, d, e, F0, K0, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, x)</span>
<span id="cb18-105">        e, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(e, a, b, c, d, F0, K0, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, x)</span>
<span id="cb18-106">        d, a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(d, e, a, b, c, F0, K0, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, x)</span>
<span id="cb18-107">        c, e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(c, d, e, a, b, F0, K0, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, x)</span>
<span id="cb18-108">        b, d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(b, c, d, e, a, F0, K0,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, x)</span>
<span id="cb18-109">        a, c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(a, b, c, d, e, F0, K0,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, x)</span>
<span id="cb18-110">        e, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(e, a, b, c, d, F0, K0,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, x)</span>
<span id="cb18-111">        d, a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(d, e, a, b, c, F0, K0,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, x)</span>
<span id="cb18-112">        c, e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(c, d, e, a, b, F0, K0, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, x)</span>
<span id="cb18-113">        b, d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(b, c, d, e, a, F0, K0, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, x)</span>
<span id="cb18-114">        a, c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(a, b, c, d, e, F0, K0, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, x)</span>
<span id="cb18-115">        e, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(e, a, b, c, d, F0, K0, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>, x)</span>
<span id="cb18-116">        d, a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(d, e, a, b, c, F0, K0,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, x)</span>
<span id="cb18-117">        c, e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(c, d, e, a, b, F0, K0,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>, x)</span>
<span id="cb18-118">        b, d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(b, c, d, e, a, F0, K0,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, x)</span>
<span id="cb18-119">        a, c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(a, b, c, d, e, F0, K0,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, x) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#/* #15 */</span></span>
<span id="cb18-120">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#/* Round 2 */</span></span>
<span id="cb18-121">        e, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(e, a, b, c, d, F1, K1,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, x)</span>
<span id="cb18-122">        d, a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(d, e, a, b, c, F1, K1,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, x)</span>
<span id="cb18-123">        c, e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(c, d, e, a, b, F1, K1,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>, x)</span>
<span id="cb18-124">        b, d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(b, c, d, e, a, F1, K1, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, x)</span>
<span id="cb18-125">        a, c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(a, b, c, d, e, F1, K1, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, x)</span>
<span id="cb18-126">        e, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(e, a, b, c, d, F1, K1,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, x)</span>
<span id="cb18-127">        d, a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(d, e, a, b, c, F1, K1,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, x)</span>
<span id="cb18-128">        c, e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(c, d, e, a, b, F1, K1, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, x)</span>
<span id="cb18-129">        b, d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(b, c, d, e, a, F1, K1,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, x)</span>
<span id="cb18-130">        a, c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(a, b, c, d, e, F1, K1, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, x)</span>
<span id="cb18-131">        e, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(e, a, b, c, d, F1, K1, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, x)</span>
<span id="cb18-132">        d, a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(d, e, a, b, c, F1, K1,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, x)</span>
<span id="cb18-133">        c, e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(c, d, e, a, b, F1, K1, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, x)</span>
<span id="cb18-134">        b, d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(b, c, d, e, a, F1, K1,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, x)</span>
<span id="cb18-135">        a, c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(a, b, c, d, e, F1, K1, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>, x)</span>
<span id="cb18-136">        e, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(e, a, b, c, d, F1, K1, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, x) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#/* #31 */</span></span>
<span id="cb18-137">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#/* Round 3 */</span></span>
<span id="cb18-138">        d, a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(d, e, a, b, c, F2, K2, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, x)</span>
<span id="cb18-139">        c, e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(c, d, e, a, b, F2, K2, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, x)</span>
<span id="cb18-140">        b, d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(b, c, d, e, a, F2, K2,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, x)</span>
<span id="cb18-141">        a, c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(a, b, c, d, e, F2, K2,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, x)</span>
<span id="cb18-142">        e, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(e, a, b, c, d, F2, K2, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, x)</span>
<span id="cb18-143">        d, a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(d, e, a, b, c, F2, K2,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, x)</span>
<span id="cb18-144">        c, e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(c, d, e, a, b, F2, K2, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, x)</span>
<span id="cb18-145">        b, d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(b, c, d, e, a, F2, K2, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, x)</span>
<span id="cb18-146">        a, c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(a, b, c, d, e, F2, K2, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, x)</span>
<span id="cb18-147">        e, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(e, a, b, c, d, F2, K2,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, x)</span>
<span id="cb18-148">        d, a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(d, e, a, b, c, F2, K2, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, x)</span>
<span id="cb18-149">        c, e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(c, d, e, a, b, F2, K2,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, x)</span>
<span id="cb18-150">        b, d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(b, c, d, e, a, F2, K2,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>, x)</span>
<span id="cb18-151">        a, c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(a, b, c, d, e, F2, K2, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>, x)</span>
<span id="cb18-152">        e, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(e, a, b, c, d, F2, K2,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, x)</span>
<span id="cb18-153">        d, a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(d, e, a, b, c, F2, K2,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, x) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#/* #47 */</span></span>
<span id="cb18-154">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#/* Round 4 */</span></span>
<span id="cb18-155">        c, e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(c, d, e, a, b, F3, K3, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, x)</span>
<span id="cb18-156">        b, d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(b, c, d, e, a, F3, K3, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, x)</span>
<span id="cb18-157">        a, c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(a, b, c, d, e, F3, K3, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>, x)</span>
<span id="cb18-158">        e, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(e, a, b, c, d, F3, K3, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, x)</span>
<span id="cb18-159">        d, a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(d, e, a, b, c, F3, K3, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, x)</span>
<span id="cb18-160">        c, e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(c, d, e, a, b, F3, K3, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, x)</span>
<span id="cb18-161">        b, d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(b, c, d, e, a, F3, K3,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, x)</span>
<span id="cb18-162">        a, c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(a, b, c, d, e, F3, K3,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, x)</span>
<span id="cb18-163">        e, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(e, a, b, c, d, F3, K3,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>, x)</span>
<span id="cb18-164">        d, a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(d, e, a, b, c, F3, K3, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, x)</span>
<span id="cb18-165">        c, e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(c, d, e, a, b, F3, K3,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, x)</span>
<span id="cb18-166">        b, d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(b, c, d, e, a, F3, K3,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, x)</span>
<span id="cb18-167">        a, c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(a, b, c, d, e, F3, K3,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, x)</span>
<span id="cb18-168">        e, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(e, a, b, c, d, F3, K3,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, x)</span>
<span id="cb18-169">        d, a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(d, e, a, b, c, F3, K3,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, x)</span>
<span id="cb18-170">        c, e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(c, d, e, a, b, F3, K3, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, x) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#/* #63 */</span></span>
<span id="cb18-171">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#/* Round 5 */</span></span>
<span id="cb18-172">        b, d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(b, c, d, e, a, F4, K4,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, x)</span>
<span id="cb18-173">        a, c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(a, b, c, d, e, F4, K4, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, x)</span>
<span id="cb18-174">        e, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(e, a, b, c, d, F4, K4,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, x)</span>
<span id="cb18-175">        d, a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(d, e, a, b, c, F4, K4, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, x)</span>
<span id="cb18-176">        c, e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(c, d, e, a, b, F4, K4,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, x)</span>
<span id="cb18-177">        b, d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(b, c, d, e, a, F4, K4,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, x)</span>
<span id="cb18-178">        a, c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(a, b, c, d, e, F4, K4, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, x)</span>
<span id="cb18-179">        e, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(e, a, b, c, d, F4, K4, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, x)</span>
<span id="cb18-180">        d, a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(d, e, a, b, c, F4, K4,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, x)</span>
<span id="cb18-181">        c, e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(c, d, e, a, b, F4, K4, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, x)</span>
<span id="cb18-182">        b, d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(b, c, d, e, a, F4, K4, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, x)</span>
<span id="cb18-183">        a, c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(a, b, c, d, e, F4, K4, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, x)</span>
<span id="cb18-184">        e, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(e, a, b, c, d, F4, K4, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>, x)</span>
<span id="cb18-185">        d, a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(d, e, a, b, c, F4, K4,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, x)</span>
<span id="cb18-186">        c, e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(c, d, e, a, b, F4, K4,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, x)</span>
<span id="cb18-187">        b, d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(b, c, d, e, a, F4, K4,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>, x) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#/* #79 */</span></span>
<span id="cb18-188"></span>
<span id="cb18-189">        aa <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a</span>
<span id="cb18-190">        bb <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> b</span>
<span id="cb18-191">        cc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> c</span>
<span id="cb18-192">        dd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> d</span>
<span id="cb18-193">        ee <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> e</span>
<span id="cb18-194"></span>
<span id="cb18-195">        a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> state[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb18-196">        b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> state[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb18-197">        c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> state[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb18-198">        d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> state[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]</span>
<span id="cb18-199">        e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> state[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]</span>
<span id="cb18-200"></span>
<span id="cb18-201">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#/* Parallel round 1 */</span></span>
<span id="cb18-202">        a, c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(a, b, c, d, e, F4, KK0,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, x)</span>
<span id="cb18-203">        e, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(e, a, b, c, d, F4, KK0,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, x)</span>
<span id="cb18-204">        d, a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(d, e, a, b, c, F4, KK0,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, x)</span>
<span id="cb18-205">        c, e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(c, d, e, a, b, F4, KK0, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, x)</span>
<span id="cb18-206">        b, d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(b, c, d, e, a, F4, KK0, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, x)</span>
<span id="cb18-207">        a, c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(a, b, c, d, e, F4, KK0, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, x)</span>
<span id="cb18-208">        e, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(e, a, b, c, d, F4, KK0, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>, x)</span>
<span id="cb18-209">        d, a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(d, e, a, b, c, F4, KK0,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, x)</span>
<span id="cb18-210">        c, e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(c, d, e, a, b, F4, KK0,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>, x)</span>
<span id="cb18-211">        b, d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(b, c, d, e, a, F4, KK0,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, x)</span>
<span id="cb18-212">        a, c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(a, b, c, d, e, F4, KK0,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, x)</span>
<span id="cb18-213">        e, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(e, a, b, c, d, F4, KK0, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, x)</span>
<span id="cb18-214">        d, a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(d, e, a, b, c, F4, KK0, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, x)</span>
<span id="cb18-215">        c, e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(c, d, e, a, b, F4, KK0, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, x)</span>
<span id="cb18-216">        b, d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(b, c, d, e, a, F4, KK0, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, x)</span>
<span id="cb18-217">        a, c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(a, b, c, d, e, F4, KK0,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, x) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#/* #15 */</span></span>
<span id="cb18-218">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#/* Parallel round 2 */</span></span>
<span id="cb18-219">        e, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(e, a, b, c, d, F3, KK1,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, x)</span>
<span id="cb18-220">        d, a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(d, e, a, b, c, F3, KK1, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>, x)</span>
<span id="cb18-221">        c, e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(c, d, e, a, b, F3, KK1, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, x)</span>
<span id="cb18-222">        b, d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(b, c, d, e, a, F3, KK1,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, x)</span>
<span id="cb18-223">        a, c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(a, b, c, d, e, F3, KK1, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, x)</span>
<span id="cb18-224">        e, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(e, a, b, c, d, F3, KK1,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>, x)</span>
<span id="cb18-225">        d, a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(d, e, a, b, c, F3, KK1,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, x)</span>
<span id="cb18-226">        c, e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(c, d, e, a, b, F3, KK1, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, x)</span>
<span id="cb18-227">        b, d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(b, c, d, e, a, F3, KK1,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, x)</span>
<span id="cb18-228">        a, c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(a, b, c, d, e, F3, KK1,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, x)</span>
<span id="cb18-229">        e, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(e, a, b, c, d, F3, KK1, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, x)</span>
<span id="cb18-230">        d, a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(d, e, a, b, c, F3, KK1,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, x)</span>
<span id="cb18-231">        c, e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(c, d, e, a, b, F3, KK1,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, x)</span>
<span id="cb18-232">        b, d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(b, c, d, e, a, F3, KK1, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, x)</span>
<span id="cb18-233">        a, c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(a, b, c, d, e, F3, KK1, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, x)</span>
<span id="cb18-234">        e, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(e, a, b, c, d, F3, KK1, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, x) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#/* #31 */</span></span>
<span id="cb18-235">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#/* Parallel round 3 */</span></span>
<span id="cb18-236">        d, a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(d, e, a, b, c, F2, KK2,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, x)</span>
<span id="cb18-237">        c, e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(c, d, e, a, b, F2, KK2,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, x)</span>
<span id="cb18-238">        b, d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(b, c, d, e, a, F2, KK2, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, x)</span>
<span id="cb18-239">        a, c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(a, b, c, d, e, F2, KK2, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, x)</span>
<span id="cb18-240">        e, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(e, a, b, c, d, F2, KK2,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, x)</span>
<span id="cb18-241">        d, a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(d, e, a, b, c, F2, KK2,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, x)</span>
<span id="cb18-242">        c, e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(c, d, e, a, b, F2, KK2,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, x)</span>
<span id="cb18-243">        b, d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(b, c, d, e, a, F2, KK2, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, x)</span>
<span id="cb18-244">        a, c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(a, b, c, d, e, F2, KK2, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>, x)</span>
<span id="cb18-245">        e, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(e, a, b, c, d, F2, KK2, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, x)</span>
<span id="cb18-246">        d, a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(d, e, a, b, c, F2, KK2,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, x)</span>
<span id="cb18-247">        c, e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(c, d, e, a, b, F2, KK2, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, x)</span>
<span id="cb18-248">        b, d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(b, c, d, e, a, F2, KK2, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, x)</span>
<span id="cb18-249">        a, c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(a, b, c, d, e, F2, KK2, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, x)</span>
<span id="cb18-250">        e, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(e, a, b, c, d, F2, KK2,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, x)</span>
<span id="cb18-251">        d, a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(d, e, a, b, c, F2, KK2,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>, x) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#/* #47 */</span></span>
<span id="cb18-252">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#/* Parallel round 4 */</span></span>
<span id="cb18-253">        c, e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(c, d, e, a, b, F1, KK3, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, x)</span>
<span id="cb18-254">        b, d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(b, c, d, e, a, F1, KK3,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, x)</span>
<span id="cb18-255">        a, c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(a, b, c, d, e, F1, KK3,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, x)</span>
<span id="cb18-256">        e, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(e, a, b, c, d, F1, KK3, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, x)</span>
<span id="cb18-257">        d, a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(d, e, a, b, c, F1, KK3, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, x)</span>
<span id="cb18-258">        c, e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(c, d, e, a, b, F1, KK3, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>, x)</span>
<span id="cb18-259">        b, d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(b, c, d, e, a, F1, KK3,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, x)</span>
<span id="cb18-260">        a, c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(a, b, c, d, e, F1, KK3, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, x)</span>
<span id="cb18-261">        e, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(e, a, b, c, d, F1, KK3,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, x)</span>
<span id="cb18-262">        d, a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(d, e, a, b, c, F1, KK3,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, x)</span>
<span id="cb18-263">        c, e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(c, d, e, a, b, F1, KK3, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, x)</span>
<span id="cb18-264">        b, d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(b, c, d, e, a, F1, KK3,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>, x)</span>
<span id="cb18-265">        a, c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(a, b, c, d, e, F1, KK3, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, x)</span>
<span id="cb18-266">        e, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(e, a, b, c, d, F1, KK3,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, x)</span>
<span id="cb18-267">        d, a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(d, e, a, b, c, F1, KK3, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, x)</span>
<span id="cb18-268">        c, e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(c, d, e, a, b, F1, KK3,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, x) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#/* #63 */</span></span>
<span id="cb18-269">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#/* Parallel round 5 */</span></span>
<span id="cb18-270">        b, d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(b, c, d, e, a, F0, KK4,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, x)</span>
<span id="cb18-271">        a, c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(a, b, c, d, e, F0, KK4,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, x)</span>
<span id="cb18-272">        e, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(e, a, b, c, d, F0, KK4, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, x)</span>
<span id="cb18-273">        d, a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(d, e, a, b, c, F0, KK4,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, x)</span>
<span id="cb18-274">        c, e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(c, d, e, a, b, F0, KK4, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, x)</span>
<span id="cb18-275">        b, d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(b, c, d, e, a, F0, KK4,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, x)</span>
<span id="cb18-276">        a, c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(a, b, c, d, e, F0, KK4, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, x)</span>
<span id="cb18-277">        e, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(e, a, b, c, d, F0, KK4,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, x)</span>
<span id="cb18-278">        d, a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(d, e, a, b, c, F0, KK4,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, x)</span>
<span id="cb18-279">        c, e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(c, d, e, a, b, F0, KK4, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, x)</span>
<span id="cb18-280">        b, d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(b, c, d, e, a, F0, KK4,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>, x)</span>
<span id="cb18-281">        a, c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(a, b, c, d, e, F0, KK4,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, x)</span>
<span id="cb18-282">        e, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(e, a, b, c, d, F0, KK4, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, x)</span>
<span id="cb18-283">        d, a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(d, e, a, b, c, F0, KK4, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, x)</span>
<span id="cb18-284">        c, e <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(c, d, e, a, b, F0, KK4, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, x)</span>
<span id="cb18-285">        b, d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> R(b, c, d, e, a, F0, KK4, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>, x) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#/* #79 */</span></span>
<span id="cb18-286"></span>
<span id="cb18-287">        t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (state[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> cc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> d) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x100000000</span></span>
<span id="cb18-288">        state[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (state[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> dd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> e) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x100000000</span></span>
<span id="cb18-289">        state[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (state[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> ee <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> a) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x100000000</span></span>
<span id="cb18-290">        state[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (state[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> aa <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x100000000</span></span>
<span id="cb18-291">        state[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (state[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> bb <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> c) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x100000000</span></span>
<span id="cb18-292">        state[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0x100000000</span></span>
<span id="cb18-293"></span>
<span id="cb18-294">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> ripemd160</span>
<span id="cb18-295"></span>
<span id="cb18-296">ripemd160 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gen_ripemd160_with_variable_scope_protector_to_not_pollute_global_namespace()</span>
<span id="cb18-297"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(ripemd160(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">b'hello this is a test'</span>).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">hex</span>())</span>
<span id="cb18-298"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"number of bytes in a RIPEMD-160 digest: "</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(ripemd160(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">b''</span>)))</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>f51960af7dd4813a587ab26388ddab3b28d1f7b4
number of bytes in a RIPEMD-160 digest:  20</code></pre>
</div>
</div>
<p>Ok giờ thì có thể làm việc với Bitcoin Address. Chúng ta sẽ tạo một class <code>PublicKet</code>, là con của <code>Point</code>, cũng là một điểm trên <code>Curve</code>.</p>
<div id="c40b7f40" class="cell" data-execution_count="12">
<details open="" class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> PublicKey(Point):</span>
<span id="cb20-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb20-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    The public key is just a Point on a Curve, but has some additional specific</span></span>
<span id="cb20-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    encoding / decoding functionality that this class implements.</span></span>
<span id="cb20-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb20-6"></span>
<span id="cb20-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@classmethod</span></span>
<span id="cb20-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> from_point(cls, pt: Point):</span>
<span id="cb20-9">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">""" promote a Point to be a PublicKey """</span></span>
<span id="cb20-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> cls(pt.curve, pt.x, pt.y)</span>
<span id="cb20-11"></span>
<span id="cb20-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> encode(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, compressed, hash160<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>):</span>
<span id="cb20-13">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">""" return the SEC bytes encoding of the public key Point """</span></span>
<span id="cb20-14">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># calculate the bytes</span></span>
<span id="cb20-15">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> compressed:</span>
<span id="cb20-16">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (x,y) is very redundant. Because y^2 = x^3 + 7,</span></span>
<span id="cb20-17">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># we can just encode x, and then y = +/- sqrt(x^3 + 7),</span></span>
<span id="cb20-18">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># so we need one more bit to encode whether it was the + or the -</span></span>
<span id="cb20-19">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># but because this is modular arithmetic there is no +/-, instead</span></span>
<span id="cb20-20">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># it can be shown that one y will always be even and the other odd.</span></span>
<span id="cb20-21">            prefix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">b'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\x02</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">b'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\x03</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span></span>
<span id="cb20-22">            pkb <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> prefix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x.to_bytes(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'big'</span>)</span>
<span id="cb20-23">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb20-24">            pkb <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">b'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\x04</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.x.to_bytes(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'big'</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.y.to_bytes(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'big'</span>)</span>
<span id="cb20-25">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># hash if desired</span></span>
<span id="cb20-26">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> ripemd160(sha256(pkb)) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> hash160 <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> pkb</span>
<span id="cb20-27"></span>
<span id="cb20-28">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> address(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, net: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, compressed: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb20-29">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">""" return the associated bitcoin address for this public key as string """</span></span>
<span id="cb20-30">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># encode the public key into bytes and hash to get the payload</span></span>
<span id="cb20-31">        pkb_hash <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.encode(compressed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>compressed, hash160<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb20-32">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add version byte (0x00 for Main Network, or 0x6f for Test Network)</span></span>
<span id="cb20-33">        version <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'main'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">b'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\x00</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'test'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">b'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\x6f</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>}</span>
<span id="cb20-34">        ver_pkb_hash <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> version[net] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> pkb_hash</span>
<span id="cb20-35">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># calculate the checksum</span></span>
<span id="cb20-36">        checksum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sha256(sha256(ver_pkb_hash))[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]</span>
<span id="cb20-37">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># append to form the full 25-byte binary Bitcoin Address</span></span>
<span id="cb20-38">        byte_address <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ver_pkb_hash <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> checksum</span>
<span id="cb20-39">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># finally b58 encode the result</span></span>
<span id="cb20-40">        b58check_address <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> b58encode(byte_address)</span>
<span id="cb20-41">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> b58check_address</span></code></pre></div>
</details>
</div>
<p>Step 1 not completed yet.</p>
<section id="part-1-summary-so-far" class="level2">
<h2 class="anchored" data-anchor-id="part-1-summary-so-far">Part 1: summary so far</h2>
</section>
</section>
<section id="part-2-obtaining-seed-funds-intro-to-bitcoin-under-the-hood" class="level1">
<h1>Part 2: Obtaining seed funds + intro to Bitcoin under the hood</h1>
</section>
<section id="part-3-crafting-our-transaction" class="level1">
<h1>Part 3: Crafting our transaction</h1>
</section>
<section id="digital-signature" class="level1">
<h1>Digital Signature</h1>
</section>
<section id="putting-it-all-together-one-more-consolidating-transaction" class="level1">
<h1>Putting it all together: One more consolidating transaction</h1>
</section>
<section id="resources" class="level1">
<h1>Resources</h1>
<p>Andrej Karpathy’s <a href="https://karpathy.github.io/2021/06/21/blockchain/">blog post</a></p>


<!-- -->

</section>

 ]]></description>
  <category>til</category>
  <category>crypto</category>
  <category>bitcoin</category>
  <category>python</category>
  <category>andrej karpathy</category>
  <guid>https://lktuan.github.io/blog/2024-06-10-python-bitcoin/</guid>
  <pubDate>Sun, 09 Jun 2024 17:00:00 GMT</pubDate>
  <media:content url="https://lktuan.github.io/blog/2024-06-10-python-bitcoin/python_bitcoin.png" medium="image" type="image/png" height="81" width="144"/>
</item>
<item>
  <title>TIL: Xử lý dynamic-ragged array trong Excel</title>
  <dc:creator>Tuan Le Khac</dc:creator>
  <link>https://lktuan.github.io/blog/2024-06-06-excel-blambda/</link>
  <description><![CDATA[ 





<section id="problem-statement" class="level1">
<h1>Problem statement</h1>
<p>TIL: Hôm nay mình thử giải một <a href="https://www.linkedin.com/posts/owenhprice_data-analytics-sql-activity-7204129483144986624-R73I">challenge</a> của bác <a href="https://www.linkedin.com/in/owenhprice/">Owen Price</a>. Bác là Microsoft MVP, master ở khía cạnh xử lí, làm sạch, thậm chí là tối ưu việc xử lí đó trong Excel, trang blog của bác là <a href="https://www.flexyourdata.com/">FLEX YOUR DATA</a>, mình học được rất nhiều cách sử dụng formulas, đặc biệt là các hàm mới từ <code>LAMBDA()</code>, <code>MAP()</code>, <code>REDUCE()</code> cho đến gần đây là <strong>Python in Excel</strong>, <code>GROUPBY()</code>, <code>PIVOTBY</code>, và các hàm <code>REGEX_()</code>.</p>
<p>Nội dung challenge là, với <strong>một phần</strong> (1000 records) của bộ dữ liệu <a href="https://citibikenyc.com/system-data">Citi Bike</a>, trong đó chứa hai cột <code>start_station_name</code>, <code>end_station_name</code>, mỗi cột lại chứa thông tin các “station” ~ trạm, liệt kê 5 <strong>địa chỉ</strong> cùng số lần xuất hiện với số lượng lớn nhất!. Hình dưới là 10 dòng đầu tiên của dữ liệu.</p>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="1">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 100.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lktuan.github.io/blog/2024-06-06-excel-blambda/data.png" class="img-fluid figure-img" style="width:100.0%"></p>
<figcaption>10 dòng đầu tiên của dữ liệu</figcaption>
</figure>
</div>
</div>
</div>
</div>
<p>Well lúc đầu mình nghĩ nó cũng đơn giản 😂, thậm chí cũng không hiểu tại sao mỗi start hoặc end station lại có <em>hai station</em>, cách nhau bởi ký tự <code>&amp;</code> (space before &amp; after). Mình lập tức đưa ra lời giải như sau:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource txt number-lines code-with-copy"><code class="sourceCode default"><span id="cb1-1">=LET(</span>
<span id="cb1-2">    _d, " &amp; ",</span>
<span id="cb1-3">    _all_records, TOCOL(</span>
<span id="cb1-4">        BYROW(</span>
<span id="cb1-5">            BYROW(</span>
<span id="cb1-6">                _tbl_CityBike[[start_station_name]:[end_station_name]],</span>
<span id="cb1-7">                LAMBDA(x, TEXTJOIN(_d, TRUE, x))</span>
<span id="cb1-8">            ),</span>
<span id="cb1-9">        LAMBDA(x, TEXTSPLIT(x, _d))</span>
<span id="cb1-10">        )</span>
<span id="cb1-11">    ),</span>
<span id="cb1-12">    _stations, UNIQUE(_all_records),</span>
<span id="cb1-13">    _cnt, BYROW(</span>
<span id="cb1-14">        --(_stations = TRANSPOSE(_all_records)), </span>
<span id="cb1-15">        // "--" equals to "+" will convert the boolean TRUE/FALSE to value 1/0</span>
<span id="cb1-16">        LAMBDA(x, SUM(x))</span>
<span id="cb1-17">    ),</span>
<span id="cb1-18">    TAKE(SORTBY(HSTACK(_stations, _cnt), _cnt, -1), 5, )</span>
<span id="cb1-19">)</span></code></pre></div>
<p>Kết quả:</p>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="1">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 100.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lktuan.github.io/blog/2024-06-06-excel-blambda/my_initial_result.png" class="img-fluid figure-img" style="width:50.0%"></p>
<figcaption>Kết quả đầu tiên của mình</figcaption>
</figure>
</div>
</div>
</div>
</div>
<p>Đối chiếu với các kết quả của những người tham gia khách thì nó sai! Ý tưởng của mình là đầu tiên với mỗi hàng, join chúng lại với <code>&amp;</code> (<code>_d</code>), sau đó lại split chúng ra với cùng <code>_d</code> đó, từ đó có được danh sách occurence của tất cả các <strong>địa chỉ</strong>. Tuy nhiên mình nhận ra dữ liệu trả về cho <code>_all_records</code> bị thiếu sót. Lý do là các trạm (station) thường là các giao lộ, kết hợp từ hai địa chỉ với dấu <code>&amp;</code>, tuy nhiên có một số trạm lại nằm trên một con đường. Và vì chất lượng dữ liệu, cũng có một số station là <code>null</code>. Hàm <code>TOCOL()</code> là hàm mảng xử lí các mảng con nhận được từ <code>BYROW(...,LAMBDA(...,TEXTSPLIT()))</code>, các mảng con này có độ dài <strong>không đều</strong>, dẫn đến <code>TOCOL()</code> chỉ take record đầu tiên của mỗi mảng con, trả về <code>_all_records</code> chỉ gồm <em>1000 dòng dữ liệu</em>.</p>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="1">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 100.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lktuan.github.io/blog/2024-06-06-excel-blambda/special_data_points.png" class="img-fluid figure-img" style="width:100.0%"></p>
<figcaption>Các điểm dữ liệu đặc biệt</figcaption>
</figure>
</div>
</div>
</div>
</div>
</section>
<section id="solution" class="level1 page-columns page-full">
<h1>Solution</h1>
<div class="page-columns page-full"><p>Các mảng lởm chởm hay ragged/jagged array là các mảng gồm các mảng con có độ dài không đều nhau.  Excel <strong>không thể</strong> merge các bảng có kích cỡ không bằng nhau.</p><div class="no-row-height column-margin column-container"><span class="margin-aside">In computer science, a <strong>jagged array</strong>, also known as a <strong>ragged array</strong>, or <strong>irregular array</strong>, is an array of arrays of which the member arrays can be of different lengths, producing rows of jagged edges when visualized as output. In contrast, two-dimensional arrays are always rectangular, so jagged arrays should not be confused with multidimensional arrays, but the former is often used to emulate the latter. <a href="https://en.wikipedia.org/wiki/Jagged_array#:~:text=In%20computer%20science%2C%20a%20jagged,edges%20when%20visualized%20as%20output.">Wiki</a></span></div></div>
<p>Một <a href="https://www.linkedin.com/feed/update/urn:li:activity:7204129483144986624?commentUrn=urn%3Ali%3Acomment%3A%28activity%3A7204129483144986624%2C7204309739827044353%29&amp;dashCommentUrn=urn%3Ali%3Afsd_comment%3A%287204309739827044353%2Curn%3Ali%3Aactivity%3A7204129483144986624%29">comment</a> đưa mình tới hàm <a href="https://gist.github.com/ncalm/0e72b08272ec14f411e8aaa763c0c0b5"><code>BLAMBDAλ()</code></a> của bác MVP <a href="https://www.linkedin.com/in/peterbartholomew/">Peter Bartholemew</a> và <a href="https://www.linkedin.com/pulse/excel-lambda-spotlight-bisected-map-bmap%2525CE%2525BB-owen-price/">bài giải thích</a> của Owen Price.</p>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="1">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 100.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lktuan.github.io/blog/2024-06-06-excel-blambda/g4g_ragged_array.png" class="img-fluid figure-img" style="width:80.0%"></p>
<figcaption>Ragged or Jagged array, photo credit to <a href="https://www.geeksforgeeks.org/jagged-array-in-java/">Geeks for Geeks</a></figcaption>
</figure>
</div>
</div>
</div>
</div>
<p>Và lời giải đúng, được dựa trên ý tưởng của <code>BLAMBDAλ()</code> là:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource txt number-lines code-with-copy"><code class="sourceCode default"><span id="cb2-1">=LET(</span>
<span id="cb2-2">    B, LAMBDA(B, v,</span>
<span id="cb2-3">        LET(</span>
<span id="cb2-4">            n, ROWS(v),</span>
<span id="cb2-5">            IF(</span>
<span id="cb2-6">                n &gt; 1,</span>
<span id="cb2-7">                VSTACK(B(B, TAKE(v, n / 2)), B(B, DROP(v, n / 2))),</span>
<span id="cb2-8">                TEXTSPLIT(TEXTJOIN(" &amp; ", , v), , " &amp; ")</span>
<span id="cb2-9">            )</span>
<span id="cb2-10">        )</span>
<span id="cb2-11">    ),</span>
<span id="cb2-12">    str, B(B, CHOOSECOLS(_tbl_CityBike, 4, 5)),</span>
<span id="cb2-13">    _u_str, UNIQUE(str),</span>
<span id="cb2-14">    _cnt, BYROW(--(_u_str = TRANSPOSE(str)), LAMBDA(x, SUM(x))),</span>
<span id="cb2-15">    TAKE(SORTBY(HSTACK(_u_str, _cnt), _cnt, -1), 5)</span>
<span id="cb2-16">)</span></code></pre></div>
<p>Nếu sử dụng <code>GROUPBY()</code> thì việc tính toán cuối cùng sẽ gọn hơn, tuy nhiên vào thời điểm viết bài, hàm này vẫn chưa được MS đưa lên 365 Production mà chỉ ở kênh Insider.</p>
<p>Kết quả cuối cùng:</p>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="1">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 100.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lktuan.github.io/blog/2024-06-06-excel-blambda/final_result.png" class="img-fluid figure-img" style="width:50.0%"></p>
<figcaption>Kết quả đúng</figcaption>
</figure>
</div>
</div>
</div>
</div>
</section>
<section id="blambdaλ" class="level1">
<h1><code>BLAMBDAλ()</code></h1>
<p>Nguyên văn mục đích của <code>BLAMBDAλ()</code> của Peter:</p>
<blockquote class="blockquote">
<p>Recursively bisects an array and applies a function to the leaf nodes. Useful for when the result of the Fnλ(leaf) calls are not of equal length. As such, BMAPλ can produce ragged arrays.</p>
</blockquote>
<p>Owen cũng nhận xét là hàm này “more computationally efficient” so với <a href="https://gist.github.com/ncalm/ef7ed953571eec1475c291948aa2dbc3"><code>STACKER()</code></a> của ổng. Chi tiết về ý tưởng hàm gốc có thể tham khảo ở các link trên, giờ mình sẽ tìm hiểu <code>BLAMBDAλ()</code> được áp dụng cho use case này.</p>
<p>Đầu tiên <code>B()</code> (stands for Bisected) là một hàm recursive:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource txt number-lines code-with-copy"><code class="sourceCode default"><span id="cb3-1">B = LAMBDA(B, v,</span>
<span id="cb3-2">        LET(</span>
<span id="cb3-3">            n, ROWS(v),</span>
<span id="cb3-4">            IF(</span>
<span id="cb3-5">                n &gt; 1,</span>
<span id="cb3-6">                VSTACK(B(B, TAKE(v, n / 2)), B(B, DROP(v, n / 2))),</span>
<span id="cb3-7">                TEXTSPLIT(TEXTJOIN(" &amp; ", , v), , " &amp; ")</span>
<span id="cb3-8">            )</span>
<span id="cb3-9">        )</span>
<span id="cb3-10">    )</span></code></pre></div>
<p>Trong đó:</p>
<ul>
<li><code>n</code> là số dòng của <code>v</code> ~ mảng cần tính toán</li>
<li>nếu <code>n</code> &gt; 1, trả về kết hợp <code>VSTACK()</code> khi hàm <code>B()</code> được áp dụng cho hai nửa của mảng <code>v</code>, <code>TAKE()</code> sẽ lấy “phân nửa” đầu tiên, <code>DROP()</code> sẽ bỏ đi phân nửa đầu tiên ~ nghĩa là lấy phân nửa thứ 2 (lưu ý rằng hai hàm này đều lấy số nguyên nhỏ hơn gần nhất của <code>n / 2</code>, do đó không cần lấy phần nguyên bằng <code>QUOTIENT(n,2)</code> như hàm gốc của Peter).</li>
<li>khi n = 1, nghĩa là với mỗi phần tử của mảng <code>v</code>, thực hiện động tác <code>TEXTSPLIT(TEXTJOIN(...))</code> ~ trước hết join hai cột rồi sau đó split.</li>
<li>hàm này đệ quy và sẽ <code>VSTACK()</code> tất cả các mảng dọc sinh từ việc <code>TEXTSPLIT()</code> kết quả của <code>TEXTJOIN()</code> hai cột trên mỗi dòng của mảng <code>v</code>.</li>
</ul>
<p>Mình cũng thử viết lại hàm <code>B()</code>, thay đổi một chút ~ thay vì thực hiện trên 1 mảng 2 cột mình cố gắng chuyển mảng <code>v</code> thành một cột, tuy nhiên chưa thành công 😪 <strong>(chưa hiểu tại sao)</strong>:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource txt number-lines code-with-copy"><code class="sourceCode default"><span id="cb4-1">=LET(</span>
<span id="cb4-2">    B, LAMBDA(B, v,</span>
<span id="cb4-3">        LET(</span>
<span id="cb4-4">            n, ROWS(v),</span>
<span id="cb4-5">            IF(n &gt; 1, VSTACK(B(B, TAKE(v, n / 2)), B(B, DROP(v, n / 2))), TEXTSPLIT(v, " &amp; "))</span>
<span id="cb4-6">        )</span>
<span id="cb4-7">    ),</span>
<span id="cb4-8">    _data, VSTACK(_tbl_CityBike[start_station_name], _tbl_CityBike[end_station_name]),</span>
<span id="cb4-9">    str, B(B, FILTER(_data, LEN(_data) &gt; 0)),</span>
<span id="cb4-10">    _u_str, UNIQUE(str),</span>
<span id="cb4-11">    _cnt, BYROW(--(_u_str = TRANSPOSE(str)), LAMBDA(x, SUM(x))),</span>
<span id="cb4-12">    TAKE(SORTBY(HSTACK(_u_str, _cnt), _cnt, -1), 5)</span>
<span id="cb4-13">)</span></code></pre></div>
<section id="edit-sau-khi-mày-mò-thêm-sửa-lỗi-cho-giải-pháp-trên-mình-back-to-basic-với-lời-giải-sau" class="level2">
<h2 class="anchored" data-anchor-id="edit-sau-khi-mày-mò-thêm-sửa-lỗi-cho-giải-pháp-trên-mình-back-to-basic-với-lời-giải-sau">🚀 Edit: sau khi mày mò thêm sửa lỗi cho giải pháp trên mình back to basic với lời giải sau:</h2>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource txt number-lines code-with-copy"><code class="sourceCode default"><span id="cb5-1">=LET(</span>
<span id="cb5-2">    _data, TOCOL(_tbl_CityBike[[start_station_name]:[end_station_name]], 3),</span>
<span id="cb5-3">    _str, DROP(REDUCE("", _data, LAMBDA(a, x, VSTACK(a, TEXTSPLIT(x, , " &amp; ")))), 1),</span>
<span id="cb5-4">    _u_str, UNIQUE(_str),</span>
<span id="cb5-5">    _cnt, BYROW(--(_u_str = TRANSPOSE(_str)), LAMBDA(x, SUM(x))),</span>
<span id="cb5-6">    TAKE(SORTBY(HSTACK(_u_str, _cnt), _cnt, -1), 5)</span>
<span id="cb5-7">)</span></code></pre></div>
<p>Tất nhiên tốc độ xử lí sẽ chậm hơn <code>BLAMBDAλ()</code> - O_log(n), giải pháp này duyệt qua từng phần tử, nên BigO là O(n)</p>
<p>Thanks Peter &amp; Owen for this great use of recursion presented in such a concise manner.</p>


<!-- -->

</section>
</section>

 ]]></description>
  <category>excel</category>
  <category>lambda</category>
  <category>til</category>
  <guid>https://lktuan.github.io/blog/2024-06-06-excel-blambda/</guid>
  <pubDate>Wed, 05 Jun 2024 17:00:00 GMT</pubDate>
  <media:content url="https://lktuan.github.io/blog/2024-06-06-excel-blambda/excel-lambda.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Về quy ước đặt tên dữ liệu</title>
  <dc:creator>Tuan Le Khac</dc:creator>
  <link>https://lktuan.github.io/blog/2024-06-05-cnac/</link>
  <description><![CDATA[ <p>Đây là keynote từ article <a href="https://emilyriederer.netlify.app/post/column-name-contracts/">Column Names as Contracts</a> của <a href="https://emilyriederer.netlify.app/about">Emily Riederer</a>.</p>
<p>Các sản phẩm phần mềm luôn tuân theo một quy ước nhất định (về hình ảnh, ký tự) nhằm để người dùng có thể ngay lập tức nắm bắt được cách thức sử dụng, giao tiếp với nó. Ví dụ, nút Home thường sẽ đưa người dùng về trang chủ của một mobile app, nút “blog” trên blog của tôi sẽ đưa các bạn tiếp cận danh mục bài viết, etc. Ở layer phía sau, các API được BE viết cần tuân thủ documented inputs &amp; outputs, để các BE khác hay FE có thể sử dụng.</p>
<p>Tuy nhiên các bảng dữ liệu lại nằm ở một vùng màu xám không rõ ràng. Data service (từ producer i.e DE -&gt; user i.e DA, DS) đủ tĩnh để không được xem là normal service, nhưng cũng đủ thô để người ta ít chú ý đến nó về mặt giao diện. DE cứ thể lấy hết mọi dữ liệu trong hệ thống, DA nhìn dữ liệu và ngay lập tức giả định được nội dung của (cột) dữ liệu đó.</p>
<blockquote class="blockquote">
<p>Producers wonder why consumers aren’t satisfied, and consumers wonder why the data is never “right”.</p>
</blockquote>
<p>Cũng có một cách được nhiều tổ chức sử dụng như là Metadata managament, như:</p>
<ul>
<li>Lyft’s <a href="https://eng.lyft.com/amundsen-lyfts-data-discovery-metadata-engine-62d27254fbb9">Amundsen</a>
</li>
<li>LinkedIn’s <a href="https://www.linkedin.com/blog/engineering/archive/data-hub">DataHub</a>
</li>
<li>Netflix’s <a href="https://netflixtechblog.com/building-and-scaling-data-lineage-at-netflix-to-improve-data-infrastructure-reliability-and-1a52526a7977">Metacat</a>
</li>
</ul>
<p>Tuy nhiên giải pháp này là documentation oriented, producer và user đều phải tuân thủ nghiêm ngặt. Nó không <em>trực diện</em> khi DE đặt tên cột, hay DA đọc dữ liệu.</p>
<p>Ý tưởng của Emily là chuẩn hóa các quy ước đặt tên dữ liệu bằng <a href="https://en.wikipedia.org/wiki/Controlled_vocabulary">Controlled vocabulary</a>. Minh họa bằng <code>pointblank</code>, <code>collapsibleTree</code>, và <code>dplyr</code>.</p>
<section id="controlled-vocabulary" class="level1"><h1>Controlled Vocabulary</h1>
<p>CV là phương pháp sử dụng một tập hợp các từ, cụm từ, từ viết tắt để ký hiệu thông tin. Quy ước này cần được định nghĩa đề phù hợp cho tính chất bộ dữ liệu, và cũng đủ đơn giản để người tạo dữ liệu, người sử dụng dữ liệu sử dụng.</p>
<p>Ví dụ, 1 ứng dụng booking.</p>
<section id="level-1-kiểu-dữ-liệu-kiểu-đo-lường" class="level2"><h2 class="anchored" data-anchor-id="level-1-kiểu-dữ-liệu-kiểu-đo-lường">Level 1: Kiểu dữ liệu, kiểu đo lường</h2>
<ul>
<li>
<code>ID</code>: chỉ đối tượng, dạng numberic, tối ưu cho việc lưu trữ và thường làm khóa chính các bảng’</li>
<li>
<code>IND</code>: giá trị boolean 0/1, tôi thì thường sử dụng các từ như <code>IS</code>, <code>FLAG</code>;</li>
<li>
<code>N</code>: chỉ các dạng thông tin <em>có thể đếm (count)</em> được;</li>
<li>
<code>AMT</code>: chỉ các dạng thông tin có thể tổng, thường đề cập đến <em>currency</em>;</li>
<li>
<code>VAL</code>: cũng là số nhưng không thể tổng được (không có ý nghĩa), ví dụ như <em>kinh độ</em>, <em>vĩ độ</em>;</li>
<li>
<code>DT</code>: ngày;</li>
<li>
<code>TM</code>: giờ hoặc ngày giờ;</li>
<li>
<code>CAT</code>: category</li>
</ul>
<p>Cũng tùy vào dữ liệu, có thể thêm các cụm từ nhất định đề đề cập đến thông tin dữ liệu đó mang lại, ví dụ <code>ADD</code> cho address.</p>
</section><section id="level-2-đối-tượng-chủ-đề" class="level2"><h2 class="anchored" data-anchor-id="level-2-đối-tượng-chủ-đề">Level 2: Đối tượng, chủ đề</h2>
<p>Mối quan tâm của người dùng dữ liệu cũng giống như nhà quản trị, xung quanh các đối tượng của business: <code>USER</code>, <code>TRANSACTION</code>, etc.</p>
<p>Đối với ứng dụng đặt xe, các chủ thể có thể cần quan tâm là <code>TRIP</code>, <code>TRAVELER</code>, <code>ACCOMODATION</code>, <code>TRANSPORTATION</code>, etc.</p>
</section><section id="level-3-n-chi-tiết" class="level2"><h2 class="anchored" data-anchor-id="level-3-n-chi-tiết">Level 3-n: Chi tiết</h2>
<p>Hai tầng trên về cơ bản đã cho phép chúng ta mô tả được cột thông tin, chúng đều thể hiện được thuộc tính của chủ thể. Ví dụ:</p>
<ul>
<li>
<code>AMT_TRIP</code>: giá trị deal của Trip;</li>
<li>
<code>ADD_DESTINATION</code>: Điểm đến của trip.</li>
</ul>
<p>Tuy nhiên tùy vào từng use case, chúng ta hoàn toàn có thể mở rộng được về cả hai phía. Ví dụ:</p>
<ul>
<li>Về phía trước: khi làm việc với nhiều layer dữ liệu, ta có thể dùng <code>RAW</code>, <code>STAGING</code>, <code>DW</code>, <code>DL</code>, <code>DM</code>, etc<br>
</li>
<li>Về phía sau: <code>DAY</code> hoặc <code>MONTH</code> cho <code>N_DURATION</code>, <code>VND</code> hoặc <code>USD</code> cho currency <code>AMT</code>.</li>
</ul>
<p>Miễn là có một quy chuẩn, và nó đủ đơn giản để sử dụng.</p>
</section><section id="kết-hợp-chúng-lại" class="level2"><h2 class="anchored" data-anchor-id="kết-hợp-chúng-lại">Kết hợp chúng lại</h2>
<p>Tất nhiên ràng buộc việc đặt tên như vậy không chỉ để trang trí, nó sẽ giúp chúng ta tự động hóa quy trình kiểm soát chất lượng dữ liệu, .</p>
<p>Tôi sử dụng <a href="https://www.kaggle.com/datasets/rkiattisak/traveler-trip-data">bộ dữ liệu</a> này để thực hành (cột dữ liệu đã được đổi tên).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(trip_data)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 × 13
  ID_TRIP CAT_DESTINATION_CITY DT_START  DT_END N_DURATION_DAY CAT_TRAVELER_NAME
    &lt;dbl&gt; &lt;chr&gt;                &lt;chr&gt;     &lt;chr&gt;           &lt;dbl&gt; &lt;chr&gt;            
1       1 London, UK           5/1/2023  5/8/2…              7 John Smith       
2       2 Phuket, Thailand     6/15/2023 6/20/…              5 Jane Doe         
3       3 Bali, Indonesia      7/1/2023  7/8/2…              7 David Lee        
4       4 New York, USA        8/15/2023 8/29/…             14 Sarah Johnson    
5       5 Tokyo, Japan         9/10/2023 9/17/…              7 Kim Nguyen       
6       6 Paris, France        10/5/2023 10/10…              5 Michael Brown    
# ℹ 7 more variables: VAL_AGE_TRAVELER &lt;dbl&gt;, IND_GENDER_TRAVELER &lt;chr&gt;,
#   CAT_TRAVELER_NATIONALITY &lt;chr&gt;, CAT_ACCOMMODATION_TYPE &lt;chr&gt;,
#   AMT_ACCOMMODATION_COST &lt;chr&gt;, CAT_TRANSPORTATION_TYPE &lt;chr&gt;,
#   AMT_TRANSPORTATION_COST &lt;chr&gt;</code></pre>
</div>
</div>
</section></section><section id="data-validation" class="level1 page-columns page-full"><h1>Data Validation</h1>
<p>Sử dụng <code>pointblank</code> của R để kiếm tra một số tính chất của dữ liệu:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(pointblank)</span>
<span id="cb3-2"></span>
<span id="cb3-3">agent <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span></span>
<span id="cb3-4">  trip_data  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb3-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">create_agent</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">actions =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">action_levels</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stop_at =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.001</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb3-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">col_vals_gte</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">starts_with</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N"</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># check if cols start with N is GTE 0 or not</span></span>
<span id="cb3-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">col_vals_gte</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">starts_with</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"VAL"</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># check if cols start with VAL is GTE 0 or not</span></span>
<span id="cb3-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">col_vals_not_null</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">starts_with</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IND"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># check if cols start with IND contain Null or not</span></span>
<span id="cb3-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">col_vals_in_set</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">starts_with</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IND"</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Male"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Female"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># validate the value of only column started with IND - Gender</span></span>
<span id="cb3-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">col_is_date</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">starts_with</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DT"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># check validation of date columns</span></span>
<span id="cb3-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">interrogate</span>()</span></code></pre></div>
</div>

<div class="no-row-height column-margin column-container"><div class="">
<p>Note: To type <code>pipe</code> operator in VS Code, use this in the <code>keybindings.json</code> file:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource json number-lines code-with-copy"><code class="sourceCode json"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"key"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ctrl+Shift+m"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span>             </span>
<span id="cb4-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"command"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span> </span>
<span id="cb4-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"args"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"text"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" %&gt;% "</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">},</span></span>
<span id="cb4-5">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"when"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"editorTextFocus </span></span>
<span id="cb4-6"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            &amp;&amp; !editorHasSelection </span></span>
<span id="cb4-7"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            &amp;&amp; editorLangId </span></span>
<span id="cb4-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            == 'quarto'"</span> </span>
<span id="cb4-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>Then you can get the <code>pipe</code> when type <code>Ctrl + Shift + M</code>.</p>
</div></div><div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb5-1">agent</span></code></pre></div>
<div class="cell-output-display">
<div>
<div id="pb_agent" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>@import url("https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap");
@import url("https://unpkg.com/balloon-css/balloon.min.css");
#pb_agent table {
  font-family: 'IBM Plex Sans', system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#pb_agent thead, #pb_agent tbody, #pb_agent tfoot, #pb_agent tr, #pb_agent td, #pb_agent th {
  border-style: none;
}

#pb_agent p {
  margin: 0;
  padding: 0;
}

#pb_agent .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 90%;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#pb_agent .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#pb_agent .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#pb_agent .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#pb_agent .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#pb_agent .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#pb_agent .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#pb_agent .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#pb_agent .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#pb_agent .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#pb_agent .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#pb_agent .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#pb_agent .gt_spanner_row {
  border-bottom-style: hidden;
}

#pb_agent .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#pb_agent .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#pb_agent .gt_from_md > :first-child {
  margin-top: 0;
}

#pb_agent .gt_from_md > :last-child {
  margin-bottom: 0;
}

#pb_agent .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#pb_agent .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#pb_agent .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#pb_agent .gt_row_group_first td {
  border-top-width: 2px;
}

#pb_agent .gt_row_group_first th {
  border-top-width: 2px;
}

#pb_agent .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#pb_agent .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#pb_agent .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#pb_agent .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#pb_agent .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#pb_agent .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#pb_agent .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#pb_agent .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#pb_agent .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#pb_agent .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#pb_agent .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#pb_agent .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#pb_agent .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#pb_agent .gt_left {
  text-align: left;
}

#pb_agent .gt_center {
  text-align: center;
}

#pb_agent .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#pb_agent .gt_font_normal {
  font-weight: normal;
}

#pb_agent .gt_font_bold {
  font-weight: bold;
}

#pb_agent .gt_font_italic {
  font-style: italic;
}

#pb_agent .gt_super {
  font-size: 65%;
}

#pb_agent .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#pb_agent .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#pb_agent .gt_indent_1 {
  text-indent: 5px;
}

#pb_agent .gt_indent_2 {
  text-indent: 10px;
}

#pb_agent .gt_indent_3 {
  text-indent: 15px;
}

#pb_agent .gt_indent_4 {
  text-indent: 20px;
}

#pb_agent .gt_indent_5 {
  text-indent: 25px;
}

#pb_agent {
  -webkit-font-smoothing: antialiased;
}

#pb_agent .gt_row {
  overflow: visible;
}

#pb_agent .gt_sourcenote {
  height: 35px;
  padding: 0;
}

#pb_agent code {
  font-family: 'IBM Plex Mono', monospace, courier;
  color: black;
  background-color: transparent;
  padding: 0;
}
</style>
<table class="gt_table table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<thead>
<tr class="header gt_heading">
<th colspan="14" class="gt_heading gt_title gt_font_normal" style="text-align: left; color: #444444; font-size: 28px; font-weight: 500;">Pointblank Validation</th>
</tr>
<tr class="odd gt_heading">
<th colspan="14" class="gt_heading gt_subtitle gt_font_normal gt_bottom_border" style="text-align: left; font-size: 12px;">
<span style="text-decoration-style:solid;text-decoration-color:#ADD8E6;text-decoration-line:underline;text-underline-position:under;color:#333333;font-variant-numeric:tabular-nums;padding-left:4px;margin-right:5px;padding-right:2px;">[2024-06-18|18:23:37]</span>

<div style="height:25px;padding-top:10px;">
<span style="background-color: #F1D35A;color: #222222;padding: 0.5em 0.5em;position: inherit;text-transform: uppercase;margin: 5px 1px 5px 4px;font-weight: bold;border: solid 1px #F1D35A;padding: 2px 10px 2px 10px;font-size: smaller;">tibble</span><span style="background-color:#E5AB00;color:white;padding:0.5em 0.5em;position:inherit;text-transform:uppercase;margin:5px 0px 5px 5px;font-weight:bold;border:solid 1px #E5AB00;padding:2px 15px 2px 15px;font-size:smaller;">WARN</span> <span style="background-color:none;color:#333333;padding:0.5em 0.5em;position:inherit;margin:5px 0px 5px -4px;font-weight:bold;border:solid 1px #E5AB00;padding:2px 15px 2px 15px;font-size:smaller;">—</span> <span style="background-color:#D0182F;color:white;padding:0.5em 0.5em;position:inherit;text-transform:uppercase;margin:5px 0px 5px 1px;font-weight:bold;border:solid 1px #D0182F;padding:2px 15px 2px 15px;font-size:smaller;">STOP</span> <span style="background-color:none;color:#333333;padding:0.5em 0.5em;position:inherit;margin:5px 0px 5px -4px;font-weight:bold;border:solid 1px #D0182F;padding:2px 15px 2px 15px;font-size:smaller;">0.00</span> <span style="background-color:#499FFE;color:white;padding:0.5em 0.5em;position:inherit;text-transform:uppercase;margin:5px 0px 5px 1px;font-weight:bold;border:solid 1px #499FFE;padding:2px 15px 2px 15px;font-size:smaller;">NOTIFY</span> <span style="background-color:none;color:#333333;padding:0.5em 0.5em;position:inherit;margin:5px 0px 5px -4px;font-weight:bold;border:solid 1px #499FFE;padding:2px 15px 2px 15px;font-size:smaller;">—</span>
</div>
</th>
</tr>
<tr class="header gt_col_headings">
<th class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" style="color: #666666; font-weight: bold" scope="col"></th>
<th class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" style="color: #666666; font-weight: bold" scope="col"></th>
<th id="STEP" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" style="color: #666666; font-weight: bold" scope="col">STEP</th>
<th id="COLUMNS" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" style="color: #666666; font-weight: bold" scope="col">COLUMNS</th>
<th id="VALUES" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" style="color: #666666; font-weight: bold" scope="col">VALUES</th>
<th id="TBL" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" style="color: #666666; font-weight: bold" scope="col">TBL</th>
<th id="EVAL" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" style="color: #666666; font-weight: bold" scope="col">EVAL</th>
<th id="UNITS" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" style="color: #666666; font-weight: bold" scope="col">UNITS</th>
<th id="PASS" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" style="color: #666666; font-weight: bold" scope="col">PASS</th>
<th id="FAIL" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" style="color: #666666; font-weight: bold" scope="col">FAIL</th>
<th id="W" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" style="color: #666666; font-weight: bold" scope="col">W</th>
<th id="S" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" style="color: #666666; font-weight: bold" scope="col">S</th>
<th id="N" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" style="color: #666666; font-weight: bold" scope="col">N</th>
<th id="EXT" class="gt_col_heading gt_columns_bottom_border gt_center" data-quarto-table-cell-role="th" style="color: #666666; font-weight: bold" scope="col">EXT</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_left" headers="status_color" style="background-color: #CF142B; height: 40px"><br></td>
<td class="gt_row gt_right" headers="i" style="color: #666666; font-size: 13px; font-weight: bold; height: 40px">1</td>
<td class="gt_row gt_left" headers="type" style="height: 40px"><div aria-label="Expect that values in `N_DURATION_DAY` should be >= `0`. " data-balloon-pos="right" style="width:fit-content;">
<div style="margin:0;padding:0;display:inline-block;height:30px;vertical-align:middle;">
<svg width="30px" height="30px" viewbox="0 0 67 67" version="1.1" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink"><title>
col_vals_gte
</title>
<g id="All-Icons" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="col_vals_gte" transform="translate(0.000000, 0.241379)"><path d="M56.712234,1 C59.1975153,1 61.4475153,2.00735931 63.076195,3.63603897 C64.7048747,5.26471863 65.712234,7.51471863 65.712234,10 L65.712234,10 L65.712234,65 L10.712234,65 C8.22695259,65 5.97695259,63.9926407 4.34827294,62.363961 C2.71959328,60.7352814 1.71223397,58.4852814 1.71223397,56 L1.71223397,56 L1.71223397,10 C1.71223397,7.51471863 2.71959328,5.26471863 4.34827294,3.63603897 C5.97695259,2.00735931 8.22695259,1 10.712234,1 L10.712234,1 Z" id="rectangle" stroke="#000000" stroke-width="2" fill="#FFFFFF"></path><path d="M49.712234,12 L17.712234,12 C14.952234,12 12.712234,14.24 12.712234,17 L12.712234,49 C12.712234,51.76 14.952234,54 17.712234,54 L49.712234,54 C52.472234,54 54.712234,51.76 54.712234,49 L54.712234,17 C54.712234,14.24 52.472234,12 49.712234,12 Z M44.712234,47 L22.712234,47 L22.712234,45 L44.712234,45 L44.712234,47 Z M24.182234,40.88 L23.242234,39.12 L40.562234,30 L23.242234,20.88 L24.182234,19.12 L44.862234,30 L24.182234,40.88 Z" id="greater_than_equal" fill="#000000" fill-rule="nonzero"></path></g></g></svg>
</div>
<code style="font-size:11px;">&nbsp;col_vals_gte()</code>
</div></td>
<td class="gt_row gt_left" headers="columns" style="border-left-width: 1px; border-left-style: dashed; border-left-color: #E5E5E5; height: 40px"><div aria-label="N_DURATION_DAY" data-balloon-pos="left">
<p><span style="color:purple;"><code>▮</code></span><code>N_DURATION_DAY</code></p>
</div></td>
<td class="gt_row gt_left" headers="values" style="border-left-width: 1px; border-left-style: dashed; border-left-color: #E5E5E5; height: 40px"><div aria-label="0" data-balloon-pos="left">
<p><code>0</code></p>
</div></td>
<td class="gt_row gt_center" headers="precon" style="border-left-width: 1px; border-left-style: solid; border-left-color: #D3D3D3; background-color: #FCFCFC; height: 40px"><span style="background:transparent;padding:0;color:#333333;vertical-align:middle;font-size:10px;border:none;border-radius:4px;" aria-label="No modifications of the table." data-balloon-pos="left">
<svg width="25px" height="25px" viewbox="0 0 25 25" version="1.1" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" style="vertical-align: middle;"><g id="unchanged" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="unchanged" transform="translate(0.500000, 0.570147)"><rect id="Rectangle" x="0.125132506" y="0" width="23.749735" height="23.7894737"></rect><path d="M5.80375046,8.18194736 C3.77191832,8.18194736 2.11875046,9.83495328 2.11875046,11.8669474 C2.11875046,13.8989414 3.77191832,15.5519474 5.80375046,15.5519474 C7.8355826,15.5519474 9.48875046,13.8989414 9.48875046,11.8669474 C9.48875046,9.83495328 7.83552863,8.18194736 5.80375046,8.18194736 Z M5.80375046,14.814915 C4.17821997,14.814915 2.85578285,13.4924778 2.85578285,11.8669474 C2.85578285,10.2414169 4.17821997,8.91897975 5.80375046,8.91897975 C7.42928095,8.91897975 8.75171807,10.2414169 8.75171807,11.8669474 C8.75171807,13.4924778 7.42928095,14.814915 5.80375046,14.814915 Z" id="Shape" fill="#000000" fill-rule="nonzero"></path><path d="M13.9638189,8.699335 C13.9364621,8.70430925 13.9091059,8.71176968 13.8842359,8.71923074 C13.7822704,8.73663967 13.6877654,8.77643115 13.6056956,8.83860518 L10.2433156,11.3852598 C10.0766886,11.5046343 9.97720993,11.6986181 9.97720993,11.9025491 C9.97720993,12.1064807 10.0766886,12.3004639 10.2433156,12.4198383 L13.6056956,14.966493 C13.891697,15.1803725 14.2970729,15.1231721 14.5109517,14.8371707 C14.7248313,14.5511692 14.6676309,14.145794 14.3816294,13.9319145 L12.5313257,12.5392127 L21.8812495,12.5392127 L21.8812495,11.2658854 L12.5313257,11.2658854 L14.3816294,9.87318364 C14.6377872,9.71650453 14.7497006,9.40066014 14.6477351,9.11714553 C14.5482564,8.83363156 14.262255,8.65954352 13.9638189,8.699335 Z" id="arrow" fill="#000000" transform="translate(15.929230, 11.894737) rotate(-180.000000) translate(-15.929230, -11.894737) "></path></g></g></svg></span></td>
<td class="gt_row gt_center" headers="eval_sym" style="border-right-width: 1px; border-right-style: solid; border-right-color: #D3D3D3; background-color: #FCFCFC; height: 40px"><span style="background:transparent;padding:5px;color:#4CA64C;vertical-align:middle;font-size:15px;border:none;" aria-label="No evaluation issues." data-balloon-pos="left">✓</span></td>
<td class="gt_row gt_right" headers="units" style="font-size: 11px; height: 40px"><code>139</code></td>
<td class="gt_row gt_right" headers="n_pass" style="border-left-width: 1px; border-left-style: dashed; border-left-color: #E5E5E5; font-size: 11px; height: 40px">
<code>137</code><br><code>0.98561</code>
</td>
<td class="gt_row gt_right" headers="n_fail" style="border-left-width: 1px; border-left-style: dashed; border-left-color: #E5E5E5; font-size: 11px; height: 40px">
<code>2</code><br><code>0.01439</code>
</td>
<td class="gt_row gt_center" headers="W" style="border-left-width: 1px; border-left-style: solid; border-left-color: #D3D3D3; background-color: #FCFCFC; height: 40px">—</td>
<td class="gt_row gt_center" headers="S" style="background-color: #FCFCFC; height: 40px"><span style="color: #CF142B;">●</span></td>
<td class="gt_row gt_center" headers="N" style="border-right-width: 1px; border-right-style: solid; border-right-color: #D3D3D3; background-color: #FCFCFC; height: 40px">—</td>
<td class="gt_row gt_center" headers="extract" style="height: 40px"><a href="data:text/csv;base64,IklEX1RSSVAiLCJDQVRfREVTVElOQVRJT05fQ0lUWSIsIkRUX1NUQVJUIiwiRFRfRU5EIiwiTl9EVVJBVElPTl9EQVkiLCJDQVRfVFJBVkVMRVJfTkFNRSIsIlZBTF9BR0VfVFJBVkVMRVIiLCJJTkRfR0VOREVSX1RSQVZFTEVSIiwiQ0FUX1RSQVZFTEVSX05BVElPTkFMSVRZIiwiQ0FUX0FDQ09NTU9EQVRJT05fVFlQRSIsIkFNVF9BQ0NPTU1PREFUSU9OX0NPU1QiLCJDQVRfVFJBTlNQT1JUQVRJT05fVFlQRSIsIkFNVF9UUkFOU1BPUlRBVElPTl9DT1NUIg0KNzIsTkEsTkEsTkEsTkEsTkEsTkEsTkEsTkEsTkEsTkEsTkEsTkENCjEyOCxOQSxOQSxOQSxOQSxOQSxOQSxOQSxOQSxOQSxOQSxOQSxOQQ0K" download="extract_0001.csv">
<button aria-label="There are 2 'fail' rows available as a CSV file." data-balloon-pos="left" style="background-color:#67C2DC;color:#FFFFFF;border:none;padding:5px;font-weight:bold;cursor:pointer;border-radius:4px;">
CSV
</button>
</a></td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="status_color" style="background-color: #CF142B; height: 40px"><br></td>
<td class="gt_row gt_right" headers="i" style="color: #666666; font-size: 13px; font-weight: bold; height: 40px">2</td>
<td class="gt_row gt_left" headers="type" style="height: 40px"><div aria-label="Expect that values in `VAL_AGE_TRAVELER` should be >= `0`. " data-balloon-pos="right" style="width:fit-content;">
<div style="margin:0;padding:0;display:inline-block;height:30px;vertical-align:middle;">
<svg width="30px" height="30px" viewbox="0 0 67 67" version="1.1" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink"><title>
col_vals_gte
</title>
<g id="All-Icons" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="col_vals_gte" transform="translate(0.000000, 0.241379)"><path d="M56.712234,1 C59.1975153,1 61.4475153,2.00735931 63.076195,3.63603897 C64.7048747,5.26471863 65.712234,7.51471863 65.712234,10 L65.712234,10 L65.712234,65 L10.712234,65 C8.22695259,65 5.97695259,63.9926407 4.34827294,62.363961 C2.71959328,60.7352814 1.71223397,58.4852814 1.71223397,56 L1.71223397,56 L1.71223397,10 C1.71223397,7.51471863 2.71959328,5.26471863 4.34827294,3.63603897 C5.97695259,2.00735931 8.22695259,1 10.712234,1 L10.712234,1 Z" id="rectangle" stroke="#000000" stroke-width="2" fill="#FFFFFF"></path><path d="M49.712234,12 L17.712234,12 C14.952234,12 12.712234,14.24 12.712234,17 L12.712234,49 C12.712234,51.76 14.952234,54 17.712234,54 L49.712234,54 C52.472234,54 54.712234,51.76 54.712234,49 L54.712234,17 C54.712234,14.24 52.472234,12 49.712234,12 Z M44.712234,47 L22.712234,47 L22.712234,45 L44.712234,45 L44.712234,47 Z M24.182234,40.88 L23.242234,39.12 L40.562234,30 L23.242234,20.88 L24.182234,19.12 L44.862234,30 L24.182234,40.88 Z" id="greater_than_equal" fill="#000000" fill-rule="nonzero"></path></g></g></svg>
</div>
<code style="font-size:11px;">&nbsp;col_vals_gte()</code>
</div></td>
<td class="gt_row gt_left" headers="columns" style="border-left-width: 1px; border-left-style: dashed; border-left-color: #E5E5E5; height: 40px"><div aria-label="VAL_AGE_TRAVELER" data-balloon-pos="left">
<p><span style="color:purple;"><code>▮</code></span><code>VAL_AGE_TRAVELER</code></p>
</div></td>
<td class="gt_row gt_left" headers="values" style="border-left-width: 1px; border-left-style: dashed; border-left-color: #E5E5E5; height: 40px"><div aria-label="0" data-balloon-pos="left">
<p><code>0</code></p>
</div></td>
<td class="gt_row gt_center" headers="precon" style="border-left-width: 1px; border-left-style: solid; border-left-color: #D3D3D3; background-color: #FCFCFC; height: 40px"><span style="background:transparent;padding:0;color:#333333;vertical-align:middle;font-size:10px;border:none;border-radius:4px;" aria-label="No modifications of the table." data-balloon-pos="left">
<svg width="25px" height="25px" viewbox="0 0 25 25" version="1.1" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" style="vertical-align: middle;"><g id="unchanged" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="unchanged" transform="translate(0.500000, 0.570147)"><rect id="Rectangle" x="0.125132506" y="0" width="23.749735" height="23.7894737"></rect><path d="M5.80375046,8.18194736 C3.77191832,8.18194736 2.11875046,9.83495328 2.11875046,11.8669474 C2.11875046,13.8989414 3.77191832,15.5519474 5.80375046,15.5519474 C7.8355826,15.5519474 9.48875046,13.8989414 9.48875046,11.8669474 C9.48875046,9.83495328 7.83552863,8.18194736 5.80375046,8.18194736 Z M5.80375046,14.814915 C4.17821997,14.814915 2.85578285,13.4924778 2.85578285,11.8669474 C2.85578285,10.2414169 4.17821997,8.91897975 5.80375046,8.91897975 C7.42928095,8.91897975 8.75171807,10.2414169 8.75171807,11.8669474 C8.75171807,13.4924778 7.42928095,14.814915 5.80375046,14.814915 Z" id="Shape" fill="#000000" fill-rule="nonzero"></path><path d="M13.9638189,8.699335 C13.9364621,8.70430925 13.9091059,8.71176968 13.8842359,8.71923074 C13.7822704,8.73663967 13.6877654,8.77643115 13.6056956,8.83860518 L10.2433156,11.3852598 C10.0766886,11.5046343 9.97720993,11.6986181 9.97720993,11.9025491 C9.97720993,12.1064807 10.0766886,12.3004639 10.2433156,12.4198383 L13.6056956,14.966493 C13.891697,15.1803725 14.2970729,15.1231721 14.5109517,14.8371707 C14.7248313,14.5511692 14.6676309,14.145794 14.3816294,13.9319145 L12.5313257,12.5392127 L21.8812495,12.5392127 L21.8812495,11.2658854 L12.5313257,11.2658854 L14.3816294,9.87318364 C14.6377872,9.71650453 14.7497006,9.40066014 14.6477351,9.11714553 C14.5482564,8.83363156 14.262255,8.65954352 13.9638189,8.699335 Z" id="arrow" fill="#000000" transform="translate(15.929230, 11.894737) rotate(-180.000000) translate(-15.929230, -11.894737) "></path></g></g></svg></span></td>
<td class="gt_row gt_center" headers="eval_sym" style="border-right-width: 1px; border-right-style: solid; border-right-color: #D3D3D3; background-color: #FCFCFC; height: 40px"><span style="background:transparent;padding:5px;color:#4CA64C;vertical-align:middle;font-size:15px;border:none;" aria-label="No evaluation issues." data-balloon-pos="left">✓</span></td>
<td class="gt_row gt_right" headers="units" style="font-size: 11px; height: 40px"><code>139</code></td>
<td class="gt_row gt_right" headers="n_pass" style="border-left-width: 1px; border-left-style: dashed; border-left-color: #E5E5E5; font-size: 11px; height: 40px">
<code>137</code><br><code>0.98561</code>
</td>
<td class="gt_row gt_right" headers="n_fail" style="border-left-width: 1px; border-left-style: dashed; border-left-color: #E5E5E5; font-size: 11px; height: 40px">
<code>2</code><br><code>0.01439</code>
</td>
<td class="gt_row gt_center" headers="W" style="border-left-width: 1px; border-left-style: solid; border-left-color: #D3D3D3; background-color: #FCFCFC; height: 40px">—</td>
<td class="gt_row gt_center" headers="S" style="background-color: #FCFCFC; height: 40px"><span style="color: #CF142B;">●</span></td>
<td class="gt_row gt_center" headers="N" style="border-right-width: 1px; border-right-style: solid; border-right-color: #D3D3D3; background-color: #FCFCFC; height: 40px">—</td>
<td class="gt_row gt_center" headers="extract" style="height: 40px"><a href="data:text/csv;base64,IklEX1RSSVAiLCJDQVRfREVTVElOQVRJT05fQ0lUWSIsIkRUX1NUQVJUIiwiRFRfRU5EIiwiTl9EVVJBVElPTl9EQVkiLCJDQVRfVFJBVkVMRVJfTkFNRSIsIlZBTF9BR0VfVFJBVkVMRVIiLCJJTkRfR0VOREVSX1RSQVZFTEVSIiwiQ0FUX1RSQVZFTEVSX05BVElPTkFMSVRZIiwiQ0FUX0FDQ09NTU9EQVRJT05fVFlQRSIsIkFNVF9BQ0NPTU1PREFUSU9OX0NPU1QiLCJDQVRfVFJBTlNQT1JUQVRJT05fVFlQRSIsIkFNVF9UUkFOU1BPUlRBVElPTl9DT1NUIg0KNzIsTkEsTkEsTkEsTkEsTkEsTkEsTkEsTkEsTkEsTkEsTkEsTkENCjEyOCxOQSxOQSxOQSxOQSxOQSxOQSxOQSxOQSxOQSxOQSxOQSxOQQ0K" download="extract_0002.csv">
<button aria-label="There are 2 'fail' rows available as a CSV file." data-balloon-pos="left" style="background-color:#67C2DC;color:#FFFFFF;border:none;padding:5px;font-weight:bold;cursor:pointer;border-radius:4px;">
CSV
</button>
</a></td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="status_color" style="background-color: #CF142B; height: 40px"><br></td>
<td class="gt_row gt_right" headers="i" style="color: #666666; font-size: 13px; font-weight: bold; height: 40px">3</td>
<td class="gt_row gt_left" headers="type" style="height: 40px"><div aria-label="Expect that all values in `IND_GENDER_TRAVELER` should not be NULL. " data-balloon-pos="right" style="width:fit-content;">
<div style="margin:0;padding:0;display:inline-block;height:30px;vertical-align:middle;">
<svg width="30px" height="30px" viewbox="0 0 67 67" version="1.1" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink"><title>
col_vals_not_null
</title>
<g id="All-Icons" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="col_vals_not_null" transform="translate(0.000000, 0.551724)"><path d="M56.712234,1 C59.1975153,1 61.4475153,2.00735931 63.076195,3.63603897 C64.7048747,5.26471863 65.712234,7.51471863 65.712234,10 L65.712234,10 L65.712234,65 L10.712234,65 C8.22695259,65 5.97695259,63.9926407 4.34827294,62.363961 C2.71959328,60.7352814 1.71223397,58.4852814 1.71223397,56 L1.71223397,56 L1.71223397,10 C1.71223397,7.51471863 2.71959328,5.26471863 4.34827294,3.63603897 C5.97695259,2.00735931 8.22695259,1 10.712234,1 L10.712234,1 Z" id="rectangle" stroke="#000000" stroke-width="2" fill="#FFFFFF"></path><path d="M40.6120805,47.037834 C37.4692348,47.037834 35.0126139,45.9348613 33.712234,44.0140597 C32.4118541,45.9348613 29.9552331,47.037834 26.8123883,47.037834 C22.6574397,47.037834 16.0646712,43.4437723 16.0646712,33.8021619 C16.0646712,29.3401361 17.4715879,18.962166 30.5035862,18.962166 C30.9454018,18.962166 31.3057481,19.3225124 31.3057481,19.7643279 L31.3057481,21.3686518 C31.3057481,21.8104674 30.9454018,22.1708138 30.5035862,22.1708138 C26.6400486,22.1708138 22.4819668,25.8118774 22.4819668,33.8021619 C22.4819668,37.5090277 23.7635456,43.0270243 27.2949384,43.0270243 C29.795428,43.0270243 31.224279,40.4231312 32.0985095,38.2861221 C30.5067194,35.6101596 29.7014243,33.1034035 29.7014243,30.8347892 C29.7014243,25.6238707 31.8603677,23.7751377 33.712234,23.7751377 C35.5641002,23.7751377 37.7230437,25.6238707 37.7230437,30.8347892 C37.7230437,33.1347383 36.9396828,35.5788255 35.3290916,38.2861221 C36.6294715,41.4321009 38.243196,43.0270243 40.1295295,43.0270243 C43.6609223,43.0270243 44.9425012,37.5090277 44.9425012,33.8021619 C44.9425012,25.8118774 40.7844193,22.1708138 36.9208817,22.1708138 C36.4759329,22.1708138 36.1187198,21.8104674 36.1187198,21.3686518 L36.1187198,19.7643279 C36.1187198,19.3225124 36.4759329,18.962166 36.9208817,18.962166 C49.9528801,18.962166 51.3597967,29.3401361 51.3597967,33.8021619 C51.3597967,43.4437723 44.7670282,47.037834 40.6120805,47.037834 Z" id="omega" fill="#000000" fill-rule="nonzero"></path><path d="M33,7.93597705 C33.2761424,7.93597705 33.5,8.15983467 33.5,8.43597705 L33.5,57.564023 C33.5,57.8401653 33.2761424,58.064023 33,58.064023 C32.7238576,58.064023 32.5,57.8401653 32.5,57.564023 L32.5,8.43597705 C32.5,8.15983467 32.7238576,7.93597705 33,7.93597705 Z" id="line_black" fill="#000000" transform="translate(33.000000, 33.000000) rotate(-320.000000) translate(-33.000000, -33.000000) "></path><polygon id="line_white" fill="#FFFFFF" transform="translate(34.899496, 32.153303) rotate(-320.000000) translate(-34.899496, -32.153303) " points="34.3994962 8.54160469 35.3994962 8.54160469 35.3994962 55.7650019 34.3994962 55.7650019"></polygon></g></g></svg>
</div>
<code style="font-size:10px;">&nbsp;col_vals_not_null()</code>
</div></td>
<td class="gt_row gt_left" headers="columns" style="border-left-width: 1px; border-left-style: dashed; border-left-color: #E5E5E5; height: 40px"><div aria-label="IND_GENDER_TRAVELER" data-balloon-pos="left">
<p><span style="color:purple;"><code>▮</code></span><code>IND_GENDER_TRAVELER</code></p>
</div></td>
<td class="gt_row gt_left" headers="values" style="border-left-width: 1px; border-left-style: dashed; border-left-color: #E5E5E5; height: 40px">—</td>
<td class="gt_row gt_center" headers="precon" style="border-left-width: 1px; border-left-style: solid; border-left-color: #D3D3D3; background-color: #FCFCFC; height: 40px"><span style="background:transparent;padding:0;color:#333333;vertical-align:middle;font-size:10px;border:none;border-radius:4px;" aria-label="No modifications of the table." data-balloon-pos="left">
<svg width="25px" height="25px" viewbox="0 0 25 25" version="1.1" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" style="vertical-align: middle;"><g id="unchanged" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="unchanged" transform="translate(0.500000, 0.570147)"><rect id="Rectangle" x="0.125132506" y="0" width="23.749735" height="23.7894737"></rect><path d="M5.80375046,8.18194736 C3.77191832,8.18194736 2.11875046,9.83495328 2.11875046,11.8669474 C2.11875046,13.8989414 3.77191832,15.5519474 5.80375046,15.5519474 C7.8355826,15.5519474 9.48875046,13.8989414 9.48875046,11.8669474 C9.48875046,9.83495328 7.83552863,8.18194736 5.80375046,8.18194736 Z M5.80375046,14.814915 C4.17821997,14.814915 2.85578285,13.4924778 2.85578285,11.8669474 C2.85578285,10.2414169 4.17821997,8.91897975 5.80375046,8.91897975 C7.42928095,8.91897975 8.75171807,10.2414169 8.75171807,11.8669474 C8.75171807,13.4924778 7.42928095,14.814915 5.80375046,14.814915 Z" id="Shape" fill="#000000" fill-rule="nonzero"></path><path d="M13.9638189,8.699335 C13.9364621,8.70430925 13.9091059,8.71176968 13.8842359,8.71923074 C13.7822704,8.73663967 13.6877654,8.77643115 13.6056956,8.83860518 L10.2433156,11.3852598 C10.0766886,11.5046343 9.97720993,11.6986181 9.97720993,11.9025491 C9.97720993,12.1064807 10.0766886,12.3004639 10.2433156,12.4198383 L13.6056956,14.966493 C13.891697,15.1803725 14.2970729,15.1231721 14.5109517,14.8371707 C14.7248313,14.5511692 14.6676309,14.145794 14.3816294,13.9319145 L12.5313257,12.5392127 L21.8812495,12.5392127 L21.8812495,11.2658854 L12.5313257,11.2658854 L14.3816294,9.87318364 C14.6377872,9.71650453 14.7497006,9.40066014 14.6477351,9.11714553 C14.5482564,8.83363156 14.262255,8.65954352 13.9638189,8.699335 Z" id="arrow" fill="#000000" transform="translate(15.929230, 11.894737) rotate(-180.000000) translate(-15.929230, -11.894737) "></path></g></g></svg></span></td>
<td class="gt_row gt_center" headers="eval_sym" style="border-right-width: 1px; border-right-style: solid; border-right-color: #D3D3D3; background-color: #FCFCFC; height: 40px"><span style="background:transparent;padding:5px;color:#4CA64C;vertical-align:middle;font-size:15px;border:none;" aria-label="No evaluation issues." data-balloon-pos="left">✓</span></td>
<td class="gt_row gt_right" headers="units" style="font-size: 11px; height: 40px"><code>139</code></td>
<td class="gt_row gt_right" headers="n_pass" style="border-left-width: 1px; border-left-style: dashed; border-left-color: #E5E5E5; font-size: 11px; height: 40px">
<code>137</code><br><code>0.98561</code>
</td>
<td class="gt_row gt_right" headers="n_fail" style="border-left-width: 1px; border-left-style: dashed; border-left-color: #E5E5E5; font-size: 11px; height: 40px">
<code>2</code><br><code>0.01439</code>
</td>
<td class="gt_row gt_center" headers="W" style="border-left-width: 1px; border-left-style: solid; border-left-color: #D3D3D3; background-color: #FCFCFC; height: 40px">—</td>
<td class="gt_row gt_center" headers="S" style="background-color: #FCFCFC; height: 40px"><span style="color: #CF142B;">●</span></td>
<td class="gt_row gt_center" headers="N" style="border-right-width: 1px; border-right-style: solid; border-right-color: #D3D3D3; background-color: #FCFCFC; height: 40px">—</td>
<td class="gt_row gt_center" headers="extract" style="height: 40px"><a href="data:text/csv;base64,IklEX1RSSVAiLCJDQVRfREVTVElOQVRJT05fQ0lUWSIsIkRUX1NUQVJUIiwiRFRfRU5EIiwiTl9EVVJBVElPTl9EQVkiLCJDQVRfVFJBVkVMRVJfTkFNRSIsIlZBTF9BR0VfVFJBVkVMRVIiLCJJTkRfR0VOREVSX1RSQVZFTEVSIiwiQ0FUX1RSQVZFTEVSX05BVElPTkFMSVRZIiwiQ0FUX0FDQ09NTU9EQVRJT05fVFlQRSIsIkFNVF9BQ0NPTU1PREFUSU9OX0NPU1QiLCJDQVRfVFJBTlNQT1JUQVRJT05fVFlQRSIsIkFNVF9UUkFOU1BPUlRBVElPTl9DT1NUIg0KNzIsTkEsTkEsTkEsTkEsTkEsTkEsTkEsTkEsTkEsTkEsTkEsTkENCjEyOCxOQSxOQSxOQSxOQSxOQSxOQSxOQSxOQSxOQSxOQSxOQSxOQQ0K" download="extract_0003.csv">
<button aria-label="There are 2 'fail' rows available as a CSV file." data-balloon-pos="left" style="background-color:#67C2DC;color:#FFFFFF;border:none;padding:5px;font-weight:bold;cursor:pointer;border-radius:4px;">
CSV
</button>
</a></td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="status_color" style="background-color: #CF142B; height: 40px"><br></td>
<td class="gt_row gt_right" headers="i" style="color: #666666; font-size: 13px; font-weight: bold; height: 40px">4</td>
<td class="gt_row gt_left" headers="type" style="height: 40px"><div aria-label="Expect that values in `IND_GENDER_TRAVELER` should be in the set of `Male`, `Female`. " data-balloon-pos="right" style="width:fit-content;">
<div style="margin:0;padding:0;display:inline-block;height:30px;vertical-align:middle;">
<svg width="30px" height="30px" viewbox="0 0 67 67" version="1.1" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink"><title>
col_vals_in_set
</title>
<g id="All-Icons" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="col_vals_in_set" transform="translate(0.000000, 0.172414)"><path d="M56.712234,1 C59.1975153,1 61.4475153,2.00735931 63.076195,3.63603897 C64.7048747,5.26471863 65.712234,7.51471863 65.712234,10 L65.712234,10 L65.712234,65 L10.712234,65 C8.22695259,65 5.97695259,63.9926407 4.34827294,62.363961 C2.71959328,60.7352814 1.71223397,58.4852814 1.71223397,56 L1.71223397,56 L1.71223397,10 C1.71223397,7.51471863 2.71959328,5.26471863 4.34827294,3.63603897 C5.97695259,2.00735931 8.22695259,1 10.712234,1 L10.712234,1 Z" id="rectangle" stroke="#000000" stroke-width="2" fill="#FFFFFF"></path><path d="M44.127969,41.1538382 L31.0814568,41.1538382 C29.9510748,41.1536429 28.8827052,40.9256134 27.9079888,40.5136953 C26.4467442,39.8960136 25.19849,38.8599685 24.3189894,37.5577099 C23.8792391,36.906727 23.5314818,36.1899233 23.2936866,35.4252675 C23.2130217,35.16589 23.1460289,34.9005554 23.0913409,34.6307286 L44.1278714,34.6307286 C45.028466,34.6306309 45.7586488,33.9004481 45.7586488,32.9998535 C45.7586488,32.0992589 45.028466,31.3690761 44.1278714,31.3690761 L23.0905596,31.3690761 C23.1990567,30.8337194 23.3597028,30.3180894 23.5675173,29.8264831 C24.185199,28.3652386 25.2212442,27.1169844 26.5236004,26.2374838 C27.1745833,25.7977334 27.891387,25.4499762 28.6560428,25.2122786 C29.4208939,24.9744833 30.2334994,24.8459665 31.0813591,24.8459665 L44.1277737,24.8459665 C45.0283683,24.8459665 45.7586488,24.1157837 45.7586488,23.2151891 C45.7586488,22.3145945 45.0283683,21.5844117 44.1277737,21.5844117 L31.0813591,21.5844117 C29.5096643,21.5844117 28.0039858,21.9038483 26.6373711,22.4820765 C24.5866678,23.3498583 22.8469049,24.7950871 21.6163267,26.616296 C20.3856508,28.4362354 19.665136,30.6413347 19.6658191,33.0000488 C19.6658191,34.5717436 19.9852563,36.0774222 20.5635822,37.4440369 C21.4312663,39.4947402 22.8765927,41.2345031 24.697704,42.4650813 C26.5176434,43.6957572 28.7227427,44.4155883 31.0814568,44.4155883 L44.1278714,44.4155883 C45.028466,44.4155883 45.7586488,43.6854055 45.7586488,42.7848109 C45.7586488,41.8842163 45.0285636,41.1538382 44.127969,41.1538382 Z" id="set_of" fill="#000000" fill-rule="nonzero"></path></g></g></svg>
</div>
<code style="font-size:11px;">&nbsp;col_vals_in_set()</code>
</div></td>
<td class="gt_row gt_left" headers="columns" style="border-left-width: 1px; border-left-style: dashed; border-left-color: #E5E5E5; height: 40px"><div aria-label="IND_GENDER_TRAVELER" data-balloon-pos="left">
<p><span style="color:purple;"><code>▮</code></span><code>IND_GENDER_TRAVELER</code></p>
</div></td>
<td class="gt_row gt_left" headers="values" style="border-left-width: 1px; border-left-style: dashed; border-left-color: #E5E5E5; height: 40px"><div aria-label="Male, Female" data-balloon-pos="left">
<p><code>Male, Female</code></p>
</div></td>
<td class="gt_row gt_center" headers="precon" style="border-left-width: 1px; border-left-style: solid; border-left-color: #D3D3D3; background-color: #FCFCFC; height: 40px"><span style="background:transparent;padding:0;color:#333333;vertical-align:middle;font-size:10px;border:none;border-radius:4px;" aria-label="No modifications of the table." data-balloon-pos="left">
<svg width="25px" height="25px" viewbox="0 0 25 25" version="1.1" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" style="vertical-align: middle;"><g id="unchanged" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="unchanged" transform="translate(0.500000, 0.570147)"><rect id="Rectangle" x="0.125132506" y="0" width="23.749735" height="23.7894737"></rect><path d="M5.80375046,8.18194736 C3.77191832,8.18194736 2.11875046,9.83495328 2.11875046,11.8669474 C2.11875046,13.8989414 3.77191832,15.5519474 5.80375046,15.5519474 C7.8355826,15.5519474 9.48875046,13.8989414 9.48875046,11.8669474 C9.48875046,9.83495328 7.83552863,8.18194736 5.80375046,8.18194736 Z M5.80375046,14.814915 C4.17821997,14.814915 2.85578285,13.4924778 2.85578285,11.8669474 C2.85578285,10.2414169 4.17821997,8.91897975 5.80375046,8.91897975 C7.42928095,8.91897975 8.75171807,10.2414169 8.75171807,11.8669474 C8.75171807,13.4924778 7.42928095,14.814915 5.80375046,14.814915 Z" id="Shape" fill="#000000" fill-rule="nonzero"></path><path d="M13.9638189,8.699335 C13.9364621,8.70430925 13.9091059,8.71176968 13.8842359,8.71923074 C13.7822704,8.73663967 13.6877654,8.77643115 13.6056956,8.83860518 L10.2433156,11.3852598 C10.0766886,11.5046343 9.97720993,11.6986181 9.97720993,11.9025491 C9.97720993,12.1064807 10.0766886,12.3004639 10.2433156,12.4198383 L13.6056956,14.966493 C13.891697,15.1803725 14.2970729,15.1231721 14.5109517,14.8371707 C14.7248313,14.5511692 14.6676309,14.145794 14.3816294,13.9319145 L12.5313257,12.5392127 L21.8812495,12.5392127 L21.8812495,11.2658854 L12.5313257,11.2658854 L14.3816294,9.87318364 C14.6377872,9.71650453 14.7497006,9.40066014 14.6477351,9.11714553 C14.5482564,8.83363156 14.262255,8.65954352 13.9638189,8.699335 Z" id="arrow" fill="#000000" transform="translate(15.929230, 11.894737) rotate(-180.000000) translate(-15.929230, -11.894737) "></path></g></g></svg></span></td>
<td class="gt_row gt_center" headers="eval_sym" style="border-right-width: 1px; border-right-style: solid; border-right-color: #D3D3D3; background-color: #FCFCFC; height: 40px"><span style="background:transparent;padding:5px;color:#4CA64C;vertical-align:middle;font-size:15px;border:none;" aria-label="No evaluation issues." data-balloon-pos="left">✓</span></td>
<td class="gt_row gt_right" headers="units" style="font-size: 11px; height: 40px"><code>139</code></td>
<td class="gt_row gt_right" headers="n_pass" style="border-left-width: 1px; border-left-style: dashed; border-left-color: #E5E5E5; font-size: 11px; height: 40px">
<code>137</code><br><code>0.98561</code>
</td>
<td class="gt_row gt_right" headers="n_fail" style="border-left-width: 1px; border-left-style: dashed; border-left-color: #E5E5E5; font-size: 11px; height: 40px">
<code>2</code><br><code>0.01439</code>
</td>
<td class="gt_row gt_center" headers="W" style="border-left-width: 1px; border-left-style: solid; border-left-color: #D3D3D3; background-color: #FCFCFC; height: 40px">—</td>
<td class="gt_row gt_center" headers="S" style="background-color: #FCFCFC; height: 40px"><span style="color: #CF142B;">●</span></td>
<td class="gt_row gt_center" headers="N" style="border-right-width: 1px; border-right-style: solid; border-right-color: #D3D3D3; background-color: #FCFCFC; height: 40px">—</td>
<td class="gt_row gt_center" headers="extract" style="height: 40px"><a href="data:text/csv;base64,IklEX1RSSVAiLCJDQVRfREVTVElOQVRJT05fQ0lUWSIsIkRUX1NUQVJUIiwiRFRfRU5EIiwiTl9EVVJBVElPTl9EQVkiLCJDQVRfVFJBVkVMRVJfTkFNRSIsIlZBTF9BR0VfVFJBVkVMRVIiLCJJTkRfR0VOREVSX1RSQVZFTEVSIiwiQ0FUX1RSQVZFTEVSX05BVElPTkFMSVRZIiwiQ0FUX0FDQ09NTU9EQVRJT05fVFlQRSIsIkFNVF9BQ0NPTU1PREFUSU9OX0NPU1QiLCJDQVRfVFJBTlNQT1JUQVRJT05fVFlQRSIsIkFNVF9UUkFOU1BPUlRBVElPTl9DT1NUIg0KNzIsTkEsTkEsTkEsTkEsTkEsTkEsTkEsTkEsTkEsTkEsTkEsTkENCjEyOCxOQSxOQSxOQSxOQSxOQSxOQSxOQSxOQSxOQSxOQSxOQSxOQQ0K" download="extract_0004.csv">
<button aria-label="There are 2 'fail' rows available as a CSV file." data-balloon-pos="left" style="background-color:#67C2DC;color:#FFFFFF;border:none;padding:5px;font-weight:bold;cursor:pointer;border-radius:4px;">
CSV
</button>
</a></td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" headers="status_color" style="background-color: #CF142B; height: 40px"><br></td>
<td class="gt_row gt_right" headers="i" style="color: #666666; font-size: 13px; font-weight: bold; height: 40px">5</td>
<td class="gt_row gt_left" headers="type" style="height: 40px"><div aria-label="Expect that column `DT_START` is of type: Date. " data-balloon-pos="right" style="width:fit-content;">
<div style="margin:0;padding:0;display:inline-block;height:30px;vertical-align:middle;">
<svg width="30px" height="30px" viewbox="0 0 67 67" version="1.1" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink"><title>
col_is_date
</title>
<g id="All-Icons" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="col_is_date" transform="translate(0.000000, 0.379310)"><path d="M56.712234,1.01466935 C59.1975153,1.01466935 61.4475153,2.02202867 63.076195,3.65070832 C64.7048747,5.27938798 65.712234,7.52938798 65.712234,10.0146694 L65.712234,10.0146694 L65.712234,65.0146694 L10.712234,65.0146694 C8.22695259,65.0146694 5.97695259,64.00731 4.34827294,62.3786304 C2.71959328,60.7499507 1.71223397,58.4999507 1.71223397,56.0146694 L1.71223397,56.0146694 L1.71223397,10.0146694 C1.71223397,7.52938798 2.71959328,5.27938798 4.34827294,3.65070832 C5.97695259,2.02202867 8.22695259,1.01466935 10.712234,1.01466935 L10.712234,1.01466935 Z" id="rectangle" stroke="#000000" stroke-width="2" fill="#FFFFFF"></path><rect id="column" fill="#000000" x="12.2117153" y="12.0146694" width="20" height="42" rx="1"></rect><path d="M40.7190873,43.0146694 L40.7190873,24.2256069 L46.9651811,24.2256069 C48.8271696,24.2256069 50.3315491,24.4329616 51.4783647,24.8476772 C52.6251803,25.2623928 53.6175206,25.9648597 54.4554155,26.955099 C55.7841981,28.5293257 56.4485795,30.6028726 56.4485795,33.1758022 C56.4485795,36.2988647 55.6233925,38.7194134 53.9729936,40.4375209 C52.3225947,42.1556285 49.9993758,43.0146694 47.003267,43.0146694 L40.7190873,43.0146694 Z M43.385103,41.0215053 L46.800142,41.0215053 C49.2376542,41.0215053 50.9641994,40.3655874 51.9798295,39.0537319 C53.0716319,37.6572405 53.6175248,35.7825848 53.6175248,33.4297084 C53.6175248,31.220713 53.0800953,29.4857043 52.0052202,28.2246303 C51.3535242,27.4544441 50.5748861,26.9275939 49.6692827,26.6440639 C48.7636792,26.3605338 47.4010626,26.2187709 45.581392,26.2187709 L43.385103,26.2187709 L43.385103,41.0215053 Z" id="D" fill="#000000"></path></g></g></svg>
</div>
<code style="font-size:11px;">&nbsp;col_is_date()</code>
</div></td>
<td class="gt_row gt_left" headers="columns" style="border-left-width: 1px; border-left-style: dashed; border-left-color: #E5E5E5; height: 40px"><div aria-label="DT_START" data-balloon-pos="left">
<p><span style="color:purple;"><code>▮</code></span><code>DT_START</code></p>
</div></td>
<td class="gt_row gt_left" headers="values" style="border-left-width: 1px; border-left-style: dashed; border-left-color: #E5E5E5; height: 40px">—</td>
<td class="gt_row gt_center" headers="precon" style="border-left-width: 1px; border-left-style: solid; border-left-color: #D3D3D3; background-color: #FCFCFC; height: 40px"><span style="background:transparent;padding:0;color:#333333;vertical-align:middle;font-size:10px;border:none;border-radius:4px;" aria-label="No modifications of the table." data-balloon-pos="left">
<svg width="25px" height="25px" viewbox="0 0 25 25" version="1.1" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" style="vertical-align: middle;"><g id="unchanged" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="unchanged" transform="translate(0.500000, 0.570147)"><rect id="Rectangle" x="0.125132506" y="0" width="23.749735" height="23.7894737"></rect><path d="M5.80375046,8.18194736 C3.77191832,8.18194736 2.11875046,9.83495328 2.11875046,11.8669474 C2.11875046,13.8989414 3.77191832,15.5519474 5.80375046,15.5519474 C7.8355826,15.5519474 9.48875046,13.8989414 9.48875046,11.8669474 C9.48875046,9.83495328 7.83552863,8.18194736 5.80375046,8.18194736 Z M5.80375046,14.814915 C4.17821997,14.814915 2.85578285,13.4924778 2.85578285,11.8669474 C2.85578285,10.2414169 4.17821997,8.91897975 5.80375046,8.91897975 C7.42928095,8.91897975 8.75171807,10.2414169 8.75171807,11.8669474 C8.75171807,13.4924778 7.42928095,14.814915 5.80375046,14.814915 Z" id="Shape" fill="#000000" fill-rule="nonzero"></path><path d="M13.9638189,8.699335 C13.9364621,8.70430925 13.9091059,8.71176968 13.8842359,8.71923074 C13.7822704,8.73663967 13.6877654,8.77643115 13.6056956,8.83860518 L10.2433156,11.3852598 C10.0766886,11.5046343 9.97720993,11.6986181 9.97720993,11.9025491 C9.97720993,12.1064807 10.0766886,12.3004639 10.2433156,12.4198383 L13.6056956,14.966493 C13.891697,15.1803725 14.2970729,15.1231721 14.5109517,14.8371707 C14.7248313,14.5511692 14.6676309,14.145794 14.3816294,13.9319145 L12.5313257,12.5392127 L21.8812495,12.5392127 L21.8812495,11.2658854 L12.5313257,11.2658854 L14.3816294,9.87318364 C14.6377872,9.71650453 14.7497006,9.40066014 14.6477351,9.11714553 C14.5482564,8.83363156 14.262255,8.65954352 13.9638189,8.699335 Z" id="arrow" fill="#000000" transform="translate(15.929230, 11.894737) rotate(-180.000000) translate(-15.929230, -11.894737) "></path></g></g></svg></span></td>
<td class="gt_row gt_center" headers="eval_sym" style="border-right-width: 1px; border-right-style: solid; border-right-color: #D3D3D3; background-color: #FCFCFC; height: 40px"><span style="background:transparent;padding:5px;color:#4CA64C;vertical-align:middle;font-size:15px;border:none;" aria-label="No evaluation issues." data-balloon-pos="left">✓</span></td>
<td class="gt_row gt_right" headers="units" style="font-size: 11px; height: 40px"><code>1</code></td>
<td class="gt_row gt_right" headers="n_pass" style="border-left-width: 1px; border-left-style: dashed; border-left-color: #E5E5E5; font-size: 11px; height: 40px">
<code>0</code><br><code>0</code>
</td>
<td class="gt_row gt_right" headers="n_fail" style="border-left-width: 1px; border-left-style: dashed; border-left-color: #E5E5E5; font-size: 11px; height: 40px">
<code>1</code><br><code>1</code>
</td>
<td class="gt_row gt_center" headers="W" style="border-left-width: 1px; border-left-style: solid; border-left-color: #D3D3D3; background-color: #FCFCFC; height: 40px">—</td>
<td class="gt_row gt_center" headers="S" style="background-color: #FCFCFC; height: 40px"><span style="color: #CF142B;">●</span></td>
<td class="gt_row gt_center" headers="N" style="border-right-width: 1px; border-right-style: solid; border-right-color: #D3D3D3; background-color: #FCFCFC; height: 40px">—</td>
<td class="gt_row gt_center" headers="extract" style="height: 40px">—</td>
</tr>
<tr class="even">
<td class="gt_row gt_left" headers="status_color" style="background-color: #CF142B; height: 40px"><br></td>
<td class="gt_row gt_right" headers="i" style="color: #666666; font-size: 13px; font-weight: bold; height: 40px">6</td>
<td class="gt_row gt_left" headers="type" style="height: 40px"><div aria-label="Expect that column `DT_END` is of type: Date. " data-balloon-pos="right" style="width:fit-content;">
<div style="margin:0;padding:0;display:inline-block;height:30px;vertical-align:middle;">
<svg width="30px" height="30px" viewbox="0 0 67 67" version="1.1" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink"><title>
col_is_date
</title>
<g id="All-Icons" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="col_is_date" transform="translate(0.000000, 0.379310)"><path d="M56.712234,1.01466935 C59.1975153,1.01466935 61.4475153,2.02202867 63.076195,3.65070832 C64.7048747,5.27938798 65.712234,7.52938798 65.712234,10.0146694 L65.712234,10.0146694 L65.712234,65.0146694 L10.712234,65.0146694 C8.22695259,65.0146694 5.97695259,64.00731 4.34827294,62.3786304 C2.71959328,60.7499507 1.71223397,58.4999507 1.71223397,56.0146694 L1.71223397,56.0146694 L1.71223397,10.0146694 C1.71223397,7.52938798 2.71959328,5.27938798 4.34827294,3.65070832 C5.97695259,2.02202867 8.22695259,1.01466935 10.712234,1.01466935 L10.712234,1.01466935 Z" id="rectangle" stroke="#000000" stroke-width="2" fill="#FFFFFF"></path><rect id="column" fill="#000000" x="12.2117153" y="12.0146694" width="20" height="42" rx="1"></rect><path d="M40.7190873,43.0146694 L40.7190873,24.2256069 L46.9651811,24.2256069 C48.8271696,24.2256069 50.3315491,24.4329616 51.4783647,24.8476772 C52.6251803,25.2623928 53.6175206,25.9648597 54.4554155,26.955099 C55.7841981,28.5293257 56.4485795,30.6028726 56.4485795,33.1758022 C56.4485795,36.2988647 55.6233925,38.7194134 53.9729936,40.4375209 C52.3225947,42.1556285 49.9993758,43.0146694 47.003267,43.0146694 L40.7190873,43.0146694 Z M43.385103,41.0215053 L46.800142,41.0215053 C49.2376542,41.0215053 50.9641994,40.3655874 51.9798295,39.0537319 C53.0716319,37.6572405 53.6175248,35.7825848 53.6175248,33.4297084 C53.6175248,31.220713 53.0800953,29.4857043 52.0052202,28.2246303 C51.3535242,27.4544441 50.5748861,26.9275939 49.6692827,26.6440639 C48.7636792,26.3605338 47.4010626,26.2187709 45.581392,26.2187709 L43.385103,26.2187709 L43.385103,41.0215053 Z" id="D" fill="#000000"></path></g></g></svg>
</div>
<code style="font-size:11px;">&nbsp;col_is_date()</code>
</div></td>
<td class="gt_row gt_left" headers="columns" style="border-left-width: 1px; border-left-style: dashed; border-left-color: #E5E5E5; height: 40px"><div aria-label="DT_END" data-balloon-pos="left">
<p><span style="color:purple;"><code>▮</code></span><code>DT_END</code></p>
</div></td>
<td class="gt_row gt_left" headers="values" style="border-left-width: 1px; border-left-style: dashed; border-left-color: #E5E5E5; height: 40px">—</td>
<td class="gt_row gt_center" headers="precon" style="border-left-width: 1px; border-left-style: solid; border-left-color: #D3D3D3; background-color: #FCFCFC; height: 40px"><span style="background:transparent;padding:0;color:#333333;vertical-align:middle;font-size:10px;border:none;border-radius:4px;" aria-label="No modifications of the table." data-balloon-pos="left">
<svg width="25px" height="25px" viewbox="0 0 25 25" version="1.1" xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" style="vertical-align: middle;"><g id="unchanged" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="unchanged" transform="translate(0.500000, 0.570147)"><rect id="Rectangle" x="0.125132506" y="0" width="23.749735" height="23.7894737"></rect><path d="M5.80375046,8.18194736 C3.77191832,8.18194736 2.11875046,9.83495328 2.11875046,11.8669474 C2.11875046,13.8989414 3.77191832,15.5519474 5.80375046,15.5519474 C7.8355826,15.5519474 9.48875046,13.8989414 9.48875046,11.8669474 C9.48875046,9.83495328 7.83552863,8.18194736 5.80375046,8.18194736 Z M5.80375046,14.814915 C4.17821997,14.814915 2.85578285,13.4924778 2.85578285,11.8669474 C2.85578285,10.2414169 4.17821997,8.91897975 5.80375046,8.91897975 C7.42928095,8.91897975 8.75171807,10.2414169 8.75171807,11.8669474 C8.75171807,13.4924778 7.42928095,14.814915 5.80375046,14.814915 Z" id="Shape" fill="#000000" fill-rule="nonzero"></path><path d="M13.9638189,8.699335 C13.9364621,8.70430925 13.9091059,8.71176968 13.8842359,8.71923074 C13.7822704,8.73663967 13.6877654,8.77643115 13.6056956,8.83860518 L10.2433156,11.3852598 C10.0766886,11.5046343 9.97720993,11.6986181 9.97720993,11.9025491 C9.97720993,12.1064807 10.0766886,12.3004639 10.2433156,12.4198383 L13.6056956,14.966493 C13.891697,15.1803725 14.2970729,15.1231721 14.5109517,14.8371707 C14.7248313,14.5511692 14.6676309,14.145794 14.3816294,13.9319145 L12.5313257,12.5392127 L21.8812495,12.5392127 L21.8812495,11.2658854 L12.5313257,11.2658854 L14.3816294,9.87318364 C14.6377872,9.71650453 14.7497006,9.40066014 14.6477351,9.11714553 C14.5482564,8.83363156 14.262255,8.65954352 13.9638189,8.699335 Z" id="arrow" fill="#000000" transform="translate(15.929230, 11.894737) rotate(-180.000000) translate(-15.929230, -11.894737) "></path></g></g></svg></span></td>
<td class="gt_row gt_center" headers="eval_sym" style="border-right-width: 1px; border-right-style: solid; border-right-color: #D3D3D3; background-color: #FCFCFC; height: 40px"><span style="background:transparent;padding:5px;color:#4CA64C;vertical-align:middle;font-size:15px;border:none;" aria-label="No evaluation issues." data-balloon-pos="left">✓</span></td>
<td class="gt_row gt_right" headers="units" style="font-size: 11px; height: 40px"><code>1</code></td>
<td class="gt_row gt_right" headers="n_pass" style="border-left-width: 1px; border-left-style: dashed; border-left-color: #E5E5E5; font-size: 11px; height: 40px">
<code>0</code><br><code>0</code>
</td>
<td class="gt_row gt_right" headers="n_fail" style="border-left-width: 1px; border-left-style: dashed; border-left-color: #E5E5E5; font-size: 11px; height: 40px">
<code>1</code><br><code>1</code>
</td>
<td class="gt_row gt_center" headers="W" style="border-left-width: 1px; border-left-style: solid; border-left-color: #D3D3D3; background-color: #FCFCFC; height: 40px">—</td>
<td class="gt_row gt_center" headers="S" style="background-color: #FCFCFC; height: 40px"><span style="color: #CF142B;">●</span></td>
<td class="gt_row gt_center" headers="N" style="border-right-width: 1px; border-right-style: solid; border-right-color: #D3D3D3; background-color: #FCFCFC; height: 40px">—</td>
<td class="gt_row gt_center" headers="extract" style="height: 40px">—</td>
</tr>
</tbody>
<tfoot class="gt_sourcenotes"><tr class="odd">
<td colspan="14" class="gt_sourcenote">
<span style="background-color:#FFF;color:#444;padding:0.5em 0.5em;position:inherit;text-transform:uppercase;margin-left:10px;border:solid 1px #999999;font-variant-numeric:tabular-nums;border-radius:0;padding:2px 10px 2px 10px;padding:2px 10px 2px 10px;">2024-06-18 18:23:37 +07</span> <span style="background-color:#FFF;color:#444;padding:0.5em 0.5em;position:inherit;margin:5px 1px 5px 0;border:solid 1px #999999;font-variant-numeric:tabular-nums;border-radius:0;padding:2px 10px 2px 10px;">&lt; 1 s</span> <span style="background-color:#FFF;color:#444;padding:0.5em 0.5em;position:inherit;text-transform:uppercase;margin:5px 1px 5px -1px;border:solid 1px #999999;font-variant-numeric:tabular-nums;border-radius:0;padding:2px 10px 2px 10px;">2024-06-18 18:23:38 +07</span>
</td>
</tr></tfoot>
</table>
</div>
</div>
</div>
</div>
<p>Cool! Không chỉ kiểm tra được tính đúng đắn của dữ liệu, cũng có thể xác định được biến nào không tuân theo quy tắc đặt tên.</p>
</section><section id="data-discoverability" class="level1"><h1>Data Discoverability</h1>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb6-1">cols_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(trip_data)</span>
<span id="cb6-2">cols_data_split <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">strsplit</span>(cols_data,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>)</span>
<span id="cb6-3">cols_components <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb6-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">variable =</span> cols_data,</span>
<span id="cb6-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">level1 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vapply</span>(cols_data_split, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">FUN =</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x) x[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">FUN.VALUE =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">character</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)),</span>
<span id="cb6-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">level2 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vapply</span>(cols_data_split, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">FUN =</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x) x[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">FUN.VALUE =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">character</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb6-7">)</span>
<span id="cb6-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(cols_components)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>              variable level1      level2
1              ID_TRIP     ID        TRIP
2 CAT_DESTINATION_CITY    CAT DESTINATION
3             DT_START     DT       START
4               DT_END     DT         END
5       N_DURATION_DAY      N    DURATION
6    CAT_TRAVELER_NAME    CAT    TRAVELER</code></pre>
</div>
</div>
<p>Đây là một cách để xây dựng metadata, chúng ta có thể touch một cách interactive với:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(DT)</span>
<span id="cb8-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">datatable</span>(cols_components,  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">filter =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'top'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">clear =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>))</span></code></pre></div>
<div class="cell-output-display">
<div class="datatables html-widget html-fill-item" id="htmlwidget-ba7de8f3d7e8fea2d77b" style="width:100%;height:auto;"></div>
<script type="application/json" data-for="htmlwidget-ba7de8f3d7e8fea2d77b">{"x":{"filter":"top","vertical":false,"filterHTML":"<tr>\n  <td><\/td>\n  <td data-type=\"character\" style=\"vertical-align: top;\">\n    <div class=\"form-group\" style=\"margin-bottom: auto;\">\n      <input type=\"search\" placeholder=\"All\" class=\"form-control\" style=\"width: 100%;\"/>\n    <\/div>\n  <\/td>\n  <td data-type=\"character\" style=\"vertical-align: top;\">\n    <div class=\"form-group\" style=\"margin-bottom: auto;\">\n      <input type=\"search\" placeholder=\"All\" class=\"form-control\" style=\"width: 100%;\"/>\n    <\/div>\n  <\/td>\n  <td data-type=\"character\" style=\"vertical-align: top;\">\n    <div class=\"form-group\" style=\"margin-bottom: auto;\">\n      <input type=\"search\" placeholder=\"All\" class=\"form-control\" style=\"width: 100%;\"/>\n    <\/div>\n  <\/td>\n<\/tr>","data":[["1","2","3","4","5","6","7","8","9","10","11","12","13"],["ID_TRIP","CAT_DESTINATION_CITY","DT_START","DT_END","N_DURATION_DAY","CAT_TRAVELER_NAME","VAL_AGE_TRAVELER","IND_GENDER_TRAVELER","CAT_TRAVELER_NATIONALITY","CAT_ACCOMMODATION_TYPE","AMT_ACCOMMODATION_COST","CAT_TRANSPORTATION_TYPE","AMT_TRANSPORTATION_COST"],["ID","CAT","DT","DT","N","CAT","VAL","IND","CAT","CAT","AMT","CAT","AMT"],["TRIP","DESTINATION","START","END","DURATION","TRAVELER","AGE","GENDER","TRAVELER","ACCOMMODATION","ACCOMMODATION","TRANSPORTATION","TRANSPORTATION"]],"container":"<table class=\"display\">\n  <thead>\n    <tr>\n      <th> <\/th>\n      <th>variable<\/th>\n      <th>level1<\/th>\n      <th>level2<\/th>\n    <\/tr>\n  <\/thead>\n<\/table>","options":{"columnDefs":[{"orderable":false,"targets":0},{"name":" ","targets":0},{"name":"variable","targets":1},{"name":"level1","targets":2},{"name":"level2","targets":3}],"order":[],"autoWidth":false,"orderClasses":false,"orderCellsTop":true}},"evals":[],"jsHooks":[]}</script>
</div>
</div>
<p>Cũng có thể visualize thành một tree như bên dưới:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(collapsibleTree)</span>
<span id="cb9-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">collapsibleTree</span>(cols_components, </span>
<span id="cb9-3">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hierarchy =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"level"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb9-4">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nodeSize =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"leafCount"</span></span>
<span id="cb9-5">                )</span></code></pre></div>
<div class="cell-output-display">
<div class="collapsibleTree html-widget html-fill-item" id="htmlwidget-a3f4fa9ad42819975bfe" style="width:100%;height:464px;"></div>
<script type="application/json" data-for="htmlwidget-a3f4fa9ad42819975bfe">{"x":{"data":{"name":"cols_components","SizeOfNode":34.41,"children":[{"name":"ID","SizeOfNode":9.93,"children":[{"name":"TRIP","SizeOfNode":9.93}]},{"name":"CAT","SizeOfNode":19.87,"children":[{"name":"DESTINATION","SizeOfNode":9.93},{"name":"TRAVELER","SizeOfNode":9.93},{"name":"ACCOMMODATION","SizeOfNode":9.93},{"name":"TRANSPORTATION","SizeOfNode":9.93}]},{"name":"DT","SizeOfNode":14.05,"children":[{"name":"START","SizeOfNode":9.93},{"name":"END","SizeOfNode":9.93}]},{"name":"N","SizeOfNode":9.93,"children":[{"name":"DURATION","SizeOfNode":9.93}]},{"name":"VAL","SizeOfNode":9.93,"children":[{"name":"AGE","SizeOfNode":9.93}]},{"name":"IND","SizeOfNode":9.93,"children":[{"name":"GENDER","SizeOfNode":9.93}]},{"name":"AMT","SizeOfNode":14.05,"children":[{"name":"ACCOMMODATION","SizeOfNode":9.93},{"name":"TRANSPORTATION","SizeOfNode":9.93}]}]},"options":{"hierarchy":["level1","level2"],"input":null,"attribute":"leafCount","linkLength":null,"fontSize":10,"tooltip":false,"collapsed":true,"zoomable":true,"margin":{"top":20,"bottom":20,"left":124.41,"right":95},"fill":"lightsteelblue"}},"evals":[],"jsHooks":[]}</script>
</div>
</div>
<p>Đây là cách xem từ kiểu dữ liệu -&gt; chủ thể, chúng ta cũng có thể làm ngược lại:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">collapsibleTree</span>(cols_components, </span>
<span id="cb10-2">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hierarchy =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"level"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)),</span>
<span id="cb10-3">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nodeSize =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"leafCount"</span></span>
<span id="cb10-4">                )</span></code></pre></div>
<div class="cell-output-display">
<div class="collapsibleTree html-widget html-fill-item" id="htmlwidget-a17659a449c3153b0a94" style="width:100%;height:464px;"></div>
<script type="application/json" data-for="htmlwidget-a17659a449c3153b0a94">{"x":{"data":{"name":"cols_components","SizeOfNode":34.41,"children":[{"name":"TRIP","SizeOfNode":9.93,"children":[{"name":"ID","SizeOfNode":9.93}]},{"name":"DESTINATION","SizeOfNode":9.93,"children":[{"name":"CAT","SizeOfNode":9.93}]},{"name":"START","SizeOfNode":9.93,"children":[{"name":"DT","SizeOfNode":9.93}]},{"name":"END","SizeOfNode":9.93,"children":[{"name":"DT","SizeOfNode":9.93}]},{"name":"DURATION","SizeOfNode":9.93,"children":[{"name":"N","SizeOfNode":9.93}]},{"name":"TRAVELER","SizeOfNode":9.93,"children":[{"name":"CAT","SizeOfNode":9.93}]},{"name":"AGE","SizeOfNode":9.93,"children":[{"name":"VAL","SizeOfNode":9.93}]},{"name":"GENDER","SizeOfNode":9.93,"children":[{"name":"IND","SizeOfNode":9.93}]},{"name":"ACCOMMODATION","SizeOfNode":14.05,"children":[{"name":"CAT","SizeOfNode":9.93},{"name":"AMT","SizeOfNode":9.93}]},{"name":"TRANSPORTATION","SizeOfNode":14.05,"children":[{"name":"CAT","SizeOfNode":9.93},{"name":"AMT","SizeOfNode":9.93}]}]},"options":{"hierarchy":["level2","level1"],"input":null,"attribute":"leafCount","linkLength":null,"fontSize":10,"tooltip":false,"collapsed":true,"zoomable":true,"margin":{"top":20,"bottom":20,"left":124.41,"right":40},"fill":"lightsteelblue"}},"evals":[],"jsHooks":[]}</script>
</div>
</div>
<p>Bộ dữ liệu mình sử dụng khá nghèo nàn và tập trung về một chủ thể duy nhất là <code>TRIP</code>, nên khả năng minh họa không được phong phú 😂. Ngoài ra, việc đặt tên như thế cũng giúp ta dễ dàng gọi biến ở IDE.</p>
</section><section id="data-wrangling" class="level1"><h1>Data Wrangling</h1>
<p>Tương tự, với việc sử dụng một bộ từ điển có hệ thống, lớp lang cũng support chúng ta trong việc biến đổi dữ liệu. Ví dụ chúng ta có thể tận dụng “select helpers” trong gói <code>dplyr</code>:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb11-2">trip_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>(trip_data)</span>
<span id="cb11-3">trip_data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">if_any</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">everything</span>(), <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(.))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb11-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(CAT_TRAVELER_NATIONALITY) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(</span>
<span id="cb11-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">across</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">starts_with</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DT_"</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(min,max))</span>
<span id="cb11-8">  )</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 42 × 5
   CAT_TRAVELER_NATIONALITY DT_START_1 DT_START_2 DT_END_1   DT_END_2 
   &lt;chr&gt;                    &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;    
 1 American                 1/1/2023   9/15/2022  1/1/2023   9/22/2022
 2 Australian               11/20/2023 9/5/2022   11/30/2023 9/14/2022
 3 Brazil                   4/3/2024   4/3/2024   4/10/2024  4/10/2024
 4 Brazilian                1/15/2024  8/1/2023   1/12/2024  8/10/2023
 5 British                  1/1/2025   8/20/2022  1/15/2023  9/2/2022 
 6 Cambodia                 9/10/2022  9/10/2022  9/15/2022  9/15/2022
 7 Canada                   7/1/2022   9/1/2022   7/10/2022  9/10/2022
 8 Canadian                 1/2/2023   8/15/2023  1/9/2023   8/22/2023
 9 China                    5/8/2023   5/8/2023   5/14/2023  5/14/2023
10 Chinese                  11/11/2022 9/1/2023   11/21/2022 9/8/2023 
# ℹ 32 more rows</code></pre>
</div>
</div>
</section><section id="other-languages" class="level1"><h1>Other languages</h1>
<section id="generating-sql" class="level2"><h2 class="anchored" data-anchor-id="generating-sql">Generating SQL</h2>
<p>Sử dụng R để generate SQL query</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dbplyr)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>
Attaching package: 'dbplyr'</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>The following objects are masked from 'package:dplyr':

    ident, sql</code></pre>
</div>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(RSQLite)</span>
<span id="cb16-2">df_mem <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">memdb_frame</span>(trip_data, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"example_table"</span>)</span>
<span id="cb16-3"></span>
<span id="cb16-4">df_mem <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(CAT_TRAVELER_NATIONALITY) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize_at</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vars</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">starts_with</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N_"</span>)), mean, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">show_query</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;SQL&gt;
SELECT `CAT_TRAVELER_NATIONALITY`, AVG(`N_DURATION_DAY`) AS `N_DURATION_DAY`
FROM `example_table`
GROUP BY `CAT_TRAVELER_NATIONALITY`</code></pre>
</div>
</div>
</section><section id="r---base-data.table" class="level2"><h2 class="anchored" data-anchor-id="r---base-data.table">R - <code>base</code> &amp; <code>data.table</code>
</h2>
<p>sử dụng <code><a href="https://rdrr.io/r/base/grep.html">base::grep</a></code> để tìm tất cả các columns bắt đầu bằng <code>AMT_</code></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb18-1">cols_n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^AMT_"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(trip_data), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb18-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(cols_n)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "AMT_ACCOMMODATION_COST"  "AMT_TRANSPORTATION_COST"</code></pre>
</div>
</div>
<p>sử dụng vector để lưu các cột chúng ta muốn group by:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb20-1">cols_grp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CAT_TRAVELER_NATIONALITY"</span>)</span></code></pre></div>
</div>
<p>chúng ta có thể dùng vector này trong <code><a href="https://rdrr.io/r/stats/aggregate.html">stats::aggregate</a></code></p>
<p>hoặc trong <code>data.table</code></p>
</section><section id="python-pandas" class="level2"><h2 class="anchored" data-anchor-id="python-pandas">python <code>pandas</code>
</h2>
<p>tương tự trong python, sử dụng list comprehension:</p>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode numberSource markdown number-lines code-with-copy"><code class="sourceCode markdown"><span id="cb21-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{python}</span></span>
<span id="cb21-2"></span>
<span id="cb21-3"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">import pandas as pd</span></span>
<span id="cb21-4"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">cols_n   = [vbl for vbl in trip_data.columns if vbl[0:2] == 'AMT_']</span></span>
<span id="cb21-5"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">cols_grp = ["CAT_TRAVELER_NATIONALITY"]</span></span>
<span id="cb21-6"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">trip_data.groupby(cols_grp)[cols_n].sum()</span></span>
<span id="cb21-7"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
</section></section><section id="updates-by-emily" class="level1"><h1>Updates by Emily</h1>
<section id="concept-map" class="level2"><h2 class="anchored" data-anchor-id="concept-map">Concept Map</h2>
<div class="cell" data-layout-align="default">
<div class="cell-output-display">
<div>
<p></p><figure class="figure"></figure><p></p>
<div>
<pre class="mermaid mermaid-js">%%{init: {'theme':'dark'}}%%
flowchart LR
  A(dataframe)-- has --&gt; B(columns)
  A(dataframe)-- has --&gt; C(names)
  B -- have --&gt; D(data types)
  B -- have --&gt; E(units)
  B -- have --&gt; F(meaning)
  C -- should encode --&gt; D
  C -- should encode --&gt; E
  C -- should encode --&gt; F
  C -- can support --&gt; G(validation)
  C -- explained in --&gt; H(documentation)
  G -- should check consistency of --&gt; C
  G -- should check consistency of --&gt; H
  H --&gt; I(data dictionary)
  H --&gt; K(ERD)
</pre>
</div>
<p></p>
</div>
</div>
</div>
</section><section id="new-package-dec-2020" class="level2"><h2 class="anchored" data-anchor-id="new-package-dec-2020">New Package (Dec 2020)</h2>
<p><a href="https://emilyriederer.github.io/convo/articles/quickstart-guide.html"><code>convo</code></a> là một thư viện released bởi Emily phục vụ cho việc quản lý controlled vocabulary:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb22-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(convo)</span></code></pre></div>
</div>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>vocab.yaml</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode numberSource yaml number-lines code-with-copy"><code class="sourceCode yaml"><span id="cb23-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">level1</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb23-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ID</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb23-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Unique identifier</span></span>
<span id="cb23-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">valid</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb23-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> col_vals_not_null()</span></span>
<span id="cb23-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> col_is_numeric()</span></span>
<span id="cb23-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> col_vals_between(1000, 99999)</span></span>
<span id="cb23-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IND</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb23-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Binary indicator</span></span>
<span id="cb23-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">valid</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb23-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> col_is_numeric()</span></span>
<span id="cb23-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> col_vals_in_set(c(0,1))</span></span>
<span id="cb23-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb23-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">when</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> SUM</span></span>
<span id="cb23-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">then</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'N'</span></span>
<span id="cb23-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">when</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> AVG</span></span>
<span id="cb23-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">then</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> P</span></span>
<span id="cb23-18"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AMT</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb23-19"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Non-negative, summable quantity</span></span>
<span id="cb23-20"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">valid</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb23-21"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> col_is_numeric()</span></span>
<span id="cb23-22"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> col_vals_gte(0)</span></span>
<span id="cb23-23"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">VAL</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb23-24"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Value</span></span>
<span id="cb23-25"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">valid</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb23-26"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> col_is_numeric()</span></span>
<span id="cb23-27"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb23-28"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">when</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> AVG</span></span>
<span id="cb23-29"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">then</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> VALAV</span></span></code></pre></div>
</div>
</div>
</section><section id="new-package-april-2021" class="level2"><h2 class="anchored" data-anchor-id="new-package-april-2021">New Package (April 2021)</h2>
<p><a href="https://emilyriederer.github.io/dbtplyr/#!/overview"><code>dbtplyr</code></a> là một package port tính năng “select helpers” của <code>dplyr</code> sang <code>dbt</code>.</p>


<!-- -->

</section></section> ]]></description>
  <category>data quality</category>
  <category>name convention</category>
  <category>controlled vocabulary</category>
  <category>metadata</category>
  <guid>https://lktuan.github.io/blog/2024-06-05-cnac/</guid>
  <pubDate>Tue, 04 Jun 2024 17:00:00 GMT</pubDate>
  <media:content url="https://lktuan.github.io/blog/2024-06-05-cnac/pepe.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Storytelling with Data: Let’s Practice, Improve this table!</title>
  <dc:creator>Tuan Le Khac</dc:creator>
  <link>https://lktuan.github.io/blog/2024-05-22-swd-p2-improve-table/</link>
  <description><![CDATA[ 





<section id="motivation" class="level1">
<h1>1. Motivation</h1>
<p>Lấy cảm hứng từ bài <a href="https://rpubs.com/chidungkt/1139405">post</a> của thầy Nguyễn Chí Dũng về việc giải các exercise thuộc Chương 2 cuốn sách <strong>Storytelling with Data: Let’s Practice</strong> của tác giả <a href="https://www.linkedin.com/in/colenussbaumer/">Cole Nussbaumer Knaflic</a> sử dụng R, mình muốn cải thiện 1 bảng biểu nhưng sử dụng Python (trong cuốn sách gốc, tác giả sử dụng Excel để makeover các graph).</p>
<p>Đây là một cuốn sách hay về chủ để visualization, dành cho những người sử dụng biểu đồ nhiều để communicate trong công việc. Cụm từ “storytelling” đang được sử dụng rất nhiều, thậm chí như là một buzzword, một keyword cần có trong CV của mỗi người làm data. Đối với mình, “storytelling” chỉ nên được sử dụng khi bạn đã có sẵn các kết quả phân tích, được thực hiện một cách khoa học, và bạn muốn truyền tải nó tới business unit/management một cách hiệu quả. “Storytelling” nên không bao giờ là động cơ để bạn thực hiện một phân tích (thứ thay vào đó nên là một <strong>câu hỏi</strong>), thiên kiến sẽ ảnh hưởng tới phương pháp thực hiện, và rất dễ nảy sinh ngụy biện khi kết luận. Hãy xem bài viết này của <a href="https://www.linkedin.com/pulse/data-professionals-beware-storytelling-keith-mcnulty/">Keith McNulty</a> và <a href="https://www.linkedin.com/posts/keith-mcnulty_my-most-hated-word-in-data-science-activity-7017097392759918592-2Atc/">discussion</a> trên Linked In.</p>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="1">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 100.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lktuan.github.io/blog/2024-05-22-swd-p2-improve-table/swd_chap5.png" class="img-fluid figure-img" style="width:100.0%"></p>
<figcaption>Photo credit to <a href="https://www.storytellingwithdata.com/blog/2019/8/27/lets-practice">swd</a></figcaption>
</figure>
</div>
</div>
</div>
</div>
</section>
<section id="lets-practice" class="level1">
<h1>2. Let’s Practice</h1>
<p>Mình đang học <code>{ggplot2}</code> trên R để thực hành hình ảnh hóa dữ liệu, tuy nhiên có vẻ package này (và tương ứng là <code>plotnine</code> trên Python không phù hợp cho báo cáo bảng). Trong bài post, thầy Dũng cũng sử dụng một library khác là <code>kableExtra</code> (tham khảo <a href="https://cran.r-project.org/web/packages/kableExtra/vignettes/awesome_table_in_html.html">đây</a>).</p>
<p>Sau một lúc google thì có vẻ có một package của Python phù hợp để làm nhiệm vụ này, đó là <code>great_tables</code> (tham khảo <a href="https://posit-dev.github.io/great-tables/articles/intro.html">đây</a>). Package này cũng được khuyến khích sử dụng cho mục đích communication bởi <a href="https://www.emilyriederer.com/post/py-rgo/#the-stack">Emily Riederer</a>.</p>
<section id="import-the-data" class="level2">
<h2 class="anchored" data-anchor-id="import-the-data">2.1. Import the data</h2>
<p>Okay đầu tiên cần import và làm sạch dữ liệu. Bảng có sẵn trong file Exercise có vẻ dùng để báo cáo hơn là lưu trữ dữ liệu.</p>
<div id="562db42c" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"></span>
<span id="cb1-3">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_excel(</span>
<span id="cb1-4">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2.1 EXERCISE.xlsx"</span>,</span>
<span id="cb1-5">  sheet_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"EXERCISE 2.1"</span>,</span>
<span id="cb1-6">  skiprows<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span></span>
<span id="cb1-7">)</span>
<span id="cb1-8"></span>
<span id="cb1-9">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data.drop(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Unnamed: 0'</span>, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-10">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data.rename(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{ <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tier"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tier"</span></span>
<span id="cb1-11">                    ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"# of Accounts"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"no_of_account"</span></span>
<span id="cb1-12">                    ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"% Accounts"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pct_of_account"</span></span>
<span id="cb1-13">                    ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Revenue ($M)"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"revenue"</span></span>
<span id="cb1-14">                    ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"% Revenue"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pct_of_revenue"</span>})</span></code></pre></div>
</div>
</section>
<section id="data-manipulation" class="level2">
<h2 class="anchored" data-anchor-id="data-manipulation">2.2. Data manipulation</h2>
<p>Yep giờ ta đã có 1 bảng data khá sạch, tuy nhiên lưu ý là bảng đang không thể hiện toàn bộ dữ liệu (total của <code>pct_of_account</code> chỉ là <code>81.86%</code>). Ta cần tính toán thêm <code>All other</code> và <code>Grand Total</code> (lý do là mình chưa tìm thấy function hiển thị Grand Total với package đang sử dụng, ngay cả trong ví dụ <a href="https://posit-dev.github.io/great-tables/blog/pycon-2024-great-tables-are-possible/">này</a>, GT cũng sử dụng data đã có sẵn Grand Total).</p>
<div id="19805bdd" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1">all_other_pct_of_account <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pct_of_account"</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()</span>
<span id="cb2-2">all_other_no_of_account <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">round</span>(all_other_pct_of_account <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pct_of_account"</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"no_of_account"</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>],<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb2-3"></span>
<span id="cb2-4">all_other_pct_of_revenue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pct_of_revenue"</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()</span>
<span id="cb2-5">all_other_revenue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">round</span>(all_other_pct_of_revenue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pct_of_revenue"</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"revenue"</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>],<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb2-6"></span>
<span id="cb2-7">all_other <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.Series({ <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tier"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"All other"</span>,</span>
<span id="cb2-8">                        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"no_of_account"</span>: all_other_no_of_account,</span>
<span id="cb2-9">                        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pct_of_account"</span>: all_other_pct_of_account,</span>
<span id="cb2-10">                        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"revenue"</span>:all_other_revenue,</span>
<span id="cb2-11">                        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pct_of_revenue"</span>: all_other_pct_of_revenue})</span>
<span id="cb2-12"></span>
<span id="cb2-13">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.concat([data, all_other.to_frame().T], ignore_index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb2-14"></span>
<span id="cb2-15">data.loc[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(data.index)] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()</span>
<span id="cb2-16">data.loc[data.index[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tier'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Grand Total'</span></span></code></pre></div>
</div>
<p>Show the data:</p>
<div id="f85da960" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> great_tables <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> GT</span>
<span id="cb3-2"></span>
<span id="cb3-3">( </span>
<span id="cb3-4">  GT(data)</span>
<span id="cb3-5">  .fmt_number(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"no_of_account"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pct_of_account"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"revenue"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pct_of_revenue"</span>],decimals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="3">
<div>
<div id="craneejhel" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>
#craneejhel table {
          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
          -webkit-font-smoothing: antialiased;
          -moz-osx-font-smoothing: grayscale;
        }

#craneejhel thead, tbody, tfoot, tr, td, th { border-style: none; }
 tr { background-color: transparent; }
#craneejhel p { margin: 0; padding: 0; }
 #craneejhel .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; }
 #craneejhel .gt_caption { padding-top: 4px; padding-bottom: 4px; }
 #craneejhel .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }
 #craneejhel .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; }
 #craneejhel .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }
 #craneejhel .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }
 #craneejhel .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }
 #craneejhel .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }
 #craneejhel .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }
 #craneejhel .gt_column_spanner_outer:first-child { padding-left: 0; }
 #craneejhel .gt_column_spanner_outer:last-child { padding-right: 0; }
 #craneejhel .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; }
 #craneejhel .gt_spanner_row { border-bottom-style: hidden; }
 #craneejhel .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; }
 #craneejhel .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; }
 #craneejhel .gt_from_md> :first-child { margin-top: 0; }
 #craneejhel .gt_from_md> :last-child { margin-bottom: 0; }
 #craneejhel .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; }
 #craneejhel .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; }
 #craneejhel .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; }
 #craneejhel .gt_row_group_first td { border-top-width: 2px; }
 #craneejhel .gt_row_group_first th { border-top-width: 2px; }
 #craneejhel .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }
 #craneejhel .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }
 #craneejhel .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; text-align: left; }
 #craneejhel .gt_left { text-align: left; }
 #craneejhel .gt_center { text-align: center; }
 #craneejhel .gt_right { text-align: right; font-variant-numeric: tabular-nums; }
 #craneejhel .gt_font_normal { font-weight: normal; }
 #craneejhel .gt_font_bold { font-weight: bold; }
 #craneejhel .gt_font_italic { font-style: italic; }
 #craneejhel .gt_super { font-size: 65%; }
 #craneejhel .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; }
 #craneejhel .gt_asterisk { font-size: 100%; vertical-align: 0; }
 
</style>

<table class="gt_table table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<tbody>
<tr class="odd gt_col_headings">
<td id="tier" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" scope="col">tier</td>
<td id="no_of_account" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">no_of_account</td>
<td id="pct_of_account" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">pct_of_account</td>
<td id="revenue" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">revenue</td>
<td id="pct_of_revenue" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">pct_of_revenue</td>
</tr>
</tbody>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_left">A</td>
<td class="gt_row gt_right">77.00</td>
<td class="gt_row gt_right">0.07</td>
<td class="gt_row gt_right">4.67</td>
<td class="gt_row gt_right">0.25</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">A+</td>
<td class="gt_row gt_right">19.00</td>
<td class="gt_row gt_right">0.02</td>
<td class="gt_row gt_right">3.93</td>
<td class="gt_row gt_right">0.21</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left">B</td>
<td class="gt_row gt_right">338.00</td>
<td class="gt_row gt_right">0.31</td>
<td class="gt_row gt_right">5.98</td>
<td class="gt_row gt_right">0.32</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">C</td>
<td class="gt_row gt_right">425.00</td>
<td class="gt_row gt_right">0.39</td>
<td class="gt_row gt_right">2.80</td>
<td class="gt_row gt_right">0.15</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left">D</td>
<td class="gt_row gt_right">24.00</td>
<td class="gt_row gt_right">0.02</td>
<td class="gt_row gt_right">0.37</td>
<td class="gt_row gt_right">0.02</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">All other</td>
<td class="gt_row gt_right">205.00</td>
<td class="gt_row gt_right">0.19</td>
<td class="gt_row gt_right">0.94</td>
<td class="gt_row gt_right">0.05</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left">Grand Total</td>
<td class="gt_row gt_right">1,088.00</td>
<td class="gt_row gt_right">1.00</td>
<td class="gt_row gt_right">18.70</td>
<td class="gt_row gt_right">1.00</td>
</tr>
</tbody>
</table>


</div>
        
</div>
</div>
</div>
</section>
<section id="visualization" class="level2">
<h2 class="anchored" data-anchor-id="visualization">2.3. Visualization</h2>
<p>Được rồi, giờ ta có thể dùng <code>great_tables</code> để tiến hành visualize. Về cơ bản, chỉ cần khởi tạo một object <code>GT()</code> có thể mở rộng được, các element/hoặc format được định nghĩa về sau.</p>
<p>Dưới đây chúng ta trình bày một bảng đơn giản với tiêu đề, tên cột, cũng như định dạng lại dữ liệu.</p>
<div id="de0bc25c" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb4-1">(</span>
<span id="cb4-2">  GT(data)</span>
<span id="cb4-3">  .tab_header(title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"New client tier share"</span>)</span>
<span id="cb4-4">  .cols_label(</span>
<span id="cb4-5">    tier <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tier"</span>,</span>
<span id="cb4-6">    no_of_account <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"# of Accounts"</span>,</span>
<span id="cb4-7">    pct_of_account <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"% Accounts"</span>,</span>
<span id="cb4-8">    revenue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Revenue ($M)"</span>,</span>
<span id="cb4-9">    pct_of_revenue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"% Revenue"</span></span>
<span id="cb4-10">  )</span>
<span id="cb4-11">  .fmt_number(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"no_of_account"</span>,decimals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb4-12">  .fmt_percent(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pct_of_account"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pct_of_revenue"</span>], decimals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb4-13">  .fmt_currency(columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"revenue"</span>, currency<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"USD"</span>, decimals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb4-14">  .tab_source_note(source_note<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Figure 2.1b: Slightly improved table"</span>)</span>
<span id="cb4-15">)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="4">
<div>
<div id="owjzkcqqrj" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>
#owjzkcqqrj table {
          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
          -webkit-font-smoothing: antialiased;
          -moz-osx-font-smoothing: grayscale;
        }

#owjzkcqqrj thead, tbody, tfoot, tr, td, th { border-style: none; }
 tr { background-color: transparent; }
#owjzkcqqrj p { margin: 0; padding: 0; }
 #owjzkcqqrj .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; }
 #owjzkcqqrj .gt_caption { padding-top: 4px; padding-bottom: 4px; }
 #owjzkcqqrj .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }
 #owjzkcqqrj .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; }
 #owjzkcqqrj .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }
 #owjzkcqqrj .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }
 #owjzkcqqrj .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }
 #owjzkcqqrj .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }
 #owjzkcqqrj .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }
 #owjzkcqqrj .gt_column_spanner_outer:first-child { padding-left: 0; }
 #owjzkcqqrj .gt_column_spanner_outer:last-child { padding-right: 0; }
 #owjzkcqqrj .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; }
 #owjzkcqqrj .gt_spanner_row { border-bottom-style: hidden; }
 #owjzkcqqrj .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; }
 #owjzkcqqrj .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; }
 #owjzkcqqrj .gt_from_md> :first-child { margin-top: 0; }
 #owjzkcqqrj .gt_from_md> :last-child { margin-bottom: 0; }
 #owjzkcqqrj .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; }
 #owjzkcqqrj .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; }
 #owjzkcqqrj .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; }
 #owjzkcqqrj .gt_row_group_first td { border-top-width: 2px; }
 #owjzkcqqrj .gt_row_group_first th { border-top-width: 2px; }
 #owjzkcqqrj .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }
 #owjzkcqqrj .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }
 #owjzkcqqrj .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; text-align: left; }
 #owjzkcqqrj .gt_left { text-align: left; }
 #owjzkcqqrj .gt_center { text-align: center; }
 #owjzkcqqrj .gt_right { text-align: right; font-variant-numeric: tabular-nums; }
 #owjzkcqqrj .gt_font_normal { font-weight: normal; }
 #owjzkcqqrj .gt_font_bold { font-weight: bold; }
 #owjzkcqqrj .gt_font_italic { font-style: italic; }
 #owjzkcqqrj .gt_super { font-size: 65%; }
 #owjzkcqqrj .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; }
 #owjzkcqqrj .gt_asterisk { font-size: 100%; vertical-align: 0; }
 
</style>

<table class="gt_table table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<thead class="gt_header">
<tr class="header">
<th colspan="5" class="gt_heading gt_title gt_font_normal" data-quarto-table-cell-role="th">New client tier share</th>
</tr>
</thead>
<tbody>
<tr class="odd gt_col_headings">
<td id="Tier" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" scope="col">Tier</td>
<td id="# of Accounts" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col"># of Accounts</td>
<td id="% Accounts" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">% Accounts</td>
<td id="Revenue ($M)" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">Revenue ($M)</td>
<td id="% Revenue" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">% Revenue</td>
</tr>
</tbody>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_left">A</td>
<td class="gt_row gt_right">77</td>
<td class="gt_row gt_right">7.08%</td>
<td class="gt_row gt_right">$4.67</td>
<td class="gt_row gt_right">25.00%</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">A+</td>
<td class="gt_row gt_right">19</td>
<td class="gt_row gt_right">1.75%</td>
<td class="gt_row gt_right">$3.93</td>
<td class="gt_row gt_right">21.00%</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left">B</td>
<td class="gt_row gt_right">338</td>
<td class="gt_row gt_right">31.07%</td>
<td class="gt_row gt_right">$5.98</td>
<td class="gt_row gt_right">32.00%</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">C</td>
<td class="gt_row gt_right">425</td>
<td class="gt_row gt_right">39.06%</td>
<td class="gt_row gt_right">$2.80</td>
<td class="gt_row gt_right">15.00%</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left">D</td>
<td class="gt_row gt_right">24</td>
<td class="gt_row gt_right">2.21%</td>
<td class="gt_row gt_right">$0.37</td>
<td class="gt_row gt_right">2.00%</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">All other</td>
<td class="gt_row gt_right">205</td>
<td class="gt_row gt_right">18.84%</td>
<td class="gt_row gt_right">$0.94</td>
<td class="gt_row gt_right">5.00%</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left">Grand Total</td>
<td class="gt_row gt_right">1,088</td>
<td class="gt_row gt_right">100.00%</td>
<td class="gt_row gt_right">$18.70</td>
<td class="gt_row gt_right">100.00%</td>
</tr>
</tbody><tfoot class="gt_sourcenotes">
<tr class="odd">
<td colspan="5" class="gt_sourcenote">Figure 2.1b: Slightly improved table</td>
</tr>
</tfoot>

</table>


</div>
        
</div>
</div>
</div>
<p>Trông ổn (ít nhất là trình bày số liệu một cách toàn vẹn) so với bản gốc rồi!</p>
<p>Tiếp tục, ta dùng - helper <code>md()</code> để định dạng lại tiêu đề; - sử dụng <code>.data_color()</code> để tạo heatmapping; - sử dụng <code>tab_style()</code> để format dòng Grand Total; - sử dụng <code>.opt_stylize()</code> để theming.</p>
<div id="35220963" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> great_tables <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> md, style, loc</span>
<span id="cb5-2"></span>
<span id="cb5-3">(</span>
<span id="cb5-4">  GT(data)</span>
<span id="cb5-5">  .tab_header(title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>md(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;strong&gt;New client tier share&lt;/strong&gt;"</span>))</span>
<span id="cb5-6">  .opt_align_table_header(align<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>)</span>
<span id="cb5-7">  .cols_label(</span>
<span id="cb5-8">    tier <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tier"</span>,</span>
<span id="cb5-9">    no_of_account <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"# of Accounts"</span>,</span>
<span id="cb5-10">    pct_of_account <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"% Accounts"</span>,</span>
<span id="cb5-11">    revenue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"($M) Revenue"</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># change the label</span></span>
<span id="cb5-12">    pct_of_revenue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"% Revenue"</span></span>
<span id="cb5-13">  )</span>
<span id="cb5-14">  .fmt_number(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"no_of_account"</span>,decimals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb5-15">  .fmt_percent(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pct_of_account"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pct_of_revenue"</span>], decimals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># changed decimals</span></span>
<span id="cb5-16">  .fmt_currency(columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"revenue"</span>, currency<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"USD"</span>, decimals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># changed decimals</span></span>
<span id="cb5-17">  .tab_source_note(source_note<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Figure 2.1c: Table with heatmapping"</span>)</span>
<span id="cb5-18">  .data_color(</span>
<span id="cb5-19">    columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pct_of_account"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pct_of_revenue"</span>],</span>
<span id="cb5-20">    palette<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#57A6A1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#577B8D"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#344C64"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#240750"</span>],</span>
<span id="cb5-21">    domain<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb5-22">    na_color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgray"</span>,</span>
<span id="cb5-23">    autocolor_text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb5-24">  )</span>
<span id="cb5-25">  .tab_style(</span>
<span id="cb5-26">        style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb5-27">          style.text(style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bolder"</span>),</span>
<span id="cb5-28">          style.fill(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#EEEEEE"</span>),</span>
<span id="cb5-29">          style.borders(sides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>], weight<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2px'</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey"</span>)</span>
<span id="cb5-30">          ],</span>
<span id="cb5-31">        locations<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>loc.body(rows<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>])</span>
<span id="cb5-32">  )</span>
<span id="cb5-33">  .opt_stylize(style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span> ,color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>)</span>
<span id="cb5-34">)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="5">
<div>
<div id="xlwzucecqv" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>
#xlwzucecqv table {
          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
          -webkit-font-smoothing: antialiased;
          -moz-osx-font-smoothing: grayscale;
        }

#xlwzucecqv thead, tbody, tfoot, tr, td, th { border-style: none; }
 tr { background-color: transparent; }
#xlwzucecqv p { margin: 0; padding: 0; }
 #xlwzucecqv .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #D5D5D5; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D5D5D5; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; }
 #xlwzucecqv .gt_caption { padding-top: 4px; padding-bottom: 4px; }
 #xlwzucecqv .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }
 #xlwzucecqv .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; }
 #xlwzucecqv .gt_heading { background-color: #FFFFFF; text-align: left; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }
 #xlwzucecqv .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D5D5D5; }
 #xlwzucecqv .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D5D5D5; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D5D5D5; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }
 #xlwzucecqv .gt_col_heading { color: #FFFFFF; background-color: #004D80; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }
 #xlwzucecqv .gt_column_spanner_outer { color: #FFFFFF; background-color: #004D80; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }
 #xlwzucecqv .gt_column_spanner_outer:first-child { padding-left: 0; }
 #xlwzucecqv .gt_column_spanner_outer:last-child { padding-right: 0; }
 #xlwzucecqv .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D5D5D5; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; }
 #xlwzucecqv .gt_spanner_row { border-bottom-style: hidden; }
 #xlwzucecqv .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D5D5D5; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D5D5D5; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; }
 #xlwzucecqv .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D5D5D5; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D5D5D5; vertical-align: middle; }
 #xlwzucecqv .gt_from_md> :first-child { margin-top: 0; }
 #xlwzucecqv .gt_from_md> :last-child { margin-bottom: 0; }
 #xlwzucecqv .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D5D5D5; border-left-style: solid; border-left-width: 1px; border-left-color: #D5D5D5; border-right-style: solid; border-right-width: 1px; border-right-color: #D5D5D5; vertical-align: middle; overflow-x: hidden; }
 #xlwzucecqv .gt_stub { color: #333333; background-color: #929292; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D5D5D5; padding-left: 5px; padding-right: 5px; }
 #xlwzucecqv .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; }
 #xlwzucecqv .gt_row_group_first td { border-top-width: 2px; }
 #xlwzucecqv .gt_row_group_first th { border-top-width: 2px; }
 #xlwzucecqv .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D5D5D5; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D5D5D5; }
 #xlwzucecqv .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }
 #xlwzucecqv .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; text-align: left; }
 #xlwzucecqv .gt_left { text-align: left; }
 #xlwzucecqv .gt_center { text-align: center; }
 #xlwzucecqv .gt_right { text-align: right; font-variant-numeric: tabular-nums; }
 #xlwzucecqv .gt_font_normal { font-weight: normal; }
 #xlwzucecqv .gt_font_bold { font-weight: bold; }
 #xlwzucecqv .gt_font_italic { font-style: italic; }
 #xlwzucecqv .gt_super { font-size: 65%; }
 #xlwzucecqv .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; }
 #xlwzucecqv .gt_asterisk { font-size: 100%; vertical-align: 0; }
 
</style>

<table class="gt_table table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<thead class="gt_header">
<tr class="header">
<th colspan="5" class="gt_heading gt_title gt_font_normal" data-quarto-table-cell-role="th"><strong>New client tier share</strong></th>
</tr>
</thead>
<tbody>
<tr class="odd gt_col_headings">
<td id="Tier" class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" scope="col">Tier</td>
<td id="# of Accounts" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col"># of Accounts</td>
<td id="% Accounts" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">% Accounts</td>
<td id="($M) Revenue" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">($M) Revenue</td>
<td id="% Revenue" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">% Revenue</td>
</tr>
</tbody>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_left">A</td>
<td class="gt_row gt_right">77</td>
<td class="gt_row gt_right" style="background-color: #579d9d">7%</td>
<td class="gt_row gt_right">$4.7</td>
<td class="gt_row gt_right" style="background-color: #578692">25%</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">A+</td>
<td class="gt_row gt_right">19</td>
<td class="gt_row gt_right" style="background-color: #57a4a0">2%</td>
<td class="gt_row gt_right">$3.9</td>
<td class="gt_row gt_right" style="background-color: #578b94">21%</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left">B</td>
<td class="gt_row gt_right">338</td>
<td class="gt_row gt_right" style="background-color: #577e8e">31%</td>
<td class="gt_row gt_right">$6.0</td>
<td class="gt_row gt_right" style="background-color: #577d8e">32%</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">C</td>
<td class="gt_row gt_right">425</td>
<td class="gt_row gt_right" style="background-color: #517386">39%</td>
<td class="gt_row gt_right">$2.8</td>
<td class="gt_row gt_right" style="background-color: #579398">15%</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left">D</td>
<td class="gt_row gt_right">24</td>
<td class="gt_row gt_right" style="background-color: #57a3a0">2%</td>
<td class="gt_row gt_right">$0.4</td>
<td class="gt_row gt_right" style="background-color: #57a3a0">2%</td>
</tr>
<tr class="even">
<td class="gt_row gt_left">All other</td>
<td class="gt_row gt_right">205</td>
<td class="gt_row gt_right" style="background-color: #578e96">19%</td>
<td class="gt_row gt_right">$0.9</td>
<td class="gt_row gt_right" style="background-color: #57a09e">5%</td>
</tr>
<tr class="odd">
<td class="gt_row gt_left" style="font-style: bolder; background-color: #EEEEEE; border-top: 2px solid grey; border-bottom: 2px solid grey">Grand Total</td>
<td class="gt_row gt_right" style="font-style: bolder; background-color: #EEEEEE; border-top: 2px solid grey; border-bottom: 2px solid grey">1,088</td>
<td class="gt_row gt_right" style="background-color: #240750; font-style: bolder; background-color: #EEEEEE; border-top: 2px solid grey; border-bottom: 2px solid grey">100%</td>
<td class="gt_row gt_right" style="font-style: bolder; background-color: #EEEEEE; border-top: 2px solid grey; border-bottom: 2px solid grey">$18.7</td>
<td class="gt_row gt_right" style="background-color: #240750; font-style: bolder; background-color: #EEEEEE; border-top: 2px solid grey; border-bottom: 2px solid grey">100%</td>
</tr>
</tbody><tfoot class="gt_sourcenotes">
<tr class="odd">
<td colspan="5" class="gt_sourcenote">Figure 2.1c: Table with heatmapping</td>
</tr>
</tfoot>

</table>


</div>
        
</div>
</div>
</div>
<p>Tiếp theo, chúng ta sẽ thử dùng <code>fmt_nanoplot()</code> để tạo một bar plots thay cho hai cột percentage.</p>
<p>Đây là một tính năng trong giai đoạn thử nghiệm nên mình thấy chưa thực sử ổn định và tuân theo document mà nhà phát triển đề cập. Trong ví dụ dưới đây mình sử dụng data bar, loại bỏ format do hàng cuối cùng. Tuy nhiên, đồ thị vẫn include giá trị <code>100%</code> ở hàng Grand Total để điều chỉnh bar scale.</p>
<p>Thêm nữa mình cần chuyển dataframe về polar dataframe, khi đó một column của dl.df là iterable.</p>
<div id="be86356a" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> great_tables <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> md, style, loc, nanoplot_options</span>
<span id="cb6-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb6-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> polars <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pl</span>
<span id="cb6-4"></span>
<span id="cb6-5">data.at[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pct_of_account"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.nan</span>
<span id="cb6-6">data.at[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pct_of_revenue"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.nan</span>
<span id="cb6-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># so that the data scale looks better</span></span>
<span id="cb6-8"></span>
<span id="cb6-9">pl_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pl.from_pandas(data)</span>
<span id="cb6-10"></span>
<span id="cb6-11">(</span>
<span id="cb6-12">  GT(pl_data, rowname_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tier"</span>)</span>
<span id="cb6-13">  .tab_header(title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>md(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;strong&gt;New client tier share&lt;/strong&gt;"</span>))</span>
<span id="cb6-14">  .opt_align_table_header(align<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>)</span>
<span id="cb6-15">  .tab_source_note(source_note<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Figure 2.1d: Table with data bar"</span>)</span>
<span id="cb6-16">  .cols_label(</span>
<span id="cb6-17">    tier <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tier"</span>,</span>
<span id="cb6-18">    no_of_account <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"# of Accounts"</span>,</span>
<span id="cb6-19">    pct_of_account <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"% Accounts"</span>,</span>
<span id="cb6-20">    revenue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"($M) Revenue"</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># change the label</span></span>
<span id="cb6-21">    pct_of_revenue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"% Revenue"</span></span>
<span id="cb6-22">  )</span>
<span id="cb6-23">  .fmt_number(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"no_of_account"</span>,decimals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb6-24">  .fmt_currency(columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"revenue"</span>, currency<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"USD"</span>, decimals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb6-25">  .fmt_percent(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pct_of_account"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pct_of_revenue"</span>], decimals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># changed decimals</span></span>
<span id="cb6-26">  .cols_width(</span>
<span id="cb6-27">    cases<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{</span>
<span id="cb6-28">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tier"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20%"</span>,</span>
<span id="cb6-29">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"no_of_account"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20%"</span>,</span>
<span id="cb6-30">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pct_of_account"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20%"</span>,</span>
<span id="cb6-31">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"revenue"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20%"</span>,</span>
<span id="cb6-32">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pct_of_revenue"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20%"</span>      </span>
<span id="cb6-33">    }</span>
<span id="cb6-34">    )</span>
<span id="cb6-35">  .fmt_nanoplot(</span>
<span id="cb6-36">    columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pct_of_account"</span>,</span>
<span id="cb6-37">    rows <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>],</span>
<span id="cb6-38">    plot_type<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bar"</span>,</span>
<span id="cb6-39">    plot_height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3em"</span>,</span>
<span id="cb6-40">    autoscale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb6-41">    options<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>nanoplot_options(</span>
<span id="cb6-42">      data_bar_stroke_color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#577B8D"</span>,</span>
<span id="cb6-43">      data_bar_stroke_width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>,</span>
<span id="cb6-44">      data_bar_fill_color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#577B8D"</span>,)</span>
<span id="cb6-45">    )</span>
<span id="cb6-46">  .fmt_nanoplot(</span>
<span id="cb6-47">    columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pct_of_revenue"</span>,</span>
<span id="cb6-48">    rows <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>],</span>
<span id="cb6-49">    plot_type<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bar"</span>,</span>
<span id="cb6-50">    plot_height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3em"</span>,</span>
<span id="cb6-51">    autoscale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb6-52">    options<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>nanoplot_options(</span>
<span id="cb6-53">      data_bar_stroke_color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#577B8D"</span>,</span>
<span id="cb6-54">      data_bar_stroke_width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>,</span>
<span id="cb6-55">      data_bar_fill_color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#577B8D"</span>,)</span>
<span id="cb6-56">  )</span>
<span id="cb6-57">  .tab_style(</span>
<span id="cb6-58">        style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb6-59">          style.text(style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bolder"</span>),</span>
<span id="cb6-60">          style.fill(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#EEEEEE"</span>),</span>
<span id="cb6-61">          style.borders(sides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>], weight<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2px'</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey"</span>)</span>
<span id="cb6-62">          ],</span>
<span id="cb6-63">        locations<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>loc.body(rows<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>])</span>
<span id="cb6-64">  )</span>
<span id="cb6-65">  .tab_style(</span>
<span id="cb6-66">        style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb6-67">          style.text(color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#EEEEEE"</span>, size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>),</span>
<span id="cb6-68">          ],</span>
<span id="cb6-69">        locations<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>loc.body(rows<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>], columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pct_of_account"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pct_of_revenue"</span>])</span>
<span id="cb6-70">  )</span>
<span id="cb6-71">  .opt_stylize(style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> ,color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>)</span>
<span id="cb6-72">)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="6">
<div>
<div id="xsdfljskly" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>
#xsdfljskly table {
          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
          -webkit-font-smoothing: antialiased;
          -moz-osx-font-smoothing: grayscale;
        }

#xsdfljskly thead, tbody, tfoot, tr, td, th { border-style: none; }
 tr { background-color: transparent; }
#xsdfljskly p { margin: 0; padding: 0; }
 #xsdfljskly .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #929292; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #929292; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; }
 #xsdfljskly .gt_caption { padding-top: 4px; padding-bottom: 4px; }
 #xsdfljskly .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }
 #xsdfljskly .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; }
 #xsdfljskly .gt_heading { background-color: #FFFFFF; text-align: left; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }
 #xsdfljskly .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #929292; }
 #xsdfljskly .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #929292; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #929292; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }
 #xsdfljskly .gt_col_heading { color: #FFFFFF; background-color: #004D80; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }
 #xsdfljskly .gt_column_spanner_outer { color: #FFFFFF; background-color: #004D80; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }
 #xsdfljskly .gt_column_spanner_outer:first-child { padding-left: 0; }
 #xsdfljskly .gt_column_spanner_outer:last-child { padding-right: 0; }
 #xsdfljskly .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #929292; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; }
 #xsdfljskly .gt_spanner_row { border-bottom-style: hidden; }
 #xsdfljskly .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #929292; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #929292; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; }
 #xsdfljskly .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #929292; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #929292; vertical-align: middle; }
 #xsdfljskly .gt_from_md> :first-child { margin-top: 0; }
 #xsdfljskly .gt_from_md> :last-child { margin-bottom: 0; }
 #xsdfljskly .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: dashed; border-top-width: 1px; border-top-color: #929292; border-left-style: none; border-left-width: 1px; border-left-color: #929292; border-right-style: none; border-right-width: 1px; border-right-color: #929292; vertical-align: middle; overflow-x: hidden; }
 #xsdfljskly .gt_stub { color: #333333; background-color: #D5D5D5; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: none; border-right-width: 2px; border-right-color: #FFFFFF; padding-left: 5px; padding-right: 5px; }
 #xsdfljskly .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; }
 #xsdfljskly .gt_row_group_first td { border-top-width: 2px; }
 #xsdfljskly .gt_row_group_first th { border-top-width: 2px; }
 #xsdfljskly .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #929292; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #929292; }
 #xsdfljskly .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }
 #xsdfljskly .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; text-align: left; }
 #xsdfljskly .gt_left { text-align: left; }
 #xsdfljskly .gt_center { text-align: center; }
 #xsdfljskly .gt_right { text-align: right; font-variant-numeric: tabular-nums; }
 #xsdfljskly .gt_font_normal { font-weight: normal; }
 #xsdfljskly .gt_font_bold { font-weight: bold; }
 #xsdfljskly .gt_font_italic { font-style: italic; }
 #xsdfljskly .gt_super { font-size: 65%; }
 #xsdfljskly .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; }
 #xsdfljskly .gt_asterisk { font-size: 100%; vertical-align: 0; }
 
</style>

<table class="gt_table table table-sm table-striped small" data-quarto-postprocess="true" data-quarto-disable-processing="false" data-quarto-bootstrap="false">
<colgroup>
<col style="width: 20%">
<col style="width: 20%">
<col style="width: 20%">
<col style="width: 20%">
<col style="width: 20%">
</colgroup>
<thead class="gt_header">
<tr class="header">
<th colspan="5" class="gt_heading gt_title gt_font_normal" data-quarto-table-cell-role="th"><strong>New client tier share</strong></th>
</tr>
</thead>
<tbody>
<tr class="odd gt_col_headings">
<td class="gt_col_heading gt_columns_bottom_border gt_left" data-quarto-table-cell-role="th" scope="col"></td>
<td id="# of Accounts" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col"># of Accounts</td>
<td id="% Accounts" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">% Accounts</td>
<td id="($M) Revenue" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">($M) Revenue</td>
<td id="% Revenue" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">% Revenue</td>
</tr>
</tbody>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_left gt_stub" data-quarto-table-cell-role="th">A</td>
<td class="gt_row gt_right">77</td>
<td class="gt_row gt_right"><div>
<svg viewbox="0 0 600 130" style="height: 3em; margin-left: auto; margin-right: auto; font-size: inherit; overflow: visible; vertical-align: middle; position:relative;">
<defs><pattern id="area_pattern" width="8" height="8" patternunits="userSpaceOnUse"><path class="pattern-line" d="M 0,8 l 8,-8 M -1,1 l 4,-4 M 6,10 l 4,-4" stroke="#FF0000" stroke-width="1.5" stroke-linecap="round" shape-rendering="geometricPrecision"></path></pattern></defs>
<style> text { font-family: ui-monospace, 'Cascadia Code', 'Source Code Pro', Menlo, Consolas, 'DejaVu Sans Mono', monospace; stroke-width: 0.15em; paint-order: stroke; stroke-linejoin: round; cursor: default; } .vert-line:hover rect { fill: #911EB4; fill-opacity: 40%; stroke: #FFFFFF60; color: red; } .vert-line:hover text { stroke: white; fill: #212427; } .horizontal-line:hover text {stroke: white; fill: #212427; } .ref-line:hover rect { stroke: #FFFFFF60; } .ref-line:hover line { stroke: #FF0000; } .ref-line:hover text { stroke: white; fill: #212427; } .y-axis-line:hover rect { fill: #EDEDED; fill-opacity: 60%; stroke: #FFFFFF60; color: red; } .y-axis-line:hover text { stroke: white; stroke-width: 0.20em; fill: #1A1C1F; } </style>
<line x1="0.0" y1="5.0" x2="0.0" y2="125.0" stroke="#BFBFBF" stroke-width="4"></line><rect x="0.0" y="45.0" width="108.70588235294117" height="40" stroke="#577B8D" stroke-width="80" fill="#577B8D"></rect><g class="horizontal-line"><rect x="0" y="45.0" width="600" height="40" stroke="transparent" stroke-width="12" fill="transparent"></rect><text x="10.0" y="25" fill="transparent" stroke="transparent" font-size="30px">0.071</text></g>
</svg>
</div></td>
<td class="gt_row gt_right">$4.7</td>
<td class="gt_row gt_right"><div>
<svg viewbox="0 0 600 130" style="height: 3em; margin-left: auto; margin-right: auto; font-size: inherit; overflow: visible; vertical-align: middle; position:relative;">
<defs><pattern id="area_pattern" width="8" height="8" patternunits="userSpaceOnUse"><path class="pattern-line" d="M 0,8 l 8,-8 M -1,1 l 4,-4 M 6,10 l 4,-4" stroke="#FF0000" stroke-width="1.5" stroke-linecap="round" shape-rendering="geometricPrecision"></path></pattern></defs>
<style> text { font-family: ui-monospace, 'Cascadia Code', 'Source Code Pro', Menlo, Consolas, 'DejaVu Sans Mono', monospace; stroke-width: 0.15em; paint-order: stroke; stroke-linejoin: round; cursor: default; } .vert-line:hover rect { fill: #911EB4; fill-opacity: 40%; stroke: #FFFFFF60; color: red; } .vert-line:hover text { stroke: white; fill: #212427; } .horizontal-line:hover text {stroke: white; fill: #212427; } .ref-line:hover rect { stroke: #FFFFFF60; } .ref-line:hover line { stroke: #FF0000; } .ref-line:hover text { stroke: white; fill: #212427; } .y-axis-line:hover rect { fill: #EDEDED; fill-opacity: 60%; stroke: #FFFFFF60; color: red; } .y-axis-line:hover text { stroke: white; stroke-width: 0.20em; fill: #1A1C1F; } </style>
<line x1="0.0" y1="5.0" x2="0.0" y2="125.0" stroke="#BFBFBF" stroke-width="4"></line><rect x="0.0" y="45.0" width="468.75" height="40" stroke="#577B8D" stroke-width="80" fill="#577B8D"></rect><g class="horizontal-line"><rect x="0" y="45.0" width="600" height="40" stroke="transparent" stroke-width="12" fill="transparent"></rect><text x="10.0" y="25" fill="transparent" stroke="transparent" font-size="30px">0.25</text></g>
</svg>
</div></td>
</tr>
<tr class="even">
<td class="gt_row gt_left gt_stub" data-quarto-table-cell-role="th">A+</td>
<td class="gt_row gt_right">19</td>
<td class="gt_row gt_right"><div>
<svg viewbox="0 0 600 130" style="height: 3em; margin-left: auto; margin-right: auto; font-size: inherit; overflow: visible; vertical-align: middle; position:relative;">
<defs><pattern id="area_pattern" width="8" height="8" patternunits="userSpaceOnUse"><path class="pattern-line" d="M 0,8 l 8,-8 M -1,1 l 4,-4 M 6,10 l 4,-4" stroke="#FF0000" stroke-width="1.5" stroke-linecap="round" shape-rendering="geometricPrecision"></path></pattern></defs>
<style> text { font-family: ui-monospace, 'Cascadia Code', 'Source Code Pro', Menlo, Consolas, 'DejaVu Sans Mono', monospace; stroke-width: 0.15em; paint-order: stroke; stroke-linejoin: round; cursor: default; } .vert-line:hover rect { fill: #911EB4; fill-opacity: 40%; stroke: #FFFFFF60; color: red; } .vert-line:hover text { stroke: white; fill: #212427; } .horizontal-line:hover text {stroke: white; fill: #212427; } .ref-line:hover rect { stroke: #FFFFFF60; } .ref-line:hover line { stroke: #FF0000; } .ref-line:hover text { stroke: white; fill: #212427; } .y-axis-line:hover rect { fill: #EDEDED; fill-opacity: 60%; stroke: #FFFFFF60; color: red; } .y-axis-line:hover text { stroke: white; stroke-width: 0.20em; fill: #1A1C1F; } </style>
<line x1="0.0" y1="5.0" x2="0.0" y2="125.0" stroke="#BFBFBF" stroke-width="4"></line><rect x="0.0" y="45.0" width="26.823529411764707" height="40" stroke="#577B8D" stroke-width="80" fill="#577B8D"></rect><g class="horizontal-line"><rect x="0" y="45.0" width="600" height="40" stroke="transparent" stroke-width="12" fill="transparent"></rect><text x="10.0" y="25" fill="transparent" stroke="transparent" font-size="30px">0.017</text></g>
</svg>
</div></td>
<td class="gt_row gt_right">$3.9</td>
<td class="gt_row gt_right"><div>
<svg viewbox="0 0 600 130" style="height: 3em; margin-left: auto; margin-right: auto; font-size: inherit; overflow: visible; vertical-align: middle; position:relative;">
<defs><pattern id="area_pattern" width="8" height="8" patternunits="userSpaceOnUse"><path class="pattern-line" d="M 0,8 l 8,-8 M -1,1 l 4,-4 M 6,10 l 4,-4" stroke="#FF0000" stroke-width="1.5" stroke-linecap="round" shape-rendering="geometricPrecision"></path></pattern></defs>
<style> text { font-family: ui-monospace, 'Cascadia Code', 'Source Code Pro', Menlo, Consolas, 'DejaVu Sans Mono', monospace; stroke-width: 0.15em; paint-order: stroke; stroke-linejoin: round; cursor: default; } .vert-line:hover rect { fill: #911EB4; fill-opacity: 40%; stroke: #FFFFFF60; color: red; } .vert-line:hover text { stroke: white; fill: #212427; } .horizontal-line:hover text {stroke: white; fill: #212427; } .ref-line:hover rect { stroke: #FFFFFF60; } .ref-line:hover line { stroke: #FF0000; } .ref-line:hover text { stroke: white; fill: #212427; } .y-axis-line:hover rect { fill: #EDEDED; fill-opacity: 60%; stroke: #FFFFFF60; color: red; } .y-axis-line:hover text { stroke: white; stroke-width: 0.20em; fill: #1A1C1F; } </style>
<line x1="0.0" y1="5.0" x2="0.0" y2="125.0" stroke="#BFBFBF" stroke-width="4"></line><rect x="0.0" y="45.0" width="393.75" height="40" stroke="#577B8D" stroke-width="80" fill="#577B8D"></rect><g class="horizontal-line"><rect x="0" y="45.0" width="600" height="40" stroke="transparent" stroke-width="12" fill="transparent"></rect><text x="10.0" y="25" fill="transparent" stroke="transparent" font-size="30px">0.21</text></g>
</svg>
</div></td>
</tr>
<tr class="odd">
<td class="gt_row gt_left gt_stub" data-quarto-table-cell-role="th">B</td>
<td class="gt_row gt_right">338</td>
<td class="gt_row gt_right"><div>
<svg viewbox="0 0 600 130" style="height: 3em; margin-left: auto; margin-right: auto; font-size: inherit; overflow: visible; vertical-align: middle; position:relative;">
<defs><pattern id="area_pattern" width="8" height="8" patternunits="userSpaceOnUse"><path class="pattern-line" d="M 0,8 l 8,-8 M -1,1 l 4,-4 M 6,10 l 4,-4" stroke="#FF0000" stroke-width="1.5" stroke-linecap="round" shape-rendering="geometricPrecision"></path></pattern></defs>
<style> text { font-family: ui-monospace, 'Cascadia Code', 'Source Code Pro', Menlo, Consolas, 'DejaVu Sans Mono', monospace; stroke-width: 0.15em; paint-order: stroke; stroke-linejoin: round; cursor: default; } .vert-line:hover rect { fill: #911EB4; fill-opacity: 40%; stroke: #FFFFFF60; color: red; } .vert-line:hover text { stroke: white; fill: #212427; } .horizontal-line:hover text {stroke: white; fill: #212427; } .ref-line:hover rect { stroke: #FFFFFF60; } .ref-line:hover line { stroke: #FF0000; } .ref-line:hover text { stroke: white; fill: #212427; } .y-axis-line:hover rect { fill: #EDEDED; fill-opacity: 60%; stroke: #FFFFFF60; color: red; } .y-axis-line:hover text { stroke: white; stroke-width: 0.20em; fill: #1A1C1F; } </style>
<line x1="0.0" y1="5.0" x2="0.0" y2="125.0" stroke="#BFBFBF" stroke-width="4"></line><rect x="0.0" y="45.0" width="477.1764705882353" height="40" stroke="#577B8D" stroke-width="80" fill="#577B8D"></rect><g class="horizontal-line"><rect x="0" y="45.0" width="600" height="40" stroke="transparent" stroke-width="12" fill="transparent"></rect><text x="10.0" y="25" fill="transparent" stroke="transparent" font-size="30px">0.31</text></g>
</svg>
</div></td>
<td class="gt_row gt_right">$6.0</td>
<td class="gt_row gt_right"><div>
<svg viewbox="0 0 600 130" style="height: 3em; margin-left: auto; margin-right: auto; font-size: inherit; overflow: visible; vertical-align: middle; position:relative;">
<defs><pattern id="area_pattern" width="8" height="8" patternunits="userSpaceOnUse"><path class="pattern-line" d="M 0,8 l 8,-8 M -1,1 l 4,-4 M 6,10 l 4,-4" stroke="#FF0000" stroke-width="1.5" stroke-linecap="round" shape-rendering="geometricPrecision"></path></pattern></defs>
<style> text { font-family: ui-monospace, 'Cascadia Code', 'Source Code Pro', Menlo, Consolas, 'DejaVu Sans Mono', monospace; stroke-width: 0.15em; paint-order: stroke; stroke-linejoin: round; cursor: default; } .vert-line:hover rect { fill: #911EB4; fill-opacity: 40%; stroke: #FFFFFF60; color: red; } .vert-line:hover text { stroke: white; fill: #212427; } .horizontal-line:hover text {stroke: white; fill: #212427; } .ref-line:hover rect { stroke: #FFFFFF60; } .ref-line:hover line { stroke: #FF0000; } .ref-line:hover text { stroke: white; fill: #212427; } .y-axis-line:hover rect { fill: #EDEDED; fill-opacity: 60%; stroke: #FFFFFF60; color: red; } .y-axis-line:hover text { stroke: white; stroke-width: 0.20em; fill: #1A1C1F; } </style>
<line x1="0.0" y1="5.0" x2="0.0" y2="125.0" stroke="#BFBFBF" stroke-width="4"></line><rect x="0.0" y="45.0" width="600.0" height="40" stroke="#577B8D" stroke-width="80" fill="#577B8D"></rect><g class="horizontal-line"><rect x="0" y="45.0" width="600" height="40" stroke="transparent" stroke-width="12" fill="transparent"></rect><text x="10.0" y="25" fill="transparent" stroke="transparent" font-size="30px">0.32</text></g>
</svg>
</div></td>
</tr>
<tr class="even">
<td class="gt_row gt_left gt_stub" data-quarto-table-cell-role="th">C</td>
<td class="gt_row gt_right">425</td>
<td class="gt_row gt_right"><div>
<svg viewbox="0 0 600 130" style="height: 3em; margin-left: auto; margin-right: auto; font-size: inherit; overflow: visible; vertical-align: middle; position:relative;">
<defs><pattern id="area_pattern" width="8" height="8" patternunits="userSpaceOnUse"><path class="pattern-line" d="M 0,8 l 8,-8 M -1,1 l 4,-4 M 6,10 l 4,-4" stroke="#FF0000" stroke-width="1.5" stroke-linecap="round" shape-rendering="geometricPrecision"></path></pattern></defs>
<style> text { font-family: ui-monospace, 'Cascadia Code', 'Source Code Pro', Menlo, Consolas, 'DejaVu Sans Mono', monospace; stroke-width: 0.15em; paint-order: stroke; stroke-linejoin: round; cursor: default; } .vert-line:hover rect { fill: #911EB4; fill-opacity: 40%; stroke: #FFFFFF60; color: red; } .vert-line:hover text { stroke: white; fill: #212427; } .horizontal-line:hover text {stroke: white; fill: #212427; } .ref-line:hover rect { stroke: #FFFFFF60; } .ref-line:hover line { stroke: #FF0000; } .ref-line:hover text { stroke: white; fill: #212427; } .y-axis-line:hover rect { fill: #EDEDED; fill-opacity: 60%; stroke: #FFFFFF60; color: red; } .y-axis-line:hover text { stroke: white; stroke-width: 0.20em; fill: #1A1C1F; } </style>
<line x1="0.0" y1="5.0" x2="0.0" y2="125.0" stroke="#BFBFBF" stroke-width="4"></line><rect x="0.0" y="45.0" width="600.0" height="40" stroke="#577B8D" stroke-width="80" fill="#577B8D"></rect><g class="horizontal-line"><rect x="0" y="45.0" width="600" height="40" stroke="transparent" stroke-width="12" fill="transparent"></rect><text x="10.0" y="25" fill="transparent" stroke="transparent" font-size="30px">0.39</text></g>
</svg>
</div></td>
<td class="gt_row gt_right">$2.8</td>
<td class="gt_row gt_right"><div>
<svg viewbox="0 0 600 130" style="height: 3em; margin-left: auto; margin-right: auto; font-size: inherit; overflow: visible; vertical-align: middle; position:relative;">
<defs><pattern id="area_pattern" width="8" height="8" patternunits="userSpaceOnUse"><path class="pattern-line" d="M 0,8 l 8,-8 M -1,1 l 4,-4 M 6,10 l 4,-4" stroke="#FF0000" stroke-width="1.5" stroke-linecap="round" shape-rendering="geometricPrecision"></path></pattern></defs>
<style> text { font-family: ui-monospace, 'Cascadia Code', 'Source Code Pro', Menlo, Consolas, 'DejaVu Sans Mono', monospace; stroke-width: 0.15em; paint-order: stroke; stroke-linejoin: round; cursor: default; } .vert-line:hover rect { fill: #911EB4; fill-opacity: 40%; stroke: #FFFFFF60; color: red; } .vert-line:hover text { stroke: white; fill: #212427; } .horizontal-line:hover text {stroke: white; fill: #212427; } .ref-line:hover rect { stroke: #FFFFFF60; } .ref-line:hover line { stroke: #FF0000; } .ref-line:hover text { stroke: white; fill: #212427; } .y-axis-line:hover rect { fill: #EDEDED; fill-opacity: 60%; stroke: #FFFFFF60; color: red; } .y-axis-line:hover text { stroke: white; stroke-width: 0.20em; fill: #1A1C1F; } </style>
<line x1="0.0" y1="5.0" x2="0.0" y2="125.0" stroke="#BFBFBF" stroke-width="4"></line><rect x="0.0" y="45.0" width="281.25" height="40" stroke="#577B8D" stroke-width="80" fill="#577B8D"></rect><g class="horizontal-line"><rect x="0" y="45.0" width="600" height="40" stroke="transparent" stroke-width="12" fill="transparent"></rect><text x="10.0" y="25" fill="transparent" stroke="transparent" font-size="30px">0.15</text></g>
</svg>
</div></td>
</tr>
<tr class="odd">
<td class="gt_row gt_left gt_stub" data-quarto-table-cell-role="th">D</td>
<td class="gt_row gt_right">24</td>
<td class="gt_row gt_right"><div>
<svg viewbox="0 0 600 130" style="height: 3em; margin-left: auto; margin-right: auto; font-size: inherit; overflow: visible; vertical-align: middle; position:relative;">
<defs><pattern id="area_pattern" width="8" height="8" patternunits="userSpaceOnUse"><path class="pattern-line" d="M 0,8 l 8,-8 M -1,1 l 4,-4 M 6,10 l 4,-4" stroke="#FF0000" stroke-width="1.5" stroke-linecap="round" shape-rendering="geometricPrecision"></path></pattern></defs>
<style> text { font-family: ui-monospace, 'Cascadia Code', 'Source Code Pro', Menlo, Consolas, 'DejaVu Sans Mono', monospace; stroke-width: 0.15em; paint-order: stroke; stroke-linejoin: round; cursor: default; } .vert-line:hover rect { fill: #911EB4; fill-opacity: 40%; stroke: #FFFFFF60; color: red; } .vert-line:hover text { stroke: white; fill: #212427; } .horizontal-line:hover text {stroke: white; fill: #212427; } .ref-line:hover rect { stroke: #FFFFFF60; } .ref-line:hover line { stroke: #FF0000; } .ref-line:hover text { stroke: white; fill: #212427; } .y-axis-line:hover rect { fill: #EDEDED; fill-opacity: 60%; stroke: #FFFFFF60; color: red; } .y-axis-line:hover text { stroke: white; stroke-width: 0.20em; fill: #1A1C1F; } </style>
<line x1="0.0" y1="5.0" x2="0.0" y2="125.0" stroke="#BFBFBF" stroke-width="4"></line><rect x="0.0" y="45.0" width="33.88235294117647" height="40" stroke="#577B8D" stroke-width="80" fill="#577B8D"></rect><g class="horizontal-line"><rect x="0" y="45.0" width="600" height="40" stroke="transparent" stroke-width="12" fill="transparent"></rect><text x="10.0" y="25" fill="transparent" stroke="transparent" font-size="30px">0.022</text></g>
</svg>
</div></td>
<td class="gt_row gt_right">$0.4</td>
<td class="gt_row gt_right"><div>
<svg viewbox="0 0 600 130" style="height: 3em; margin-left: auto; margin-right: auto; font-size: inherit; overflow: visible; vertical-align: middle; position:relative;">
<defs><pattern id="area_pattern" width="8" height="8" patternunits="userSpaceOnUse"><path class="pattern-line" d="M 0,8 l 8,-8 M -1,1 l 4,-4 M 6,10 l 4,-4" stroke="#FF0000" stroke-width="1.5" stroke-linecap="round" shape-rendering="geometricPrecision"></path></pattern></defs>
<style> text { font-family: ui-monospace, 'Cascadia Code', 'Source Code Pro', Menlo, Consolas, 'DejaVu Sans Mono', monospace; stroke-width: 0.15em; paint-order: stroke; stroke-linejoin: round; cursor: default; } .vert-line:hover rect { fill: #911EB4; fill-opacity: 40%; stroke: #FFFFFF60; color: red; } .vert-line:hover text { stroke: white; fill: #212427; } .horizontal-line:hover text {stroke: white; fill: #212427; } .ref-line:hover rect { stroke: #FFFFFF60; } .ref-line:hover line { stroke: #FF0000; } .ref-line:hover text { stroke: white; fill: #212427; } .y-axis-line:hover rect { fill: #EDEDED; fill-opacity: 60%; stroke: #FFFFFF60; color: red; } .y-axis-line:hover text { stroke: white; stroke-width: 0.20em; fill: #1A1C1F; } </style>
<line x1="0.0" y1="5.0" x2="0.0" y2="125.0" stroke="#BFBFBF" stroke-width="4"></line><rect x="0.0" y="45.0" width="37.5" height="40" stroke="#577B8D" stroke-width="80" fill="#577B8D"></rect><g class="horizontal-line"><rect x="0" y="45.0" width="600" height="40" stroke="transparent" stroke-width="12" fill="transparent"></rect><text x="10.0" y="25" fill="transparent" stroke="transparent" font-size="30px">0.020</text></g>
</svg>
</div></td>
</tr>
<tr class="even">
<td class="gt_row gt_left gt_stub" data-quarto-table-cell-role="th">All other</td>
<td class="gt_row gt_right">205</td>
<td class="gt_row gt_right"><div>
<svg viewbox="0 0 600 130" style="height: 3em; margin-left: auto; margin-right: auto; font-size: inherit; overflow: visible; vertical-align: middle; position:relative;">
<defs><pattern id="area_pattern" width="8" height="8" patternunits="userSpaceOnUse"><path class="pattern-line" d="M 0,8 l 8,-8 M -1,1 l 4,-4 M 6,10 l 4,-4" stroke="#FF0000" stroke-width="1.5" stroke-linecap="round" shape-rendering="geometricPrecision"></path></pattern></defs>
<style> text { font-family: ui-monospace, 'Cascadia Code', 'Source Code Pro', Menlo, Consolas, 'DejaVu Sans Mono', monospace; stroke-width: 0.15em; paint-order: stroke; stroke-linejoin: round; cursor: default; } .vert-line:hover rect { fill: #911EB4; fill-opacity: 40%; stroke: #FFFFFF60; color: red; } .vert-line:hover text { stroke: white; fill: #212427; } .horizontal-line:hover text {stroke: white; fill: #212427; } .ref-line:hover rect { stroke: #FFFFFF60; } .ref-line:hover line { stroke: #FF0000; } .ref-line:hover text { stroke: white; fill: #212427; } .y-axis-line:hover rect { fill: #EDEDED; fill-opacity: 60%; stroke: #FFFFFF60; color: red; } .y-axis-line:hover text { stroke: white; stroke-width: 0.20em; fill: #1A1C1F; } </style>
<line x1="0.0" y1="5.0" x2="0.0" y2="125.0" stroke="#BFBFBF" stroke-width="4"></line><rect x="0.0" y="45.0" width="289.41176470588226" height="40" stroke="#577B8D" stroke-width="80" fill="#577B8D"></rect><g class="horizontal-line"><rect x="0" y="45.0" width="600" height="40" stroke="transparent" stroke-width="12" fill="transparent"></rect><text x="10.0" y="25" fill="transparent" stroke="transparent" font-size="30px">0.19</text></g>
</svg>
</div></td>
<td class="gt_row gt_right">$0.9</td>
<td class="gt_row gt_right"><div>
<svg viewbox="0 0 600 130" style="height: 3em; margin-left: auto; margin-right: auto; font-size: inherit; overflow: visible; vertical-align: middle; position:relative;">
<defs><pattern id="area_pattern" width="8" height="8" patternunits="userSpaceOnUse"><path class="pattern-line" d="M 0,8 l 8,-8 M -1,1 l 4,-4 M 6,10 l 4,-4" stroke="#FF0000" stroke-width="1.5" stroke-linecap="round" shape-rendering="geometricPrecision"></path></pattern></defs>
<style> text { font-family: ui-monospace, 'Cascadia Code', 'Source Code Pro', Menlo, Consolas, 'DejaVu Sans Mono', monospace; stroke-width: 0.15em; paint-order: stroke; stroke-linejoin: round; cursor: default; } .vert-line:hover rect { fill: #911EB4; fill-opacity: 40%; stroke: #FFFFFF60; color: red; } .vert-line:hover text { stroke: white; fill: #212427; } .horizontal-line:hover text {stroke: white; fill: #212427; } .ref-line:hover rect { stroke: #FFFFFF60; } .ref-line:hover line { stroke: #FF0000; } .ref-line:hover text { stroke: white; fill: #212427; } .y-axis-line:hover rect { fill: #EDEDED; fill-opacity: 60%; stroke: #FFFFFF60; color: red; } .y-axis-line:hover text { stroke: white; stroke-width: 0.20em; fill: #1A1C1F; } </style>
<line x1="0.0" y1="5.0" x2="0.0" y2="125.0" stroke="#BFBFBF" stroke-width="4"></line><rect x="0.0" y="45.0" width="93.74999999999987" height="40" stroke="#577B8D" stroke-width="80" fill="#577B8D"></rect><g class="horizontal-line"><rect x="0" y="45.0" width="600" height="40" stroke="transparent" stroke-width="12" fill="transparent"></rect><text x="10.0" y="25" fill="transparent" stroke="transparent" font-size="30px">0.050</text></g>
</svg>
</div></td>
</tr>
<tr class="odd">
<td class="gt_row gt_left gt_stub" data-quarto-table-cell-role="th">Grand Total</td>
<td class="gt_row gt_right" style="font-style: bolder; background-color: #EEEEEE; border-top: 2px solid grey; border-bottom: 2px solid grey">1,088</td>
<td class="gt_row gt_right" style="font-style: bolder; background-color: #EEEEEE; border-top: 2px solid grey; border-bottom: 2px solid grey; color: #EEEEEE; font-size: 0.5">None</td>
<td class="gt_row gt_right" style="font-style: bolder; background-color: #EEEEEE; border-top: 2px solid grey; border-bottom: 2px solid grey">$18.7</td>
<td class="gt_row gt_right" style="font-style: bolder; background-color: #EEEEEE; border-top: 2px solid grey; border-bottom: 2px solid grey; color: #EEEEEE; font-size: 0.5">None</td>
</tr>
</tbody><tfoot class="gt_sourcenotes">
<tr class="odd">
<td colspan="5" class="gt_sourcenote">Figure 2.1d: Table with data bar</td>
</tr>
</tfoot>

</table>


</div>
        
</div>
</div>
</div>
<p><code>great_tables</code> vẫn chưa thực sự render ra được bảng biểu đúng như setting.</p>
<p>Bài thực hành đến đây là kết thúc! 🚀</p>
</section>
</section>
<section id="references" class="level1">
<h1>References</h1>
<ol type="1">
<li><a href="https://www.storytellingwithdata.com/books" class="uri">https://www.storytellingwithdata.com/books</a></li>
<li><a href="https://rpubs.com/chidungkt/1139405" class="uri">https://rpubs.com/chidungkt/1139405</a></li>
<li><a href="https://posit-dev.github.io/great-tables/articles/intro.html" class="uri">https://posit-dev.github.io/great-tables/articles/intro.html</a></li>
</ol>


<!-- -->

</section>

 ]]></description>
  <category>Python</category>
  <category>Visualization</category>
  <guid>https://lktuan.github.io/blog/2024-05-22-swd-p2-improve-table/</guid>
  <pubDate>Tue, 21 May 2024 17:00:00 GMT</pubDate>
  <media:content url="https://lktuan.github.io/blog/2024-05-22-swd-p2-improve-table/SWD-Cover-FULL-R5-MED.png" medium="image" type="image/png" height="180" width="144"/>
</item>
<item>
  <title>Python is cool ❄</title>
  <dc:creator>Tuan Le Khac</dc:creator>
  <link>https://lktuan.github.io/blog/2024-05-21-python-is-cool/</link>
  <description><![CDATA[ 





<section id="motivation" class="level1">
<h1>1. Motivation</h1>
<hr>
<p>Đây là một bài thực hành theo một <a href="https://github.com/chiphuyen/python-is-cool/tree/master">post</a> bởi chị <a href="https://huyenchip.com/">Chip Huyen</a> về một số features đặc biệt của Python. Là một DA không sử dụng Python quá nhiều, chỉ một số feature dưới đây là mình đã từng <em>nghe</em> qua. Hi vọng bài thực hành sẽ giúp mình hứng thú với Python hơn!</p>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="1">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 100.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lktuan.github.io/blog/2024-05-21-python-is-cool/python.jpg" class="img-fluid figure-img" style="width:100.0%"></p>
<figcaption>Dong Nai Cultural Nature Reserve, a python lying along the stream waiting for the prey. Photo credit to <a href="https://www.instagram.com/vietnamphotos_herping/">PhucNguyenPhotos</a></figcaption>
</figure>
</div>
</div>
</div>
</div>
</section>
<section id="lambda-map-filter-reduce" class="level1">
<h1>2. Lambda, map, filter, &amp; reduce</h1>
<hr>
<p>Lambda cho phép người dùng định nghĩa in-line functions. Việc sử dụng <code>lambda()</code> rất thuận tiện khi gọi lại (callback ~ một function được thực thi sau khi một function khác được thực thi; một cách lưu trữ function) hoặc khi đầu ra của một function là đối số cho một function khác.</p>
<p>Hai hàm <code>square_fn</code> và <code>square_ld</code> dưới đây là một:</p>
<div id="c965b38d" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> square_fn(x):</span>
<span id="cb1-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> x</span>
<span id="cb1-3"></span>
<span id="cb1-4">square_ld <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> x : x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> x</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>):</span>
<span id="cb1-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">assert</span> square_fn(i) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> square_ld(i)</span></code></pre></div>
</div>
<p><code>lambda</code> rất hữu ích khi sử dụng cùng với các function khác như <code>map</code>, <code>filter</code>, và <code>reduce</code> (mình rất hay sử dụng pattern này trên Excel 😂). <code>map(fn, interable)</code> sẽ apply hàm <code>fn</code> cho tất cả các phần tử trong <code>iterable</code> (như list, set, dict, tuple, string), trả về map object.</p>
<div id="7834c243" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1">nums <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1001</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">37500</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">27</span>]</span>
<span id="cb2-2">nums_squared <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> num <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> nums]</span>
<span id="cb2-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(nums_squared)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[0.1111111111111111, 0.08163265306122448, 0.0007125340444444445, 2.194787379972565]</code></pre>
</div>
</div>
<p>Dùng <code>map</code> và một hàm callback, cho ra kết quả tương đương:</p>
<div id="8614c499" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb4-1">nums_squared_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(square_fn, nums)</span>
<span id="cb4-2">nums_squared_2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> x: x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x, nums)</span>
<span id="cb4-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(nums_squared_1)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># list to list the elements of map object</span></span>
<span id="cb4-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(nums_squared_2))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[0.1111111111111111, 0.08163265306122448, 0.0007125340444444445, 2.194787379972565]
[0.1111111111111111, 0.08163265306122448, 0.0007125340444444445, 2.194787379972565]</code></pre>
</div>
</div>
<p>Có thể dùng <code>map</code> với nhiều hơn 1 iterable. Ví dụ muốn tính MSE cho một hồi quy tuyến tính đơn giản <code>f(x) = ax + b</code> với ground tru <code>labels</code>, hai phương pháp sau tương đương:</p>
<div id="83c6867c" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb6-1">a, b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span></span>
<span id="cb6-2">xs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]</span>
<span id="cb6-3">labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.4</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">8.9</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">10.9</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">15.3</span>]</span>
<span id="cb6-4"></span>
<span id="cb6-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Phương pháp 1, loop</span></span>
<span id="cb6-6">errors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb6-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i,x <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(xs):</span>
<span id="cb6-8">    errors.append( (a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> labels[i])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> )</span>
<span id="cb6-9">result_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(errors)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(xs)</span>
<span id="cb6-10"></span>
<span id="cb6-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Phương pháp 2, map</span></span>
<span id="cb6-12">diff <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> x, y: (a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> y) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, xs, labels) </span>
<span id="cb6-13">result_2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(diff)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.5</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(xs)</span>
<span id="cb6-14"></span>
<span id="cb6-15"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(result_1, result_2)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>0.35089172119045514 0.35089172119045514</code></pre>
</div>
</div>
<p><code>filter(fn, iterable)</code> giống như <code>map</code>, tuy nhiên <code>fn</code> là một hàm trả về giá trị boolean true/false, và <code>filter</code> sẽ trả về các phần tử của <code>iterable</code> khi <code>fn</code> trả về true.</p>
<div id="c3f91908" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb8-1">bad_preds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">filter</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> x: x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, errors)</span>
<span id="cb8-2"></span>
<span id="cb8-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(bad_preds))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[0.8100000000000006, 0.6400000000000011]</code></pre>
</div>
</div>
<p><code>reduce(fn, iterable, initializer)</code> được dùng khi ta muốn áp dụng một toán lên tất cả thành phần trong danh sách. Ví dụ muốn tính kết quả nhân của toàn bộ phần tử:</p>
<div id="e7da065a" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb10-1">product <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb10-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> nums:</span>
<span id="cb10-3">    product <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> num</span>
<span id="cb10-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(product)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>0.0037662551440329215</code></pre>
</div>
</div>
<p>Sử dụng <code>reduce</code>:</p>
<div id="965d7a02" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> functools <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">reduce</span></span>
<span id="cb12-2"></span>
<span id="cb12-3">product <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">reduce</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> x, y: x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> y, nums)</span>
<span id="cb12-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(product)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>0.0037662551440329215</code></pre>
</div>
</div>
<section id="hiệu-suất-hàm-lambda" class="level3">
<h3 class="anchored" data-anchor-id="hiệu-suất-hàm-lambda">Hiệu suất hàm Lambda</h3>
<p>Lambda được thiết kế để sử dụng một lần. Mỗi lần được gọi, hàm <code>lambda x: dosomething(x)</code> đều được tạo lại, và do đó ảnh hưởng tới hiệu suất.</p>
<p>Khi hàm lambda được định nghĩa trước <code>fn = lambda x: dosomething(x)</code>, hiệu suất của nó vẫn chậm hơn <code>def</code>, tuy nhiên không <a href="https://stackoverflow.com/questions/26540885/lambda-is-slower-than-function-call-in-python-why">đáng kể</a>.</p>
<p>🚀Nguyên văn chị Chip:</p>
<blockquote class="blockquote">
<p>Even though I find lambdas cool, I personally recommend using named functions when you can for the sake of clarity.</p>
</blockquote>
</section>
</section>
<section id="list-manipulation" class="level1">
<h1>3. List manipulation</h1>
<hr>
<section id="unpacking" class="level2">
<h2 class="anchored" data-anchor-id="unpacking">3.1. Unpacking</h2>
<p>Chúng ta có thể “giải nén” một list như thế này:</p>
<div id="9cd0545a" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb14-1">elems <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]</span>
<span id="cb14-2">a,b,c,d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> elems</span>
<span id="cb14-3"></span>
<span id="cb14-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(a,b,c,d)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>1 2 3 4</code></pre>
</div>
</div>
<p>Cũng có thể làm như thế này:</p>
<div id="9bd48465" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb16-1">a, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>new_elems, d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> elems <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remember the char * for extended unpacking</span></span>
<span id="cb16-2"></span>
<span id="cb16-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(a)</span>
<span id="cb16-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(new_elems)</span>
<span id="cb16-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(b)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>1
[2, 3]
2</code></pre>
</div>
</div>
</section>
<section id="slicing" class="level2">
<h2 class="anchored" data-anchor-id="slicing">3.2. Slicing</h2>
<p>Chúng ta có thể reverse/đảo ngược một list với <code>[::-1]</code></p>
<div id="847cae59" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb18-1">elem <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>))</span>
<span id="cb18-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(elem)</span>
<span id="cb18-3"></span>
<span id="cb18-4"></span>
<span id="cb18-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(elem[::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
[9, 8, 7, 6, 5, 4, 3, 2, 1, 0]</code></pre>
</div>
</div>
<p>Cú pháp <code>[x:y:z]</code> có nghĩa là lấy <strong><em>mỗi</em></strong> phần tử thứ <code>z</code> từ index <code>x</code> tới index <code>y</code>. Khi <code>z</code> âm, tương đương với việc lấy theo thứ tự ngược lại. <code>x</code> để trống chỉ việc lấy từ phần tử đầu tiên, <code>y</code> để rỗng chỉ việc lấy tới phần tử cuối cùng.</p>
<div id="492587cd" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb20-1">evens <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> elem[::<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb20-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(evens)</span>
<span id="cb20-3"></span>
<span id="cb20-4">reversed_evens <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> elem[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb20-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(reversed_evens)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[0, 2, 4, 6, 8]
[2, 0]</code></pre>
</div>
</div>
<p>Cũng có thể dùng slicing để xóa các phần tử như thế này:</p>
<div id="858128d0" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">del</span> elems[::<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb22-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(elems)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[2, 4]</code></pre>
</div>
</div>
</section>
<section id="insertion" class="level2">
<h2 class="anchored" data-anchor-id="insertion">3.3. Insertion</h2>
<p>Chúng ta có thể thay đổi giá trị một phần tử trong một list như sau:</p>
<div id="06d07a82" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb24-1">elems <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>))</span>
<span id="cb24-2"></span>
<span id="cb24-3">elems[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb24-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(elems)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[0, 100, 2, 3, 4, 5, 6, 7, 8, 9]</code></pre>
</div>
</div>
<p>Cũng có thể thay thế một giá trị bằng nhiều giá trị:</p>
<div id="6fc8d29f" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb26-1">elems <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>))</span>
<span id="cb26-2">elems[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>]</span>
<span id="cb26-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(elems)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[0, 20, 30, 40, 2, 3, 4, 5, 6, 7, 8, 9]</code></pre>
</div>
</div>
<p>Nếu chúng ta muốn thêm 3 giá trị <code>0.3, 0.4, 0.5</code> vào giữa phần tử thứ 0 và 1 của list này, thì:</p>
<div id="cd128cb8" class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb28-1">elems <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>))</span>
<span id="cb28-2">elems[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.3</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.4</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.5</span>]</span>
<span id="cb28-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(elems)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[0, 0.3, 0.4, 0.5, 1, 2, 3, 4, 5, 6, 7, 8, 9]</code></pre>
</div>
</div>
</section>
<section id="flattening" class="level2">
<h2 class="anchored" data-anchor-id="flattening">3.4. Flattening</h2>
<p>Chúng ta có thể flatten một list sử dung <code>sum(0)</code>:</p>
<div id="123cbfdd" class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb30-1">list_of_lists <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>]]</span>
<span id="cb30-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(list_of_lists, [])</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="16">
<pre><code>[1, 2, 3, 4, 5, 6]</code></pre>
</div>
</div>
<p>Cũng có thể sử dụng recursive lambda (another beauty of lambda)</p>
<div id="0a6fd793" class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb32-1">nested_lists <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], [[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>], [[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>], [[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>, [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>]]]]]]</span>
<span id="cb32-2">flatten <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> x: [y <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> x <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> y <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> flatten(i)] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(x) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">is</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> [x]</span>
<span id="cb32-3"></span>
<span id="cb32-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(flatten(nested_lists))</span>
<span id="cb32-5"></span>
<span id="cb32-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This line of code is from</span></span>
<span id="cb32-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># https://github.com/sahands/python-by-example/blob/master/python-by-example.rst#flattening-lists</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]</code></pre>
</div>
</div>
</section>
<section id="list-vs-generator" class="level2">
<h2 class="anchored" data-anchor-id="list-vs-generator">3.5. List vs Generator</h2>
<p>🚀Generator là cái gì vậy? Trích <a href="https://manhhomienbienthuy.github.io/2016/01/05/python-iterator-generator.html">bài viết</a>:</p>
<blockquote class="blockquote">
<p>Từ generator được sử dụng cho cả hàm (hàm generator là hàm đã nói ở trên) và kết quả mà hàm đó sinh ra (đối tượng được hàm generator sinh ra cũng được gọi là generator). Vì vậy đôi khi việc này gây khó hiểu một chút. Hãy xem ví dụ về việc tạo n-grams từ một danh sách tokens dưới đây để hiểu sự khác biệt giữa list và generator:</p>
</blockquote>
<div id="7bd8f313" class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb34-1">tokens <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'i'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'want'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'to'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'go'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'to'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'school'</span>]</span>
<span id="cb34-2"></span>
<span id="cb34-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> ngrams(tokens, n):</span>
<span id="cb34-4">    length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(tokens)</span>
<span id="cb34-5">    grams <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb34-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb34-7">        grams.append(tokens[i:i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>n])</span>
<span id="cb34-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> grams</span>
<span id="cb34-9"></span>
<span id="cb34-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(ngrams(tokens, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[['i', 'want', 'to'], ['want', 'to', 'go'], ['to', 'go', 'to'], ['go', 'to', 'school']]</code></pre>
</div>
</div>
<p>Trong ví dụ này, chúng ta phải lưu toàn bộ n-grams một lúc. Nếu có <code>m</code> tokens, memory requirement là <code>O(nm)</code> - sẽ là vấn đề nếu <code>m</code> lớn. Thay vào đó, chúng ta có thể sử dụng generator để tạo n-grams tiếp theo khi được yêu cầu. Đây gọi là lazy evaluation. Chúng ta có thể tạo một hàm <code>ngrams</code> trả về một generator sử dụng keyword <code>yield</code>, lúc này memory requirement là <code>O(n+m)</code>.</p>
<div id="ba058c6e" class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb36-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> ngrams(tokens, n):</span>
<span id="cb36-2">    length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(tokens)</span>
<span id="cb36-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb36-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">yield</span> tokens[i:i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>n]</span>
<span id="cb36-5"></span>
<span id="cb36-6">ngrams_generator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ngrams(tokens, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb36-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(ngrams_generator)</span>
<span id="cb36-8"></span>
<span id="cb36-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> ngram <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> ngrams_generator:</span>
<span id="cb36-10">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(ngram)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;generator object ngrams at 0x000002883137D210&gt;
['i', 'want', 'to']
['want', 'to', 'go']
['to', 'go', 'to']
['go', 'to', 'school']</code></pre>
</div>
</div>
<p>Một cách khác để tạo n-grams là slice để lấy các sub-list <code>[0, 1, 2, ...,-n]</code>, <code>[1, 2, 3, ...,-n+1]</code>, <code>[2, 3, 4, ...,-n+2]</code>,… <code>[n-1, n, ...,-1]</code>, sau đó <code>zip</code> chúng lại:</p>
<div id="08c8368c" class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb38-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> ngrams(tokens, n):</span>
<span id="cb38-2">    length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(tokens)</span>
<span id="cb38-3">    slices <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (tokens[i:length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(n))</span>
<span id="cb38-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>slices)</span>
<span id="cb38-5"></span>
<span id="cb38-6">ngrams_generator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ngrams(tokens, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb38-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(ngrams_generator)</span>
<span id="cb38-8"></span>
<span id="cb38-9"></span>
<span id="cb38-10"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> ngram <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> ngrams_generator:</span>
<span id="cb38-11">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(ngram)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;zip object at 0x00000288313A2FC0&gt;
('i', 'want', 'to')
('want', 'to', 'go')
('to', 'go', 'to')
('go', 'to', 'school')</code></pre>
</div>
</div>
<p>Lưu ý chúng ta sử dụng <code>(tokens[...] for i in range(n))</code>, chứ không phải <code>[tokens[...] for i in range(n)]</code>. <code>[]</code> trả về một list, <code>()</code> trả về generator. # 4. Classes &amp; magic methods</p>
<hr>
<p>Trong Python, magic methods được prefixed và suffixed bởi double underscore <code>__</code> (aka dunder). Magic method được biết đến rộng rãi nhất là <code>__init__</code>.</p>
<div id="0397cad9" class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb40-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Node:</span>
<span id="cb40-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">""" A struct to denote the node of a binary tree.</span></span>
<span id="cb40-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    It contains a value and pointers to left and right children.</span></span>
<span id="cb40-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb40-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, value, left<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>):</span>
<span id="cb40-6">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> value</span>
<span id="cb40-7">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> left</span>
<span id="cb40-8">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> right</span></code></pre></div>
</div>
<p>In ra object, tuy nhiên nhìn không tường minh lắm!</p>
<div id="fcc6bb66" class="cell" data-execution_count="22">
<div class="sourceCode cell-code" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb41-1">root <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Node(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb41-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(root) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># &lt;__main__.Node object at 0x1069c4518&gt;</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;__main__.Node object at 0x00000288313A26D0&gt;</code></pre>
</div>
</div>
<p>Chúng ta mong muốn khi in ra một Node, giá trị của nó cũng như giá trị của các Node con (nếu có) cũng sẽ được in ra. Chúng ta dùng <code>__repr__</code>:</p>
<div id="adf9b244" class="cell" data-execution_count="23">
<div class="sourceCode cell-code" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb43-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Node:</span>
<span id="cb43-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">""" A struct to denote the node of a binary tree.</span></span>
<span id="cb43-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    It contains a value and pointers to left and right children.</span></span>
<span id="cb43-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb43-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, value, left<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>):</span>
<span id="cb43-6">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> value</span>
<span id="cb43-7">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> left</span>
<span id="cb43-8">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> right</span>
<span id="cb43-9"></span>
<span id="cb43-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__repr__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb43-11">        strings <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'value: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>value<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>]</span>
<span id="cb43-12">        strings.append(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'left: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>left<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>value<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.left <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'left: None'</span>)</span>
<span id="cb43-13">        strings.append(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'right: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>right<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>value<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.right <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'right: None'</span>)</span>
<span id="cb43-14">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">', '</span>.join(strings)</span>
<span id="cb43-15"></span>
<span id="cb43-16">left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Node(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb43-17">root <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Node(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, left)</span>
<span id="cb43-18"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(root) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># value: 5, left: 4, right: None</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>value: 5, left: 4, right: None</code></pre>
</div>
</div>
<p>Chúng ta cũng muốn hai Node có thể được so sánh được với nhau, vì thế tạo ra các magic method để implement các operator: <code>==</code> với <code>__eq__</code>, <code>&gt;</code> với <code>__lt__</code>, ‘&gt;=’ với <code>__ge__</code>:</p>
<div id="8e45246c" class="cell" data-execution_count="24">
<div class="sourceCode cell-code" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb45-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Node:</span>
<span id="cb45-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">""" A struct to denote the node of a binary tree.</span></span>
<span id="cb45-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    It contains a value and pointers to left and right children.</span></span>
<span id="cb45-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb45-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, value, left<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>):</span>
<span id="cb45-6">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> value</span>
<span id="cb45-7">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> left</span>
<span id="cb45-8">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> right</span>
<span id="cb45-9"></span>
<span id="cb45-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__eq__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, other):</span>
<span id="cb45-11">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> other.value</span>
<span id="cb45-12"></span>
<span id="cb45-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__lt__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, other):</span>
<span id="cb45-14">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> other.value</span>
<span id="cb45-15"></span>
<span id="cb45-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__ge__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, other):</span>
<span id="cb45-17">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> other.value</span>
<span id="cb45-18"></span>
<span id="cb45-19"></span>
<span id="cb45-20">left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Node(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb45-21">root <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Node(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, left)</span>
<span id="cb45-22"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> root) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># False</span></span>
<span id="cb45-23"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> root) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># True</span></span>
<span id="cb45-24"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> root) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># False</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>False
True
False</code></pre>
</div>
</div>
<p>Xem <a href="https://www.tutorialsteacher.com/python/magic-methods-in-python">ở đây</a>, hoặc <a href="https://docs.python.org/3/reference/datamodel.html#special-method-names">ở đây</a> danh sách đầy đủ các magic method mà Python hỗ trợ.</p>
<p>Một số magic method khác cần chú ý <code>__len__</code>, <code>__str__</code>, <code>__iter__</code>, and <code>__slots__</code> (tham khảo <a href="https://stackoverflow.com/questions/472000/usage-of-slots/28059785#28059785">đây</a>)</p>
</section>
</section>
<section id="local-namespace-objects-attributes" class="level1">
<h1>5. Local namespace, object’s attributes</h1>
<hr>
<p>Hàm <code>locals()</code> trả về danh sách các biến nằm trong local namespace:</p>
<div id="21a7bd3d" class="cell" data-execution_count="25">
<div class="sourceCode cell-code" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb47-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Model1:</span>
<span id="cb47-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, hidden_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, num_layers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, learning_rate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3e-4</span>):</span>
<span id="cb47-3">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">locals</span>())</span>
<span id="cb47-4">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.hidden_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hidden_size</span>
<span id="cb47-5">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.num_layers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> num_layers</span>
<span id="cb47-6">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.learning_rate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> learning_rate</span>
<span id="cb47-7"></span>
<span id="cb47-8">model1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Model1()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>{'self': &lt;__main__.Model1 object at 0x00000288313D2850&gt;, 'hidden_size': 100, 'num_layers': 3, 'learning_rate': 0.0003}</code></pre>
</div>
</div>
<p>Các attributes của 1 object cũng được lưu hết trong <code>__dict__</code>:</p>
<div id="9d1cb5c2" class="cell" data-execution_count="26">
<div class="sourceCode cell-code" id="cb49" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb49-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(model1.__dict__)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>{'hidden_size': 100, 'num_layers': 3, 'learning_rate': 0.0003}</code></pre>
</div>
</div>
<p>Khi có quá nhiều arguments, việc assign nó trong <code>__init__</code> trở nên phiền hà, chúng ta có thể làm như sau:</p>
<div id="b69e9d7e" class="cell" data-execution_count="27">
<div class="sourceCode cell-code" id="cb51" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb51-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Model2:</span>
<span id="cb51-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, hidden_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, num_layers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, learning_rate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3e-4</span>):</span>
<span id="cb51-3">        params <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">locals</span>()</span>
<span id="cb51-4">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">del</span> params[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'self'</span>]</span>
<span id="cb51-5">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.__dict__ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> params</span>
<span id="cb51-6"></span>
<span id="cb51-7">model2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Model2()</span>
<span id="cb51-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(model2.__dict__)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>{'hidden_size': 100, 'num_layers': 3, 'learning_rate': 0.0003}</code></pre>
</div>
</div>
<p>Thậm chí rất tiện khi làm việc với <code>*kwargs</code>:</p>
<div id="75d1c2c2" class="cell" data-execution_count="28">
<div class="sourceCode cell-code" id="cb53" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb53-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Model3:</span>
<span id="cb53-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs):</span>
<span id="cb53-3">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.__dict__ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> kwargs</span>
<span id="cb53-4"></span>
<span id="cb53-5">model3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Model3(hidden_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, num_layers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, learning_rate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3e-4</span>)</span>
<span id="cb53-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(model3.__dict__)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>{'hidden_size': 100, 'num_layers': 3, 'learning_rate': 0.0003}</code></pre>
</div>
</div>
<p>Đọc thêm về <code>*args</code> và <code>*kwargs</code> ở <a href="https://manhhomienbienthuy.github.io/2019/09/20/python-args-kwargs.html">đây</a>.</p>
</section>
<section id="wild-import" class="level1">
<h1>6. Wild Import</h1>
<hr>
<p>Chúng ta thường <code>import</code> tất cả như thế này:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>file.py</strong></pre>
</div>
<div class="sourceCode" id="cb55" data-filename="file.py" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb55-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| eval: false</span></span>
<span id="cb55-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> parts <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span></span></code></pre></div>
</div>
<p>Sẽ là vô trách nhiệm khi chúng ta import toàn bộ module, ví dụ nếu <code>parts.py</code> có cấu trúc như thế này:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>parts.py</strong></pre>
</div>
<div class="sourceCode" id="cb56" data-filename="parts.py" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb56-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| eval: false</span></span>
<span id="cb56-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy </span>
<span id="cb56-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tensorflow </span>
<span id="cb56-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Encoder: </span>
<span id="cb56-5">    ... </span>
<span id="cb56-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Decoder: </span>
<span id="cb56-7">    ... </span>
<span id="cb56-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Loss: </span>
<span id="cb56-9">    ... </span>
<span id="cb56-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> helper(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>args, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs): </span>
<span id="cb56-11">    ...</span>
<span id="cb56-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> utils(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>args, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs): </span>
<span id="cb56-13">    ... </span></code></pre></div>
</div>
<p>Vì <code>parts.py</code> không định nghĩa <code>__all__</code>, nên <code>file.py</code> sẽ import tất cả Encoder, Decoder, Loss, helper, untils cùng với numpy và tensorFlow. Nếu chỉ muốn import Encoder, Decoder, Loss, chúng ta nên làm như sau:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>parts.py</strong></pre>
</div>
<div class="sourceCode" id="cb57" data-filename="parts.py" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb57-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| eval: false</span></span>
<span id="cb57-2">__all__ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Encoder'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Decoder'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Loss'</span>] </span>
<span id="cb57-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy </span>
<span id="cb57-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tensorflow </span>
<span id="cb57-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Encoder: </span>
<span id="cb57-6">    ... </span></code></pre></div>
</div>
<p>Chúng ta có thể dùng <code>__all__</code> để tìm hiểu thành phần một module.</p>
</section>
<section id="decorator-to-time-your-functions" class="level1">
<h1>7. Decorator to time your functions</h1>
<hr>
<p>Chúng ta thường muốn đo lường thời gian chạy của 1 function. Các tự nhiên thường dùng là đặt <code>time.time()</code> ở hai điểm đầu và cuối giữa các lệnh.</p>
<p>Ví dụ, với hàm tìm số Fibbonacci thứ n, với hai cách (1 cách sử dụng memoization).</p>
<div id="b77ce218" class="cell" data-execution_count="29">
<div class="sourceCode cell-code" id="cb58" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb58-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> fib_helper(n):</span>
<span id="cb58-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:</span>
<span id="cb58-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> n</span>
<span id="cb58-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> fib_helper(n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> fib_helper(n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb58-5"></span>
<span id="cb58-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> fib(n):</span>
<span id="cb58-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">""" fib is a wrapper function so that later we can change its behavior</span></span>
<span id="cb58-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    at the top level without affecting the behavior at every recursion step.</span></span>
<span id="cb58-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb58-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> fib_helper(n)</span>
<span id="cb58-11"></span>
<span id="cb58-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> fib_m_helper(n, computed):</span>
<span id="cb58-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> computed:</span>
<span id="cb58-14">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> computed[n]</span>
<span id="cb58-15">    computed[n] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fib_m_helper(n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, computed) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> fib_m_helper(n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, computed)</span>
<span id="cb58-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> computed[n]</span>
<span id="cb58-17"></span>
<span id="cb58-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> fib_m(n):</span>
<span id="cb58-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> fib_m_helper(n, {<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>})</span></code></pre></div>
</div>
<p>Hãy chắc chắn <code>fib</code> và <code>fib_m</code> tương đương nhau:</p>
<div id="97d831d4" class="cell" data-execution_count="30">
<div class="sourceCode cell-code" id="cb59" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb59-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> n <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>):</span>
<span id="cb59-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">assert</span> fib(n) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> fib_m(n)</span></code></pre></div>
</div>
<p>Đo lường thời gian chạy:</p>
<div id="f49ca409" class="cell" data-execution_count="31">
<div class="sourceCode cell-code" id="cb60" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb60-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> time</span>
<span id="cb60-2"></span>
<span id="cb60-3">start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time.time()</span>
<span id="cb60-4">fib(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>)</span>
<span id="cb60-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Without memoization, it takes </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>time<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>time() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> start<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:7f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> seconds.'</span>)</span>
<span id="cb60-6"></span>
<span id="cb60-7">start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time.time()</span>
<span id="cb60-8">fib_m(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>)</span>
<span id="cb60-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'With memoization, it takes </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>time<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>time() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> start<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.7f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> seconds.'</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Without memoization, it takes 0.151788 seconds.
With memoization, it takes 0.0000000 seconds.</code></pre>
</div>
</div>
<p>Using decorator, define <code>timeit</code>:</p>
<div id="b6b6b461" class="cell" data-execution_count="32">
<div class="sourceCode cell-code" id="cb62" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb62-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> timeit(fn): </span>
<span id="cb62-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># *args and **kwargs are to support positional and named arguments of fn</span></span>
<span id="cb62-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> get_time(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>args, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs): </span>
<span id="cb62-4">        start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time.time() </span>
<span id="cb62-5">        output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fn(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>args, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs)</span>
<span id="cb62-6">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Time taken in </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>fn<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">__name__</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>time<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>time() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> start<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.7f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb62-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> output  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make sure that the decorator returns the output of fn</span></span>
<span id="cb62-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> get_time </span></code></pre></div>
</div>
<p>Sau đó thêm <code>@timeit</code> tới function:</p>
<div id="6559974a" class="cell" data-execution_count="33">
<div class="sourceCode cell-code" id="cb63" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb63-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@timeit</span></span>
<span id="cb63-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> fib(n):</span>
<span id="cb63-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> fib_helper(n)</span>
<span id="cb63-4"></span>
<span id="cb63-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@timeit</span></span>
<span id="cb63-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> fib_m(n):</span>
<span id="cb63-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> fib_m_helper(n, {<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>})</span>
<span id="cb63-8"></span>
<span id="cb63-9">fib(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>)</span>
<span id="cb63-10">fib_m(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Time taken in fib: 0.1794465
Time taken in fib_m: 0.0000000</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="33">
<pre><code>832040</code></pre>
</div>
</div>
</section>
<section id="caching-with-functools.lru_cache" class="level1">
<h1>8. Caching with <code>@functools.lru_cache</code></h1>
<hr>
<p>🚀Nguyên văn chị Huyền: &gt; Memoization is a form of cache: we cache the previously calculated Fibonacci numbers so that we don’t have to calculate them again.</p>
<div id="f5c6b850" class="cell" data-execution_count="34">
<div class="sourceCode cell-code" id="cb66" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb66-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> functools</span>
<span id="cb66-2"></span>
<span id="cb66-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@functools.lru_cache</span>()</span>
<span id="cb66-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> fib_helper(n):</span>
<span id="cb66-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:</span>
<span id="cb66-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> n</span>
<span id="cb66-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> fib_helper(n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> fib_helper(n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb66-8"></span>
<span id="cb66-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@timeit</span></span>
<span id="cb66-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> fib(n):</span>
<span id="cb66-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">""" fib is a wrapper function so that later we can change its behavior</span></span>
<span id="cb66-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    at the top level without affecting the behavior at every recursion step.</span></span>
<span id="cb66-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb66-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> fib_helper(n)</span>
<span id="cb66-15"></span>
<span id="cb66-16">fib(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span>
<span id="cb66-17">fib_m(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Time taken in fib: 0.0000000
Time taken in fib_m: 0.0000000</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="34">
<pre><code>12586269025</code></pre>
</div>
</div>
<p><code>lru</code> stands for “least recently used”. For more information on cache, see <a href="https://docs.python.org/3/library/functools.html">here</a>.</p>
</section>
<section id="reference" class="level1">
<h1>Reference</h1>
<hr>
<p>Source: <a href="https://github.com/chiphuyen/python-is-cool/tree/master" class="uri">https://github.com/chiphuyen/python-is-cool/tree/master</a></p>


<!-- -->

</section>

 ]]></description>
  <category>Python</category>
  <category>Lambda</category>
  <guid>https://lktuan.github.io/blog/2024-05-21-python-is-cool/</guid>
  <pubDate>Mon, 20 May 2024 17:00:00 GMT</pubDate>
  <media:content url="https://lktuan.github.io/blog/2024-05-21-python-is-cool/python.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Kinh tế lượng với Julia 1: Làm quen với Julia</title>
  <dc:creator>Tuan Le Khac</dc:creator>
  <link>https://lktuan.github.io/blog/2024-04-19-qej-1/</link>
  <description><![CDATA[ 





<section id="bắt-đầu-với-julia" class="level1">
<h1>1. Bắt đầu với Julia</h1>
<p>Với giả định mình đã quen thuộc với các concepts của một ngôn ngữ lập trình như: Biến (Variables), Các kiểu dữ liệu (như Arrays và Vectors), Vòng lặp (Loops), Điều hướng (Conditionals - if/else), mình sẽ thử thực hành một vài ví dụ nhỏ với Julia với mục đích tìm hiểu các cú pháp và cấu trúc dữ liệu cơ bản.</p>
<p>Code không hẳn đã được tối ưu, nhưng sẽ dần được tối ưu theo các ví dụ về sau!</p>
<section id="các-ví-dụ-mở-đầu" class="level2">
<h2 class="anchored" data-anchor-id="các-ví-dụ-mở-đầu">1.1. Các ví dụ mở đầu</h2>
<section id="vẽ-một-quá-trình-sinh-nhiễu-trắng-white-noise-process" class="level3">
<h3 class="anchored" data-anchor-id="vẽ-một-quá-trình-sinh-nhiễu-trắng-white-noise-process">1.1.1. Vẽ một quá trình sinh nhiễu trắng (White Noise Process)</h3>
<p><strong>Quản lý Packages</strong>: Có hai cách để quản lý Packages và Versions (Phương pháp thứ 2 được recommend khi Julia cung cấp sẵn một phương pháp SOTA cho quản lý môi trường có khả năng tái tạo lại cao):</p>
<ol type="1">
<li><code>add</code> pakages một cách trực tiếp (ví dụ <code>Pkg.add("MyPackage")</code> hoặc <code>] add MyPackage</code>):</li>
</ol>
<ul>
<li><p>Phải cài đặt <code>IJulia</code> trên toàn cục để sử dụng trong mọi dự án;</p></li>
<li><p><code>]</code> là phím tắt để truy cập vào quản lý pakages.</p></li>
</ul>
<ol start="2" type="1">
<li>Dùng các file <code>Project.toml</code> và <code>Manifest.toml</code>:</li>
</ol>
<ul>
<li><p>Nếu dùng notebook, các file này sẽ được tự đông xác định, nhưng cài đặt sẽ không tự động, cần <code>] instantiate</code>;</p></li>
<li><p>Tệp Project có thể nằm ở folder mẹ của Notebook và Sourcecode.</p></li>
</ul>
<div id="d1e2fbb2" class="cell" data-execution_count="1">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource julia number-lines code-with-copy"><code class="sourceCode julia"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">using</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">LinearAlgebra</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Statistics</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Plots</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">LaTeXStrings</span></span></code></pre></div>
</details>
</div>
<p><strong>Sử dụng các hàm</strong>: Có những function có sẵn trong Julia base, như <code>randn()</code></p>
<div id="853ebfd7" class="cell" data-execution_count="2">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource julia number-lines code-with-copy"><code class="sourceCode julia"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">randn</span>()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="3">
<pre><code>0.09985220377206018</code></pre>
</div>
</div>
<p>Một số hàm cần gọi các thư viện ngoài Base, ví dụ <code>plot()</code> của thư viện <code>Plots</code>:</p>
<div id="bdd84f02" class="cell" data-execution_count="3">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource julia number-lines code-with-copy"><code class="sourceCode julia"><span id="cb4-1">n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb4-2">ep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">randn</span>(n)</span>
<span id="cb4-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>n,ep)</span>
<span id="cb4-4"></span>
<span id="cb4-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># \ep</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="4">
<!--?xml version="1.0" encoding="utf-8"?-->
<svg xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" width="672" height="480" viewbox="0 0 2688 1920">
<defs>
  <clippath id="clip930">
    <rect x="0" y="0" width="2688" height="1920"></rect>
  </clippath>
</defs>
<path clip-path="url(#clip930)" d="M0 1920 L2688 1920 L2688 0 L0 0  Z" fill="#ffffff" fill-rule="evenodd" fill-opacity="1"></path>
<defs>
  <clippath id="clip931">
    <rect x="537" y="0" width="1883" height="1883"></rect>
  </clippath>
</defs>
<path clip-path="url(#clip930)" d="M150.358 1800.78 L2640.76 1800.78 L2640.76 47.2441 L150.358 47.2441  Z" fill="#ffffff" fill-rule="evenodd" fill-opacity="1"></path>
<defs>
  <clippath id="clip932">
    <rect x="150" y="47" width="2491" height="1755"></rect>
  </clippath>
</defs>
<polyline clip-path="url(#clip932)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none" points="197.109,1800.78 197.109,47.2441 "></polyline>
<polyline clip-path="url(#clip932)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none" points="790.4,1800.78 790.4,47.2441 "></polyline>
<polyline clip-path="url(#clip932)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none" points="1383.69,1800.78 1383.69,47.2441 "></polyline>
<polyline clip-path="url(#clip932)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none" points="1976.98,1800.78 1976.98,47.2441 "></polyline>
<polyline clip-path="url(#clip932)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none" points="2570.27,1800.78 2570.27,47.2441 "></polyline>
<polyline clip-path="url(#clip930)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="150.358,1800.78 2640.76,1800.78 "></polyline>
<polyline clip-path="url(#clip930)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="197.109,1800.78 197.109,1781.88 "></polyline>
<polyline clip-path="url(#clip930)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="790.4,1800.78 790.4,1781.88 "></polyline>
<polyline clip-path="url(#clip930)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="1383.69,1800.78 1383.69,1781.88 "></polyline>
<polyline clip-path="url(#clip930)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="1976.98,1800.78 1976.98,1781.88 "></polyline>
<polyline clip-path="url(#clip930)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="2570.27,1800.78 2570.27,1781.88 "></polyline>
<path clip-path="url(#clip930)" d="M197.109 1834 Q193.498 1834 191.669 1837.57 Q189.864 1841.11 189.864 1848.24 Q189.864 1855.34 191.669 1858.91 Q193.498 1862.45 197.109 1862.45 Q200.743 1862.45 202.549 1858.91 Q204.378 1855.34 204.378 1848.24 Q204.378 1841.11 202.549 1837.57 Q200.743 1834 197.109 1834 M197.109 1830.3 Q202.919 1830.3 205.975 1834.9 Q209.054 1839.49 209.054 1848.24 Q209.054 1856.96 205.975 1861.57 Q202.919 1866.15 197.109 1866.15 Q191.299 1866.15 188.22 1861.57 Q185.165 1856.96 185.165 1848.24 Q185.165 1839.49 188.22 1834.9 Q191.299 1830.3 197.109 1830.3 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip930)" d="M769.671 1861.55 L785.99 1861.55 L785.99 1865.48 L764.046 1865.48 L764.046 1861.55 Q766.708 1858.79 771.291 1854.16 Q775.898 1849.51 777.078 1848.17 Q779.324 1845.65 780.203 1843.91 Q781.106 1842.15 781.106 1840.46 Q781.106 1837.71 779.162 1835.97 Q777.241 1834.23 774.139 1834.23 Q771.94 1834.23 769.486 1835 Q767.055 1835.76 764.278 1837.31 L764.278 1832.59 Q767.102 1831.46 769.555 1830.88 Q772.009 1830.3 774.046 1830.3 Q779.416 1830.3 782.611 1832.98 Q785.805 1835.67 785.805 1840.16 Q785.805 1842.29 784.995 1844.21 Q784.208 1846.11 782.102 1848.7 Q781.523 1849.37 778.421 1852.59 Q775.319 1855.78 769.671 1861.55 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip930)" d="M795.852 1830.92 L814.208 1830.92 L814.208 1834.86 L800.134 1834.86 L800.134 1843.33 Q801.152 1842.98 802.171 1842.82 Q803.189 1842.64 804.208 1842.64 Q809.995 1842.64 813.375 1845.81 Q816.754 1848.98 816.754 1854.4 Q816.754 1859.97 813.282 1863.08 Q809.81 1866.15 803.49 1866.15 Q801.314 1866.15 799.046 1865.78 Q796.801 1865.41 794.393 1864.67 L794.393 1859.97 Q796.477 1861.11 798.699 1861.66 Q800.921 1862.22 803.398 1862.22 Q807.402 1862.22 809.74 1860.11 Q812.078 1858.01 812.078 1854.4 Q812.078 1850.78 809.74 1848.68 Q807.402 1846.57 803.398 1846.57 Q801.523 1846.57 799.648 1846.99 Q797.796 1847.4 795.852 1848.28 L795.852 1830.92 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip930)" d="M1358.39 1830.92 L1376.75 1830.92 L1376.75 1834.86 L1362.67 1834.86 L1362.67 1843.33 Q1363.69 1842.98 1364.71 1842.82 Q1365.73 1842.64 1366.75 1842.64 Q1372.53 1842.64 1375.91 1845.81 Q1379.29 1848.98 1379.29 1854.4 Q1379.29 1859.97 1375.82 1863.08 Q1372.35 1866.15 1366.03 1866.15 Q1363.85 1866.15 1361.58 1865.78 Q1359.34 1865.41 1356.93 1864.67 L1356.93 1859.97 Q1359.02 1861.11 1361.24 1861.66 Q1363.46 1862.22 1365.94 1862.22 Q1369.94 1862.22 1372.28 1860.11 Q1374.62 1858.01 1374.62 1854.4 Q1374.62 1850.78 1372.28 1848.68 Q1369.94 1846.57 1365.94 1846.57 Q1364.06 1846.57 1362.19 1846.99 Q1360.33 1847.4 1358.39 1848.28 L1358.39 1830.92 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip930)" d="M1398.51 1834 Q1394.89 1834 1393.07 1837.57 Q1391.26 1841.11 1391.26 1848.24 Q1391.26 1855.34 1393.07 1858.91 Q1394.89 1862.45 1398.51 1862.45 Q1402.14 1862.45 1403.95 1858.91 Q1405.77 1855.34 1405.77 1848.24 Q1405.77 1841.11 1403.95 1837.57 Q1402.14 1834 1398.51 1834 M1398.51 1830.3 Q1404.32 1830.3 1407.37 1834.9 Q1410.45 1839.49 1410.45 1848.24 Q1410.45 1856.96 1407.37 1861.57 Q1404.32 1866.15 1398.51 1866.15 Q1392.7 1866.15 1389.62 1861.57 Q1386.56 1856.96 1386.56 1848.24 Q1386.56 1839.49 1389.62 1834.9 Q1392.7 1830.3 1398.51 1830.3 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip930)" d="M1950.84 1830.92 L1973.06 1830.92 L1973.06 1832.91 L1960.51 1865.48 L1955.63 1865.48 L1967.43 1834.86 L1950.84 1834.86 L1950.84 1830.92 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip930)" d="M1982.23 1830.92 L2000.58 1830.92 L2000.58 1834.86 L1986.51 1834.86 L1986.51 1843.33 Q1987.53 1842.98 1988.54 1842.82 Q1989.56 1842.64 1990.58 1842.64 Q1996.37 1842.64 1999.75 1845.81 Q2003.13 1848.98 2003.13 1854.4 Q2003.13 1859.97 1999.66 1863.08 Q1996.18 1866.15 1989.86 1866.15 Q1987.69 1866.15 1985.42 1865.78 Q1983.17 1865.41 1980.77 1864.67 L1980.77 1859.97 Q1982.85 1861.11 1985.07 1861.66 Q1987.29 1862.22 1989.77 1862.22 Q1993.78 1862.22 1996.11 1860.11 Q1998.45 1858.01 1998.45 1854.4 Q1998.45 1850.78 1996.11 1848.68 Q1993.78 1846.57 1989.77 1846.57 Q1987.9 1846.57 1986.02 1846.99 Q1984.17 1847.4 1982.23 1848.28 L1982.23 1830.92 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip930)" d="M2529.88 1861.55 L2537.52 1861.55 L2537.52 1835.18 L2529.21 1836.85 L2529.21 1832.59 L2537.47 1830.92 L2542.15 1830.92 L2542.15 1861.55 L2549.79 1861.55 L2549.79 1865.48 L2529.88 1865.48 L2529.88 1861.55 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip930)" d="M2569.23 1834 Q2565.62 1834 2563.79 1837.57 Q2561.99 1841.11 2561.99 1848.24 Q2561.99 1855.34 2563.79 1858.91 Q2565.62 1862.45 2569.23 1862.45 Q2572.87 1862.45 2574.67 1858.91 Q2576.5 1855.34 2576.5 1848.24 Q2576.5 1841.11 2574.67 1837.57 Q2572.87 1834 2569.23 1834 M2569.23 1830.3 Q2575.04 1830.3 2578.1 1834.9 Q2581.18 1839.49 2581.18 1848.24 Q2581.18 1856.96 2578.1 1861.57 Q2575.04 1866.15 2569.23 1866.15 Q2563.42 1866.15 2560.34 1861.57 Q2557.29 1856.96 2557.29 1848.24 Q2557.29 1839.49 2560.34 1834.9 Q2563.42 1830.3 2569.23 1830.3 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip930)" d="M2599.39 1834 Q2595.78 1834 2593.95 1837.57 Q2592.15 1841.11 2592.15 1848.24 Q2592.15 1855.34 2593.95 1858.91 Q2595.78 1862.45 2599.39 1862.45 Q2603.03 1862.45 2604.83 1858.91 Q2606.66 1855.34 2606.66 1848.24 Q2606.66 1841.11 2604.83 1837.57 Q2603.03 1834 2599.39 1834 M2599.39 1830.3 Q2605.2 1830.3 2608.26 1834.9 Q2611.34 1839.49 2611.34 1848.24 Q2611.34 1856.96 2608.26 1861.57 Q2605.2 1866.15 2599.39 1866.15 Q2593.58 1866.15 2590.5 1861.57 Q2587.45 1856.96 2587.45 1848.24 Q2587.45 1839.49 2590.5 1834.9 Q2593.58 1830.3 2599.39 1830.3 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><polyline clip-path="url(#clip932)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none" points="150.358,1494.86 2640.76,1494.86 "></polyline>
<polyline clip-path="url(#clip932)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none" points="150.358,1177.61 2640.76,1177.61 "></polyline>
<polyline clip-path="url(#clip932)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none" points="150.358,860.361 2640.76,860.361 "></polyline>
<polyline clip-path="url(#clip932)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none" points="150.358,543.112 2640.76,543.112 "></polyline>
<polyline clip-path="url(#clip932)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none" points="150.358,225.863 2640.76,225.863 "></polyline>
<polyline clip-path="url(#clip930)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="150.358,1800.78 150.358,47.2441 "></polyline>
<polyline clip-path="url(#clip930)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="150.358,1494.86 169.256,1494.86 "></polyline>
<polyline clip-path="url(#clip930)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="150.358,1177.61 169.256,1177.61 "></polyline>
<polyline clip-path="url(#clip930)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="150.358,860.361 169.256,860.361 "></polyline>
<polyline clip-path="url(#clip930)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="150.358,543.112 169.256,543.112 "></polyline>
<polyline clip-path="url(#clip930)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="150.358,225.863 169.256,225.863 "></polyline>
<path clip-path="url(#clip930)" d="M49.9225 1495.31 L79.5983 1495.31 L79.5983 1499.25 L49.9225 1499.25 L49.9225 1495.31 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip930)" d="M93.7186 1508.2 L110.038 1508.2 L110.038 1512.14 L88.0936 1512.14 L88.0936 1508.2 Q90.7556 1505.45 95.3389 1500.82 Q99.9454 1496.17 101.126 1494.82 Q103.371 1492.3 104.251 1490.56 Q105.154 1488.81 105.154 1487.12 Q105.154 1484.36 103.209 1482.63 Q101.288 1480.89 98.1861 1480.89 Q95.9871 1480.89 93.5334 1481.65 Q91.1028 1482.42 88.3251 1483.97 L88.3251 1479.25 Q91.1491 1478.11 93.6028 1477.53 Q96.0565 1476.95 98.0935 1476.95 Q103.464 1476.95 106.658 1479.64 Q109.853 1482.32 109.853 1486.81 Q109.853 1488.94 109.043 1490.87 Q108.256 1492.76 106.149 1495.36 Q105.57 1496.03 102.469 1499.25 Q99.3667 1502.44 93.7186 1508.2 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip930)" d="M49.5521 1178.06 L79.2279 1178.06 L79.2279 1182 L49.5521 1182 L49.5521 1178.06 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip930)" d="M90.1306 1190.95 L97.7695 1190.95 L97.7695 1164.59 L89.4593 1166.26 L89.4593 1162 L97.7232 1160.33 L102.399 1160.33 L102.399 1190.95 L110.038 1190.95 L110.038 1194.89 L90.1306 1194.89 L90.1306 1190.95 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip930)" d="M98.0935 846.16 Q94.4824 846.16 92.6537 849.725 Q90.8482 853.266 90.8482 860.396 Q90.8482 867.502 92.6537 871.067 Q94.4824 874.609 98.0935 874.609 Q101.728 874.609 103.533 871.067 Q105.362 867.502 105.362 860.396 Q105.362 853.266 103.533 849.725 Q101.728 846.16 98.0935 846.16 M98.0935 842.456 Q103.904 842.456 106.959 847.063 Q110.038 851.646 110.038 860.396 Q110.038 869.123 106.959 873.729 Q103.904 878.312 98.0935 878.312 Q92.2834 878.312 89.2047 873.729 Q86.1492 869.123 86.1492 860.396 Q86.1492 851.646 89.2047 847.063 Q92.2834 842.456 98.0935 842.456 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip930)" d="M90.1306 556.457 L97.7695 556.457 L97.7695 530.092 L89.4593 531.758 L89.4593 527.499 L97.7232 525.832 L102.399 525.832 L102.399 556.457 L110.038 556.457 L110.038 560.392 L90.1306 560.392 L90.1306 556.457 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip930)" d="M93.7186 239.208 L110.038 239.208 L110.038 243.143 L88.0936 243.143 L88.0936 239.208 Q90.7556 236.454 95.3389 231.824 Q99.9454 227.171 101.126 225.829 Q103.371 223.306 104.251 221.57 Q105.154 219.81 105.154 218.12 Q105.154 215.366 103.209 213.63 Q101.288 211.894 98.1861 211.894 Q95.9871 211.894 93.5334 212.658 Q91.1028 213.421 88.3251 214.972 L88.3251 210.25 Q91.1491 209.116 93.6028 208.537 Q96.0565 207.958 98.0935 207.958 Q103.464 207.958 106.658 210.644 Q109.853 213.329 109.853 217.82 Q109.853 219.949 109.043 221.87 Q108.256 223.769 106.149 226.361 Q105.57 227.032 102.469 230.25 Q99.3667 233.444 93.7186 239.208 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><polyline clip-path="url(#clip932)" style="stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="220.841,588.319 244.573,858.668 268.304,596.062 292.036,646.767 315.767,627.112 339.499,1270.6 363.231,1037.22 386.962,768.021 410.694,140.661 434.426,1032.82 458.157,673.717 481.889,995.803 505.621,1085.18 529.352,785.008 553.084,720.909 576.815,1033.38 600.547,1103.72 624.279,1388.23 648.01,644.527 671.742,659.682 695.474,1199.12 719.205,676.205 742.937,464.464 766.669,1000.3 790.4,1154.11 814.132,622.921 837.863,967.058 861.595,1098.53 885.327,1134.19 909.058,643.688 932.79,780.262 956.522,852.486 980.253,382.538 1003.98,386.571 1027.72,513.692 1051.45,533.359 1075.18,451.545 1098.91,888.772 1122.64,823.516 1146.37,1093.31 1170.11,670.98 1193.84,1381.49 1217.57,1223.51 1241.3,1153.63 1265.03,916.248 1288.76,1375.72 1312.5,789.595 1336.23,824.184 1359.96,374.099 1383.69,1269.96 1407.42,545.101 1431.15,1751.15 1454.89,1122.18 1478.62,1155.61 1502.35,441.025 1526.08,1459.81 1549.81,382.649 1573.54,537.704 1597.28,686.83 1621.01,1229.3 1644.74,1135.12 1668.47,1243.77 1692.2,596.358 1715.93,755.876 1739.67,520.217 1763.4,726.494 1787.13,756.65 1810.86,957.501 1834.59,1504.51 1858.32,969.939 1882.06,1321.18 1905.79,879.038 1929.52,1044.52 1953.25,828.307 1976.98,643.972 2000.71,1230.09 2024.45,96.8724 2048.18,574.996 2071.91,1514.69 2095.64,846.474 2119.37,1274.97 2143.1,663.916 2166.84,883.641 2190.57,715.986 2214.3,923.377 2238.03,514.634 2261.76,999.309 2285.49,608.819 2309.22,754.41 2332.96,481.276 2356.69,1100.33 2380.42,1289.35 2404.15,340.749 2427.88,665.668 2451.61,891.597 2475.35,944 2499.08,431.189 2522.81,499.892 2546.54,1052.95 2570.27,1062.52 "></polyline>
<path clip-path="url(#clip930)" d="M233.371 1742.33 L534.841 1742.33 L534.841 1638.65 L233.371 1638.65  Z" fill="#ffffff" fill-rule="evenodd" fill-opacity="1"></path>
<polyline clip-path="url(#clip930)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="233.371,1742.33 534.841,1742.33 534.841,1638.65 233.371,1638.65 233.371,1742.33 "></polyline>
<polyline clip-path="url(#clip930)" style="stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="261.042,1690.49 427.069,1690.49 "></polyline>
<path clip-path="url(#clip930)" d="M468.582 1710.18 Q466.777 1714.81 465.064 1716.22 Q463.351 1717.63 460.481 1717.63 L457.078 1717.63 L457.078 1714.06 L459.578 1714.06 Q461.337 1714.06 462.309 1713.23 Q463.282 1712.4 464.462 1709.3 L465.226 1707.35 L454.74 1681.84 L459.254 1681.84 L467.356 1702.12 L475.457 1681.84 L479.971 1681.84 L468.582 1710.18 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip930)" d="M487.263 1703.83 L494.902 1703.83 L494.902 1677.47 L486.592 1679.13 L486.592 1674.87 L494.855 1673.21 L499.531 1673.21 L499.531 1703.83 L507.17 1703.83 L507.17 1707.77 L487.263 1707.77 L487.263 1703.83 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path></svg>
</div>
</div>
<p>Note: thay vì <code>ep</code> chúng ta có thể dùng các ký tự khoa học như epsilon bằng cách <code>\epsilon&lt;TAB&gt;</code> .</p>
<p><strong>Mảng</strong>: <code>ep</code> trong ví dụ trên chính là một mảng (array).</p>
<div id="19302555" class="cell" data-execution_count="4">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource julia number-lines code-with-copy"><code class="sourceCode julia"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">typeof</span>(ep)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="5">
<div class="ansi-escaped-output">
<pre>Vector{Float64}<span class="ansi-bright-black-fg"> (alias for </span><span class="ansi-bright-black-fg">Array{Float64, 1}</span><span class="ansi-bright-black-fg">)</span></pre>
</div>
</div>
</div>
<p>Trích xuất 5 thành tố đầu tiên của mảng</p>
<div id="8e4199eb" class="cell" data-execution_count="5">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource julia number-lines code-with-copy"><code class="sourceCode julia"><span id="cb6-1">ep[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]</span>
<span id="cb6-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Julia là một ngôn ngữ 1-index (như MATLAB hay Fortran, chứ không phải 0 như Python hay C)</span></span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="6">
<pre><code>5-element Vector{Float64}:
 0.8575040389658757
 0.005335428164054084
 0.8330974941796573
 0.673270529185323
 0.7352249380457324</code></pre>
</div>
</div>
<p>Để tìm kiếm trợ giúp và ví dụ cho một hàm, dùng <code>?</code>:</p>
<div id="fb247e10" class="cell" data-execution_count="6">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode numberSource julia number-lines code-with-copy"><code class="sourceCode julia"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># help?&gt; typeof</span></span>
<span id="cb8-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># search: typeof typejoin TypeError</span></span>
<span id="cb8-3"></span>
<span id="cb8-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   typeof(x)</span></span>
<span id="cb8-5"></span>
<span id="cb8-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   Get the concrete type of x.</span></span>
<span id="cb8-7"></span>
<span id="cb8-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   See also eltype.</span></span>
<span id="cb8-9"></span>
<span id="cb8-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   Examples</span></span>
<span id="cb8-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   ≡≡≡≡≡≡≡≡≡≡</span></span>
<span id="cb8-12"></span>
<span id="cb8-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   julia&gt; a = 1//2;</span></span>
<span id="cb8-14">  </span>
<span id="cb8-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   julia&gt; typeof(a)</span></span>
<span id="cb8-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   Rational{Int64}</span></span>
<span id="cb8-17">  </span>
<span id="cb8-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   julia&gt; M = [1 2; 3.5 4];</span></span>
<span id="cb8-19">  </span>
<span id="cb8-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   julia&gt; typeof(M)</span></span>
<span id="cb8-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   Matrix{Float64} (alias for Array{Float64, 2})</span></span></code></pre></div>
</details>
</div>
<p><strong>Vòng lặp</strong>: hãy thử viết lại quy trình tạo random trên bằng <code>for loops</code>.</p>
<div id="08e20d1a" class="cell" data-execution_count="7">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource julia number-lines code-with-copy"><code class="sourceCode julia"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># poor style</span></span>
<span id="cb9-2">n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span> </span>
<span id="cb9-3">ep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">zeros</span>(n) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create an array with 0.0 as initial value</span></span>
<span id="cb9-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>n <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the index is looped for all 1:n, but none vector of those indices is created.</span></span>
<span id="cb9-5">    ep[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">randn</span>()</span>
<span id="cb9-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># indicates the end of a loop</span></span></code></pre></div>
</details>
</div>
<p>The word&nbsp;<code>in</code>&nbsp;from the&nbsp;<code>for</code>&nbsp;loop can be replaced by either&nbsp;<code>∈</code>&nbsp;or&nbsp;<code>=</code>.</p>
<p>Code trên thành công tạo ra các giá trị cho mảng <code>ep</code>, tuy nhiên mối quan hệ giữa <code>i</code> và <code>ep</code> được thể hiện không tường minh. Để cải thiện, hãy dùng <code>eachindex</code>:</p>
<div id="80902ecd" class="cell" data-execution_count="8">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode numberSource julia number-lines code-with-copy"><code class="sourceCode julia"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># better style</span></span>
<span id="cb10-2">n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb10-3">ep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">zeros</span>(n)</span>
<span id="cb10-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">eachindex</span>(ep)</span>
<span id="cb10-5">    ep[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">randn</span>()</span>
<span id="cb10-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span></code></pre></div>
</details>
</div>
<p>Vòng lặp rất có hiệu quả về mặt bộ nhớ tuy nhiên lợi ích chính của nó là (1) thể hiện mã một cách rõ ràng hơn, ít mắc lỗi chính tả hơn, và (2) cho phép trình biên dịch linh hoạt tạo mã nhanh một cách sáng tạo.</p>
<p>Trong Julia, chúng ta cũng có thể loop một array trực tiệp, như ví dụ dưới đây:</p>
<div id="1e6c7656" class="cell" data-execution_count="9">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode numberSource julia number-lines code-with-copy"><code class="sourceCode julia"><span id="cb11-1">ep_sum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># need to use 0.0 rather than 0</span></span>
<span id="cb11-2">m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb11-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> ep_eval <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> ep[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>m]</span>
<span id="cb11-4">    ep_sum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ep_sum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> ep_eval</span>
<span id="cb11-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb11-6">ep_mean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ep_sum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> m</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="10">
<pre><code>-0.06355262620335231</code></pre>
</div>
</div>
<p>với <code>ep[1:m]</code> trả về các giá trị của vector <code>1</code> đến <code>m</code>.</p>
<p>Julia cũng có các operator/function có sẵn để kiểm tra các kết quả này.</p>
<div id="80b89060" class="cell" data-execution_count="10">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode numberSource julia number-lines code-with-copy"><code class="sourceCode julia"><span id="cb13-1">ep_mean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">≈</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(ep[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>m])</span>
<span id="cb13-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">isapprox</span>(ep_mean, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(ep[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>m])) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># equivalent</span></span>
<span id="cb13-3">ep_mean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">≈</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(ep[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>m]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> m</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="11">
<pre><code>true</code></pre>
</div>
</div>
<p>Gõ <code>\approx&lt;TAB&gt;</code> .</p>
<p><code>≈</code> và <code>isapprox</code> dùng để kiểm tra đẳng thức (equality), khác với giá trị (<code>==</code>), sử dụng cho số và các loại khác.</p>
<p><strong>Định nghĩa hàm</strong>: để thực hành, tiếp tục sử dụng <code>for</code> để viết một hàm biểu diễn lại quá trình trên, nhưng thú vị hơn thì thử bình phương thay vì các trị số random đơn thuần xem sao.</p>
<div id="bbd625b4" class="cell" data-execution_count="11">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode numberSource julia number-lines code-with-copy"><code class="sourceCode julia"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># poor style</span></span>
<span id="cb15-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">generatedata</span>(n)</span>
<span id="cb15-3">    ep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">zeros</span>(n)</span>
<span id="cb15-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">eachindex</span>(ep)</span>
<span id="cb15-5">        ep[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">randn</span>())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># squaring the result</span></span>
<span id="cb15-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb15-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> ep</span>
<span id="cb15-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb15-9"></span>
<span id="cb15-10">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">generatedata</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb15-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(data)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="12">
<!--?xml version="1.0" encoding="utf-8"?-->
<svg xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" width="672" height="480" viewbox="0 0 2688 1920">
<defs>
  <clippath id="clip020">
    <rect x="0" y="0" width="2688" height="1920"></rect>
  </clippath>
</defs>
<path clip-path="url(#clip020)" d="M0 1920 L2688 1920 L2688 0 L0 0  Z" fill="#ffffff" fill-rule="evenodd" fill-opacity="1"></path>
<defs>
  <clippath id="clip021">
    <rect x="537" y="0" width="1883" height="1883"></rect>
  </clippath>
</defs>
<path clip-path="url(#clip020)" d="M158.992 1800.78 L2640.76 1800.78 L2640.76 47.2441 L158.992 47.2441  Z" fill="#ffffff" fill-rule="evenodd" fill-opacity="1"></path>
<defs>
  <clippath id="clip022">
    <rect x="158" y="47" width="2483" height="1755"></rect>
  </clippath>
</defs>
<polyline clip-path="url(#clip022)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none" points="489.374,1800.78 489.374,47.2441 "></polyline>
<polyline clip-path="url(#clip022)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none" points="1009.66,1800.78 1009.66,47.2441 "></polyline>
<polyline clip-path="url(#clip022)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none" points="1529.95,1800.78 1529.95,47.2441 "></polyline>
<polyline clip-path="url(#clip022)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none" points="2050.23,1800.78 2050.23,47.2441 "></polyline>
<polyline clip-path="url(#clip022)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none" points="2570.52,1800.78 2570.52,47.2441 "></polyline>
<polyline clip-path="url(#clip020)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="158.992,1800.78 2640.76,1800.78 "></polyline>
<polyline clip-path="url(#clip020)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="489.374,1800.78 489.374,1781.88 "></polyline>
<polyline clip-path="url(#clip020)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="1009.66,1800.78 1009.66,1781.88 "></polyline>
<polyline clip-path="url(#clip020)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="1529.95,1800.78 1529.95,1781.88 "></polyline>
<polyline clip-path="url(#clip020)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="2050.23,1800.78 2050.23,1781.88 "></polyline>
<polyline clip-path="url(#clip020)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="2570.52,1800.78 2570.52,1781.88 "></polyline>
<path clip-path="url(#clip020)" d="M484.026 1861.55 L500.346 1861.55 L500.346 1865.48 L478.402 1865.48 L478.402 1861.55 Q481.064 1858.79 485.647 1854.16 Q490.253 1849.51 491.434 1848.17 Q493.679 1845.65 494.559 1843.91 Q495.462 1842.15 495.462 1840.46 Q495.462 1837.71 493.517 1835.97 Q491.596 1834.23 488.494 1834.23 Q486.295 1834.23 483.841 1835 Q481.411 1835.76 478.633 1837.31 L478.633 1832.59 Q481.457 1831.46 483.911 1830.88 Q486.364 1830.3 488.401 1830.3 Q493.772 1830.3 496.966 1832.98 Q500.161 1835.67 500.161 1840.16 Q500.161 1842.29 499.35 1844.21 Q498.563 1846.11 496.457 1848.7 Q495.878 1849.37 492.776 1852.59 Q489.675 1855.78 484.026 1861.55 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip020)" d="M1012.67 1835 L1000.86 1853.45 L1012.67 1853.45 L1012.67 1835 M1011.44 1830.92 L1017.32 1830.92 L1017.32 1853.45 L1022.25 1853.45 L1022.25 1857.34 L1017.32 1857.34 L1017.32 1865.48 L1012.67 1865.48 L1012.67 1857.34 L997.067 1857.34 L997.067 1852.82 L1011.44 1830.92 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip020)" d="M1530.35 1846.34 Q1527.2 1846.34 1525.35 1848.49 Q1523.52 1850.65 1523.52 1854.4 Q1523.52 1858.12 1525.35 1860.3 Q1527.2 1862.45 1530.35 1862.45 Q1533.5 1862.45 1535.33 1860.3 Q1537.18 1858.12 1537.18 1854.4 Q1537.18 1850.65 1535.33 1848.49 Q1533.5 1846.34 1530.35 1846.34 M1539.63 1831.69 L1539.63 1835.95 Q1537.87 1835.11 1536.07 1834.67 Q1534.29 1834.23 1532.53 1834.23 Q1527.9 1834.23 1525.44 1837.36 Q1523.01 1840.48 1522.67 1846.8 Q1524.03 1844.79 1526.09 1843.72 Q1528.15 1842.64 1530.63 1842.64 Q1535.84 1842.64 1538.85 1845.81 Q1541.88 1848.96 1541.88 1854.4 Q1541.88 1859.72 1538.73 1862.94 Q1535.58 1866.15 1530.35 1866.15 Q1524.36 1866.15 1521.18 1861.57 Q1518.01 1856.96 1518.01 1848.24 Q1518.01 1840.04 1521.9 1835.18 Q1525.79 1830.3 1532.34 1830.3 Q1534.1 1830.3 1535.88 1830.65 Q1537.69 1830.99 1539.63 1831.69 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip020)" d="M2050.23 1849.07 Q2046.9 1849.07 2044.98 1850.85 Q2043.08 1852.64 2043.08 1855.76 Q2043.08 1858.89 2044.98 1860.67 Q2046.9 1862.45 2050.23 1862.45 Q2053.56 1862.45 2055.49 1860.67 Q2057.41 1858.86 2057.41 1855.76 Q2057.41 1852.64 2055.49 1850.85 Q2053.59 1849.07 2050.23 1849.07 M2045.56 1847.08 Q2042.55 1846.34 2040.86 1844.28 Q2039.19 1842.22 2039.19 1839.26 Q2039.19 1835.11 2042.13 1832.71 Q2045.09 1830.3 2050.23 1830.3 Q2055.39 1830.3 2058.33 1832.71 Q2061.27 1835.11 2061.27 1839.26 Q2061.27 1842.22 2059.58 1844.28 Q2057.92 1846.34 2054.93 1847.08 Q2058.31 1847.87 2060.19 1850.16 Q2062.08 1852.45 2062.08 1855.76 Q2062.08 1860.78 2059 1863.47 Q2055.95 1866.15 2050.23 1866.15 Q2044.51 1866.15 2041.44 1863.47 Q2038.38 1860.78 2038.38 1855.76 Q2038.38 1852.45 2040.28 1850.16 Q2042.18 1847.87 2045.56 1847.08 M2043.84 1839.7 Q2043.84 1842.38 2045.51 1843.89 Q2047.2 1845.39 2050.23 1845.39 Q2053.24 1845.39 2054.93 1843.89 Q2056.64 1842.38 2056.64 1839.7 Q2056.64 1837.01 2054.93 1835.51 Q2053.24 1834 2050.23 1834 Q2047.2 1834 2045.51 1835.51 Q2043.84 1837.01 2043.84 1839.7 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip020)" d="M2545.2 1861.55 L2552.84 1861.55 L2552.84 1835.18 L2544.53 1836.85 L2544.53 1832.59 L2552.8 1830.92 L2557.47 1830.92 L2557.47 1861.55 L2565.11 1861.55 L2565.11 1865.48 L2545.2 1865.48 L2545.2 1861.55 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip020)" d="M2584.56 1834 Q2580.95 1834 2579.12 1837.57 Q2577.31 1841.11 2577.31 1848.24 Q2577.31 1855.34 2579.12 1858.91 Q2580.95 1862.45 2584.56 1862.45 Q2588.19 1862.45 2590 1858.91 Q2591.83 1855.34 2591.83 1848.24 Q2591.83 1841.11 2590 1837.57 Q2588.19 1834 2584.56 1834 M2584.56 1830.3 Q2590.37 1830.3 2593.42 1834.9 Q2596.5 1839.49 2596.5 1848.24 Q2596.5 1856.96 2593.42 1861.57 Q2590.37 1866.15 2584.56 1866.15 Q2578.75 1866.15 2575.67 1861.57 Q2572.61 1856.96 2572.61 1848.24 Q2572.61 1839.49 2575.67 1834.9 Q2578.75 1830.3 2584.56 1830.3 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><polyline clip-path="url(#clip022)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none" points="158.992,1755.17 2640.76,1755.17 "></polyline>
<polyline clip-path="url(#clip022)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none" points="158.992,1414.79 2640.76,1414.79 "></polyline>
<polyline clip-path="url(#clip022)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none" points="158.992,1074.41 2640.76,1074.41 "></polyline>
<polyline clip-path="url(#clip022)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none" points="158.992,734.031 2640.76,734.031 "></polyline>
<polyline clip-path="url(#clip022)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none" points="158.992,393.651 2640.76,393.651 "></polyline>
<polyline clip-path="url(#clip022)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none" points="158.992,53.2715 2640.76,53.2715 "></polyline>
<polyline clip-path="url(#clip020)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="158.992,1800.78 158.992,47.2441 "></polyline>
<polyline clip-path="url(#clip020)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="158.992,1755.17 177.89,1755.17 "></polyline>
<polyline clip-path="url(#clip020)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="158.992,1414.79 177.89,1414.79 "></polyline>
<polyline clip-path="url(#clip020)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="158.992,1074.41 177.89,1074.41 "></polyline>
<polyline clip-path="url(#clip020)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="158.992,734.031 177.89,734.031 "></polyline>
<polyline clip-path="url(#clip020)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="158.992,393.651 177.89,393.651 "></polyline>
<polyline clip-path="url(#clip020)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="158.992,53.2715 177.89,53.2715 "></polyline>
<path clip-path="url(#clip020)" d="M61.4965 1740.97 Q57.8854 1740.97 56.0567 1744.53 Q54.2512 1748.08 54.2512 1755.21 Q54.2512 1762.31 56.0567 1765.88 Q57.8854 1769.42 61.4965 1769.42 Q65.1307 1769.42 66.9363 1765.88 Q68.765 1762.31 68.765 1755.21 Q68.765 1748.08 66.9363 1744.53 Q65.1307 1740.97 61.4965 1740.97 M61.4965 1737.27 Q67.3067 1737.27 70.3622 1741.87 Q73.4409 1746.46 73.4409 1755.21 Q73.4409 1763.93 70.3622 1768.54 Q67.3067 1773.12 61.4965 1773.12 Q55.6864 1773.12 52.6077 1768.54 Q49.5521 1763.93 49.5521 1755.21 Q49.5521 1746.46 52.6077 1741.87 Q55.6864 1737.27 61.4965 1737.27 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip020)" d="M81.6584 1766.57 L86.5427 1766.57 L86.5427 1772.45 L81.6584 1772.45 L81.6584 1766.57 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip020)" d="M106.728 1740.97 Q103.117 1740.97 101.288 1744.53 Q99.4824 1748.08 99.4824 1755.21 Q99.4824 1762.31 101.288 1765.88 Q103.117 1769.42 106.728 1769.42 Q110.362 1769.42 112.168 1765.88 Q113.996 1762.31 113.996 1755.21 Q113.996 1748.08 112.168 1744.53 Q110.362 1740.97 106.728 1740.97 M106.728 1737.27 Q112.538 1737.27 115.593 1741.87 Q118.672 1746.46 118.672 1755.21 Q118.672 1763.93 115.593 1768.54 Q112.538 1773.12 106.728 1773.12 Q100.918 1773.12 97.8389 1768.54 Q94.7834 1763.93 94.7834 1755.21 Q94.7834 1746.46 97.8389 1741.87 Q100.918 1737.27 106.728 1737.27 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip020)" d="M62.4919 1400.59 Q58.8808 1400.59 57.0521 1404.15 Q55.2465 1407.7 55.2465 1414.83 Q55.2465 1421.93 57.0521 1425.5 Q58.8808 1429.04 62.4919 1429.04 Q66.1261 1429.04 67.9317 1425.5 Q69.7604 1421.93 69.7604 1414.83 Q69.7604 1407.7 67.9317 1404.15 Q66.1261 1400.59 62.4919 1400.59 M62.4919 1396.89 Q68.302 1396.89 71.3576 1401.49 Q74.4363 1406.08 74.4363 1414.83 Q74.4363 1423.55 71.3576 1428.16 Q68.302 1432.74 62.4919 1432.74 Q56.6817 1432.74 53.603 1428.16 Q50.5475 1423.55 50.5475 1414.83 Q50.5475 1406.08 53.603 1401.49 Q56.6817 1396.89 62.4919 1396.89 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip020)" d="M82.6538 1426.19 L87.538 1426.19 L87.538 1432.07 L82.6538 1432.07 L82.6538 1426.19 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip020)" d="M97.7695 1397.51 L116.126 1397.51 L116.126 1401.45 L102.052 1401.45 L102.052 1409.92 Q103.07 1409.57 104.089 1409.41 Q105.107 1409.22 106.126 1409.22 Q111.913 1409.22 115.293 1412.4 Q118.672 1415.57 118.672 1420.98 Q118.672 1426.56 115.2 1429.66 Q111.728 1432.74 105.408 1432.74 Q103.232 1432.74 100.964 1432.37 Q98.7185 1432 96.3111 1431.26 L96.3111 1426.56 Q98.3945 1427.7 100.617 1428.25 Q102.839 1428.81 105.316 1428.81 Q109.32 1428.81 111.658 1426.7 Q113.996 1424.59 113.996 1420.98 Q113.996 1417.37 111.658 1415.27 Q109.32 1413.16 105.316 1413.16 Q103.441 1413.16 101.566 1413.58 Q99.7139 1413.99 97.7695 1414.87 L97.7695 1397.51 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip020)" d="M52.3067 1087.76 L59.9456 1087.76 L59.9456 1061.39 L51.6354 1063.06 L51.6354 1058.8 L59.8993 1057.13 L64.5752 1057.13 L64.5752 1087.76 L72.214 1087.76 L72.214 1091.69 L52.3067 1091.69 L52.3067 1087.76 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip020)" d="M81.6584 1085.81 L86.5427 1085.81 L86.5427 1091.69 L81.6584 1091.69 L81.6584 1085.81 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip020)" d="M106.728 1060.21 Q103.117 1060.21 101.288 1063.77 Q99.4824 1067.32 99.4824 1074.45 Q99.4824 1081.55 101.288 1085.12 Q103.117 1088.66 106.728 1088.66 Q110.362 1088.66 112.168 1085.12 Q113.996 1081.55 113.996 1074.45 Q113.996 1067.32 112.168 1063.77 Q110.362 1060.21 106.728 1060.21 M106.728 1056.51 Q112.538 1056.51 115.593 1061.11 Q118.672 1065.7 118.672 1074.45 Q118.672 1083.17 115.593 1087.78 Q112.538 1092.36 106.728 1092.36 Q100.918 1092.36 97.8389 1087.78 Q94.7834 1083.17 94.7834 1074.45 Q94.7834 1065.7 97.8389 1061.11 Q100.918 1056.51 106.728 1056.51 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip020)" d="M53.3021 747.376 L60.941 747.376 L60.941 721.011 L52.6308 722.677 L52.6308 718.418 L60.8947 716.751 L65.5706 716.751 L65.5706 747.376 L73.2094 747.376 L73.2094 751.311 L53.3021 751.311 L53.3021 747.376 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip020)" d="M82.6538 745.432 L87.538 745.432 L87.538 751.311 L82.6538 751.311 L82.6538 745.432 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip020)" d="M97.7695 716.751 L116.126 716.751 L116.126 720.687 L102.052 720.687 L102.052 729.159 Q103.07 728.812 104.089 728.65 Q105.107 728.464 106.126 728.464 Q111.913 728.464 115.293 731.636 Q118.672 734.807 118.672 740.224 Q118.672 745.802 115.2 748.904 Q111.728 751.983 105.408 751.983 Q103.232 751.983 100.964 751.612 Q98.7185 751.242 96.3111 750.501 L96.3111 745.802 Q98.3945 746.936 100.617 747.492 Q102.839 748.048 105.316 748.048 Q109.32 748.048 111.658 745.941 Q113.996 743.835 113.996 740.224 Q113.996 736.612 111.658 734.506 Q109.32 732.399 105.316 732.399 Q103.441 732.399 101.566 732.816 Q99.7139 733.233 97.7695 734.112 L97.7695 716.751 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip020)" d="M55.5243 406.996 L71.8437 406.996 L71.8437 410.931 L49.8993 410.931 L49.8993 406.996 Q52.5614 404.242 57.1447 399.612 Q61.7511 394.959 62.9317 393.617 Q65.177 391.094 66.0567 389.358 Q66.9594 387.598 66.9594 385.908 Q66.9594 383.154 65.015 381.418 Q63.0937 379.682 59.9919 379.682 Q57.7928 379.682 55.3391 380.446 Q52.9086 381.209 50.1308 382.76 L50.1308 378.038 Q52.9549 376.904 55.4086 376.325 Q57.8623 375.746 59.8993 375.746 Q65.2696 375.746 68.4641 378.432 Q71.6585 381.117 71.6585 385.608 Q71.6585 387.737 70.8483 389.658 Q70.0613 391.557 67.9548 394.149 Q67.3761 394.82 64.2743 398.038 Q61.1724 401.232 55.5243 406.996 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip020)" d="M81.6584 405.052 L86.5427 405.052 L86.5427 410.931 L81.6584 410.931 L81.6584 405.052 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip020)" d="M106.728 379.45 Q103.117 379.45 101.288 383.015 Q99.4824 386.557 99.4824 393.686 Q99.4824 400.793 101.288 404.357 Q103.117 407.899 106.728 407.899 Q110.362 407.899 112.168 404.357 Q113.996 400.793 113.996 393.686 Q113.996 386.557 112.168 383.015 Q110.362 379.45 106.728 379.45 M106.728 375.746 Q112.538 375.746 115.593 380.353 Q118.672 384.936 118.672 393.686 Q118.672 402.413 115.593 407.019 Q112.538 411.603 106.728 411.603 Q100.918 411.603 97.8389 407.019 Q94.7834 402.413 94.7834 393.686 Q94.7834 384.936 97.8389 380.353 Q100.918 375.746 106.728 375.746 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip020)" d="M56.5197 66.6164 L72.839 66.6164 L72.839 70.5515 L50.8947 70.5515 L50.8947 66.6164 Q53.5567 63.8617 58.14 59.2321 Q62.7465 54.5794 63.927 53.2368 Q66.1724 50.7137 67.052 48.9776 Q67.9548 47.2183 67.9548 45.5285 Q67.9548 42.7739 66.0104 41.0378 Q64.0891 39.3017 60.9872 39.3017 Q58.7882 39.3017 56.3345 40.0656 Q53.904 40.8295 51.1262 42.3804 L51.1262 37.6582 Q53.9503 36.5239 56.4039 35.9452 Q58.8576 35.3665 60.8947 35.3665 Q66.265 35.3665 69.4594 38.0517 Q72.6539 40.7369 72.6539 45.2276 Q72.6539 47.3572 71.8437 49.2785 Q71.0566 51.1766 68.9502 53.7692 Q68.3715 54.4405 65.2696 57.6581 Q62.1678 60.8525 56.5197 66.6164 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip020)" d="M82.6538 64.6719 L87.538 64.6719 L87.538 70.5515 L82.6538 70.5515 L82.6538 64.6719 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip020)" d="M97.7695 35.9915 L116.126 35.9915 L116.126 39.9267 L102.052 39.9267 L102.052 48.3989 Q103.07 48.0516 104.089 47.8896 Q105.107 47.7044 106.126 47.7044 Q111.913 47.7044 115.293 50.8757 Q118.672 54.047 118.672 59.4636 Q118.672 65.0423 115.2 68.1441 Q111.728 71.2228 105.408 71.2228 Q103.232 71.2228 100.964 70.8524 Q98.7185 70.4821 96.3111 69.7413 L96.3111 65.0423 Q98.3945 66.1765 100.617 66.7321 Q102.839 67.2877 105.316 67.2877 Q109.32 67.2877 111.658 65.1812 Q113.996 63.0747 113.996 59.4636 Q113.996 55.8525 111.658 53.7461 Q109.32 51.6396 105.316 51.6396 Q103.441 51.6396 101.566 52.0563 Q99.7139 52.4729 97.7695 53.3525 L97.7695 35.9915 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><polyline clip-path="url(#clip022)" style="stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="229.231,1741.39 489.374,1750.07 749.517,1740.89 1009.66,1751.15 1269.8,1738.98 1529.95,1011.34 1790.09,882.995 2050.23,1397.57 2310.37,492.259 2570.52,96.8724 "></polyline>
<path clip-path="url(#clip020)" d="M241.718 209.375 L542.324 209.375 L542.324 105.695 L241.718 105.695  Z" fill="#ffffff" fill-rule="evenodd" fill-opacity="1"></path>
<polyline clip-path="url(#clip020)" style="stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="241.718,209.375 542.324,209.375 542.324,105.695 241.718,105.695 241.718,209.375 "></polyline>
<polyline clip-path="url(#clip020)" style="stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none" points="269.293,157.535 434.744,157.535 "></polyline>
<path clip-path="url(#clip020)" d="M476.161 177.223 Q474.356 181.852 472.643 183.264 Q470.93 184.676 468.06 184.676 L464.657 184.676 L464.657 181.112 L467.157 181.112 Q468.916 181.112 469.888 180.278 Q470.86 179.445 472.041 176.343 L472.805 174.399 L462.319 148.889 L466.833 148.889 L474.934 169.167 L483.036 148.889 L487.55 148.889 L476.161 177.223 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path><path clip-path="url(#clip020)" d="M494.842 170.88 L502.481 170.88 L502.481 144.515 L494.17 146.181 L494.17 141.922 L502.434 140.255 L507.11 140.255 L507.11 170.88 L514.749 170.88 L514.749 174.815 L494.842 174.815 L494.842 170.88 Z" fill="#000000" fill-rule="nonzero" fill-opacity="1"></path></svg>
</div>
</div>
<p>Hãy nhớ rằng <code>randn()</code> có thể trả về một vector, thử cải thiện xem.</p>
<div id="cec2e785" class="cell" data-execution_count="12">
<details class="code-fold">
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode numberSource julia number-lines code-with-copy"><code class="sourceCode julia"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># still poor style</span></span>
<span id="cb16-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">generatedata</span>(n)</span>
<span id="cb16-3">    ep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">randn</span>(n) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use built in function</span></span>
<span id="cb16-4"></span>
<span id="cb16-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">eachindex</span>(ep)</span>
<span id="cb16-6">        ep[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ep[i]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># squaring the result</span></span>
<span id="cb16-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb16-8"></span>
<span id="cb16-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> ep</span>
<span id="cb16-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb16-11">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">generatedata</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="13">
<pre><code>5-element Vector{Float64}:
 0.4020013293531669
 3.2976715282134874
 0.2429343751757354
 0.5387018498871103
 1.2211267571308764</code></pre>
</div>
</div>
</section>
<section id="variations-on-fixed-points-chưa-biết-dịch-ntn" class="level3">
<h3 class="anchored" data-anchor-id="variations-on-fixed-points-chưa-biết-dịch-ntn">1.1.2. Variations on Fixed Points (chưa biết dịch ntn :&gt;)</h3>
</section>
</section>
<section id="julia-cơ-bản" class="level2">
<h2 class="anchored" data-anchor-id="julia-cơ-bản">1.2. Julia cơ bản</h2>
</section>
<section id="các-kiểu-dữ-liệu-cơ-bản" class="level2">
<h2 class="anchored" data-anchor-id="các-kiểu-dữ-liệu-cơ-bản">1.3. Các kiểu dữ liệu cơ bản</h2>
</section>
<section id="kiểu-dữ-liệu-và-lập-trình-tổng-quát" class="level2">
<h2 class="anchored" data-anchor-id="kiểu-dữ-liệu-và-lập-trình-tổng-quát">1.4. Kiểu dữ liệu và Lập trình tổng quát</h2>
</section>
</section>
<section id="các-thư-viện-phổ-biến-của-julia-package-ecosystem" class="level1">
<h1>2. Các thư viện phổ biến của Julia (Package Ecosystem)</h1>
<section id="generic-programming" class="level2">
<h2 class="anchored" data-anchor-id="generic-programming">2.1. Generic Programming</h2>
</section>
<section id="general-purpose-packages" class="level2">
<h2 class="anchored" data-anchor-id="general-purpose-packages">2.2. General Purpose Packages</h2>
</section>
<section id="data-and-statistics-packages" class="level2">
<h2 class="anchored" data-anchor-id="data-and-statistics-packages">2.3. Data and Statistics Packages</h2>
</section>
<section id="solvers-optimizers-and-automatic-differentiation" class="level2">
<h2 class="anchored" data-anchor-id="solvers-optimizers-and-automatic-differentiation">2.4. Solvers, Optimizers, and Automatic Differentiation</h2>


<!-- -->

</section>
</section>

 ]]></description>
  <category>QEJ</category>
  <category>Julia</category>
  <category>Quant Econ</category>
  <guid>https://lktuan.github.io/blog/2024-04-19-qej-1/</guid>
  <pubDate>Tue, 23 Apr 2024 17:00:00 GMT</pubDate>
  <media:content url="https://lktuan.github.io/blog/2024-04-19-qej-1/julia_logo.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>I am starting training Brazilian Jiu-jitsu</title>
  <dc:creator>Tuan Le Khac</dc:creator>
  <link>https://lktuan.github.io/blog/2024-02-28-bjj/</link>
  <description><![CDATA[ 





<p>It was 2018 when I first stumbled upon the term ‘BJJ’ when I joined a martial discussion group named <a href="https://www.facebook.com/groups/1384082055164738">“DOG Brothers Team Vietnam”</a>. There was an active club named <a href="https://www.facebook.com/RoninBjjHanoi/">“RONIN BJJ Hanoi”</a>, but I never tried to find out what BJJ was.</p>
<p>As an <a href="https://en.wikipedia.org/wiki/Somatotype_and_constitutional_psychology#The_three_types"><em>ectomorphic</em></a>, I’m 1.72 meters tall and weigh only 52kg. My strength lies in <strong>endurance</strong>, not <strong>conditioning</strong><sup>1</sup>. I can hike or walk for hours, even up to 20 kilometers. However, playing left-back in a 5-a-side football match for 15 minutes straight would be a challenge.</p>
<div class="no-row-height column-margin column-container"><div id="fn1"><p><sup>1</sup>&nbsp;<strong>Endurance</strong> is the ability to <strong><em>maintain</em></strong> a certain effort with minimal fatigue, while <strong>conditioning</strong> is the ability to <strong><em>repeat</em></strong> a certain effort with minimal fatigue. See this <a href="https://www.ypsi.de/blogs/english-articles/endurance-vs-conditioning-the-biggest-misconception-in-training-for-sports">article</a>.</p></div></div><p>So upgrade my <strong>body composition</strong> and <strong>physical strength</strong> is one task in my this year to-do-list. I contacted the Dog Brother club and inquired about <em>Kickboxing</em> class, as I’m not a fan of gyms and don’t want to bulk up. Fortunately, I spoke with Head Coach Vu Dinh Tien, a BJJ expert and one of the pioneers of BJJ in Vietnam. After learning about my goals, Coach Tien recommended BJJ. He explained that BJJ focuses on isometric strength (holding positions) and grappling-specific strength (leverage and technique), which builds lean muscle and core strength, making it a better fit for my desire to achieve a toned physique.</p>
<p>This is also the short comparision between Brazillian Jiu-jitsu &amp; Kickboxing that Gemini gave me:</p>
<table class="table-striped table-hover table">
<colgroup>
<col style="width: 21%">
<col style="width: 38%">
<col style="width: 40%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;">Feature</th>
<th style="text-align: left;">BJJ</th>
<th style="text-align: left;">Kickboxing</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Body Form Focus</td>
<td style="text-align: left;">Lean muscle, core strength</td>
<td style="text-align: left;">Muscle mass, sculpted physique</td>
</tr>
<tr class="even">
<td style="text-align: left;">Weight Impact</td>
<td style="text-align: left;">Can aid weight loss</td>
<td style="text-align: left;">Excellent for burning calories</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Strength Focus</td>
<td style="text-align: left;">Isometric, grappling-specific</td>
<td style="text-align: left;">Explosive power, speed</td>
</tr>
</tbody>
</table>
<p>He convinced me so that’s how I started training BJJ! 🔥🔥🔥</p>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="1">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 100.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lktuan.github.io/blog/2024-02-28-bjj/soi_bjj.jpg" class="img-fluid figure-img" style="width:100.0%"></p>
<figcaption>My very first day training BJJ, me on the top-right corner ↗, photo credit to <a href="https://www.facebook.com/soibjj">Sói Jiu-jitsu</a></figcaption>
</figure>
</div>
</div>
</div>
</div>
<p>The club boasts a friendly atmosphere, with many seasoned athletes who’ve been training for years. They often take the time to help newbies like me during training sessions. Sometimes we also have head coach Tien in the class, his insights on how we and our opponents react in different situations are fascinating ~ we follow principles, not movements. We practice to develop muscle memory for various moves, but more importantly, we learn the principles that guide us in developing strategies for specific games or situations. Just like football, BJJ emphasizes positional control, but the key lies in understanding the underlying principles to adapt strategies in any situation.</p>
<p>As of June, I’ve been training in BJJ for almost 4 months. Although I did not gain significant weight because my nutrition did not meet the needs of exercise, my physical strength has improved significantly. In rolling, I was able to do basic control and escape control movements, but still didn’t know how to control my explosive energy during a match. I often use my muscles too much instead of <strong>leverage</strong> my body weight at the beginning of the match, leading to a rapid decline in fitness and losing position at the end. This definitely takes more time to improve.</p>
<p>This article is just my experience so far, so please don’t take the headline too seriously. Let’s just say, I’m not quite at the point where I size up a bigger guy and say (even think): <code>how interesting!</code> lol. (see this <a href="https://www.facebook.com/watch/?v=573772426504379">video</a> for how interesting a BJJ expert handles a bigger guy with nearly 30kg gap weight)</p>
<p>Happy training!</p>
<p>Tuan</p>


<!-- -->



 ]]></description>
  <category>life</category>
  <category>bjj</category>
  <guid>https://lktuan.github.io/blog/2024-02-28-bjj/</guid>
  <pubDate>Tue, 27 Feb 2024 17:00:00 GMT</pubDate>
  <media:content url="https://lktuan.github.io/blog/2024-02-28-bjj/how_cool_is_a_bigger_guy.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Cách đọc Guitar Tab đơn giản</title>
  <dc:creator>Tuan Le Khac</dc:creator>
  <link>https://lktuan.github.io/blog/2024-01-19-guitar-tablature/</link>
  <description><![CDATA[ 





<p>TIL: tab là tableture</p>
<section id="cách-đọc-tab-guitar-căn-bản" class="level1">
<h1>1. Cách đọc tab guitar căn bản</h1>
<p>Học guitar đã hai tháng mà không biết đọc tab :“&gt;. Nay mình quyết định dành một buổi sáng để tìm hiểu về chủ đề này.</p>
<p>Vẫn là 6 dòng kẻ, mỗi dòng tương ứng một dây của đàn:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource txt number-lines code-with-copy"><code class="sourceCode default"><span id="cb1-1">e----------------------------||(Dây mỏng nhất, cao nhất)</span>
<span id="cb1-2">B----------------------------||</span>
<span id="cb1-3">G----------------------------||</span>
<span id="cb1-4">D----------------------------||</span>
<span id="cb1-5">A----------------------------||</span>
<span id="cb1-6">E----------------------------||(Dây dày nhất, trầm nhất)</span></code></pre></div>
<p>Tab dùng con số để cho chúng ta biết cần đặt tay lên ngăn số mấy của dây tương ứng.</p>
<p>Ví dụ 1: Đánh dây 1 phím 3, sau đó đánh dây 2 buông, sau đó đánh dây 1 phím 1:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource txt number-lines code-with-copy"><code class="sourceCode default"><span id="cb2-1">E----3-------1----------------------------------------------------</span>
<span id="cb2-2">B--------0--------------------------------------------------------</span>
<span id="cb2-3">G-----------------------------------------------------------------</span>
<span id="cb2-4">D-----------------------------------------------------------------</span>
<span id="cb2-5">A-----------------------------------------------------------------</span>
<span id="cb2-6">E-----------------------------------------------------------------</span></code></pre></div>
<p><strong>Lưu ý 1</strong>: Tab chỉ cho ta thông tin về cao độ (bấm ở đâu), chứ không phải trường độ (như khuông nhạc)</p>
<p><strong>Lưu ý 2</strong>: nhiều số xuất hiện thẳng hàng nghĩa là cần thực hiện một lúc</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource txt number-lines code-with-copy"><code class="sourceCode default"><span id="cb3-1">Cách bấm hợp âm Đô Trưởng</span>
<span id="cb3-2">E----0-----------------------------------------------------</span>
<span id="cb3-3">B----1-----------------------------------------------------</span>
<span id="cb3-4">G----0-----------------------------------------------------</span>
<span id="cb3-5">D----2-----------------------------------------------------</span>
<span id="cb3-6">A----3-----------------------------------------------------</span>
<span id="cb3-7">E----0-----------------------------------------------------</span>
<span id="cb3-8">Đôi khi bạn sẽ thấy một số clip hướng dẫn trên mạng sẽ chỉ cách bấm hợp âm bằng cách đọc tab như vầy:</span>
<span id="cb3-9">Đô Trưởng - 032010</span>
<span id="cb3-10">Rê Thứ - 000231</span>
<span id="cb3-11">...</span></code></pre></div>
<p>Ví dụ 2:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource txt number-lines code-with-copy"><code class="sourceCode default"><span id="cb4-1">Intro bài River Flows In You có rất nhiều chỗ phải đánh 2 dây cùng lúc</span>
<span id="cb4-2">e ||--3--2--3--2-|-3-----3-----|------3--2--3--2-|-3-----3------|</span>
<span id="cb4-3">B ||--------3----|----3-----1~-|---0--------3----|----3-----1~--|</span>
<span id="cb4-4">G ||-----0-----0-|----0-----0~-|-0-------0-----0-|----0-----0~--|</span>
<span id="cb4-5">D ||--2----------|-------------|------2----------|--------------|</span>
<span id="cb4-6">A ||-------------|-3-----------|-----------------|-3------------|</span>
<span id="cb4-7">E ||-------------|-------------|-----------------|--------------|</span></code></pre></div>
</section>
<section id="cách-đọc-tab-guitar-nâng-cao" class="level1">
<h1>2. Cách đọc tab guitar nâng cao</h1>
<p>Yeah chừng đấy phía trên là đủ đọc tab cho đa số (nhất là đệm hát), tuy nhiên nâng cao xíu sẽ không thừa, nhỉ? Rất hữu ích cho người chơi finger style</p>
<section id="hammer-on---h" class="level2">
<h2 class="anchored" data-anchor-id="hammer-on---h">2.1. Hammer On - h</h2>
<p>Hướng dẫn: <a href="https://www.youtube.com/watch?v=OGgp0uUNG1I" class="uri">https://www.youtube.com/watch?v=OGgp0uUNG1I</a></p>
<p>Ví dụ:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource txt number-lines code-with-copy"><code class="sourceCode default"><span id="cb5-1">e--------0------------------------------------------------</span>
<span id="cb5-2">B--------1--1h3-------------------------------------------</span>
<span id="cb5-3">G---------------------------------------------------------</span>
<span id="cb5-4">D---------------------------------------------------------</span>
<span id="cb5-5">A---------------------------------------------------------</span>
<span id="cb5-6">E---------------------------------------------------------</span>
<span id="cb5-7">Đánh dây B phím 1 xong dùng ngón tay nhấn đè lên ngăn 3 để tạo hiệu ứng Hammer On</span></code></pre></div>
</section>
<section id="pull-offs---p" class="level2">
<h2 class="anchored" data-anchor-id="pull-offs---p">2.2. Pull Offs - p</h2>
<p>Hưỡng dẫn: <a href="https://www.youtube.com/watch?v=cdo1H7FVI84" class="uri">https://www.youtube.com/watch?v=cdo1H7FVI84</a></p>
<p>Note: hammer on và pull offs ngược nhau nên sẽ có tab sử dụng ký hiệu chung là ^ (cười bằng 1 mắt 😜), ta phân biệt hai technique kia dựa trên số trước và sau dấu ^.</p>
<p>Ví dụ:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource txt number-lines code-with-copy"><code class="sourceCode default"><span id="cb6-1">e--------0-------5^3--------------------------------------</span>
<span id="cb6-2">B--------1--3p1-------------------------------------------</span>
<span id="cb6-3">G---------------------------------------------------------</span>
<span id="cb6-4">D---------------------------------------------------------</span>
<span id="cb6-5">A---------------------------------------------------------</span>
<span id="cb6-6">E---------------------------------------------------------</span>
<span id="cb6-7">Số trước nhỏ hơn số sau: 7^9 = 7h9 do đánh từ phím 7 lên thì phải là Hammer On</span>
<span id="cb6-8">Số trước lớn hơn số sau: 9^7 = 9p7 do đánh từ phím 9 xuống phải là Pull Offs</span>
<span id="cb6-9">Trong trường hợp này chúng ta hiểu 3p1 và 5^3 đều là Pull Offs.</span></code></pre></div>
</section>
<section id="trills---tr" class="level2">
<h2 class="anchored" data-anchor-id="trills---tr">2.3. Trills - tr</h2>
<p>Ký hiệu tr phía trên hai con số, biểu thị Trills</p>
<p>Ví dụ:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource txt number-lines code-with-copy"><code class="sourceCode default"><span id="cb7-1">             tr~~~~    </span>
<span id="cb7-2">e------------7--(9)------------------------------------------</span>
<span id="cb7-3">B------7---------------------------------------------</span>
<span id="cb7-4">G---7-----7-------------------------------------------------</span>
<span id="cb7-5">D---------------------------------------------------------</span>
<span id="cb7-6">A---------------------------------------------------------</span>
<span id="cb7-7">E---------------------------------------------------------</span>
<span id="cb7-8">Đánh ngăn 7 xong sau đó Hammer On nhanh lên ngăn 9 rồi Pull Offs ngay ra. </span>
<span id="cb7-9">Nói chung Hammer On sau đó Pull Offs thì gọi là Trills!</span></code></pre></div>
</section>
<section id="bend---b" class="level2">
<h2 class="anchored" data-anchor-id="bend---b">2.4. Bend - b</h2>
<p>(hay còn gọi là nhéo dây)</p>
<p>Ví dụ:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode numberSource txt number-lines code-with-copy"><code class="sourceCode default"><span id="cb8-1">e-------------------5-----7b8------------------------------</span>
<span id="cb8-2">B---------7-----------------------------------------------</span>
<span id="cb8-3">G-----7-------7---------------------------------------------</span>
<span id="cb8-4">D---------------------------------------------------------</span>
<span id="cb8-5">A---------------------------------------------------------</span>
<span id="cb8-6">E---------------------------------------------------------</span>
<span id="cb8-7">7b8 nghĩa là bend ở ngăn 7 lên cao độ ngăn 8 trên dây E (Dây 1).</span></code></pre></div>
</section>
<section id="release---r" class="level2">
<h2 class="anchored" data-anchor-id="release---r">2.5. Release - r</h2>
<p>(nhả dây sau khi Bend)</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource txt number-lines code-with-copy"><code class="sourceCode default"><span id="cb9-1">e------------------------7b8r7----------------------------</span>
<span id="cb9-2">B---------------------------------------------------------</span>
<span id="cb9-3">G---------------------------------------------------------</span>
<span id="cb9-4">D---------------------------------------------------------</span>
<span id="cb9-5">A---------------------------------------------------------</span>
<span id="cb9-6">E---------------------------------------------------------</span>
<span id="cb9-7">7b8r7 nghĩa là cũng bend lên cao độ ngăn 8 xong nhả về 7 bình thường trên dây E (Dây 1).</span></code></pre></div>
</section>
<section id="legato-slide---s-hoặc" class="level2">
<h2 class="anchored" data-anchor-id="legato-slide---s-hoặc">2.6. Legato Slide - “s” hoặc “/”</h2>
<p>(vuốt dây Legato)</p>
<p>Hướng dẫn: <a href="https://www.youtube.com/watch?v=QgKk0eV-E8c" class="uri">https://www.youtube.com/watch?v=QgKk0eV-E8c</a></p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode numberSource txt number-lines code-with-copy"><code class="sourceCode default"><span id="cb10-1">e------------------------7s9------------------------------</span>
<span id="cb10-2">B--------------------------------------------9\7----------</span>
<span id="cb10-3">G---------------------------------------------------------</span>
<span id="cb10-4">D---------------------------------------------------------</span>
<span id="cb10-5">A---------------------------------------------------------</span>
<span id="cb10-6">E---------------------------------------------------------</span>
<span id="cb10-7">Trong một số tab sẽ ký hiệu là "/" với trường hơp vuốt lên như 7/9 hoặc"\" là vuốt về ví dụ như 9\7</span>
<span id="cb10-8">Legato là đánh xong rồi vuốt</span></code></pre></div>
</section>
<section id="shift-slide---s" class="level2">
<h2 class="anchored" data-anchor-id="shift-slide---s">2.7. Shift slide - S</h2>
<p>Hướng dẫn (cũng như phân biệt s và S): <a href="https://www.youtube.com/watch?v=OWhziAenUeU" class="uri">https://www.youtube.com/watch?v=OWhziAenUeU</a></p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode numberSource txt number-lines code-with-copy"><code class="sourceCode default"><span id="cb11-1">e------------------------7S9------------------------------</span>
<span id="cb11-2">B--------------7-------------------------------------------</span>
<span id="cb11-3">G-----6----------------------------------------------------</span>
<span id="cb11-4">D-----6----------------------------------------------------</span>
<span id="cb11-5">A---------------------------------------------------------</span>
<span id="cb11-6">E---------------------------------------------------------</span>
<span id="cb11-7">Vừa đánh vừa vuốt từ ngăn 7 lên ngăn 9</span></code></pre></div>
</section>
<section id="vibrato---v-hoặc" class="level2">
<h2 class="anchored" data-anchor-id="vibrato---v-hoặc">2.8. Vibrato - “v” hoặc “~”</h2>
<p>Hưỡng dẫn: <a href="https://www.youtube.com/watch?v=MY9aTs1YpT4" class="uri">https://www.youtube.com/watch?v=MY9aTs1YpT4</a></p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode numberSource txt number-lines code-with-copy"><code class="sourceCode default"><span id="cb12-1">e------------------------5v-------------5~----------------</span>
<span id="cb12-2">B-------7--------------------------------------------------</span>
<span id="cb12-3">G--------------5-------------------------------------------</span>
<span id="cb12-4">D---------------------------------------------------------</span>
<span id="cb12-5">A---0------------------------------------------------------</span>
<span id="cb12-6">E---------------------------------------------------------</span>
<span id="cb12-7">Khi thấy ký hiệu "v" hoặc "~" thì bạn bend nốt đó lên xuống liên tục là vibrato, xem đường link phia trên để hiểu rõ hơn</span></code></pre></div>
</section>
<section id="mute---x" class="level2">
<h2 class="anchored" data-anchor-id="mute---x">2.9. Mute - x</h2>
<p>(Bịt dây đánh câm tiếng)</p>
<p>Bịt dây lại đánh hoàn toàn không ra tiếng</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode numberSource txt number-lines code-with-copy"><code class="sourceCode default"><span id="cb13-1">e----5---x--------------------------------------------------</span>
<span id="cb13-2">B----5---x--------------------------------------------------</span>
<span id="cb13-3">G----6---x--------------------------------------------------</span>
<span id="cb13-4">D----8---x--------------------------------------------------</span>
<span id="cb13-5">A----7---x--------------------------------------------------</span>
<span id="cb13-6">E----5---x--------------------------------------------------</span></code></pre></div>
</section>
<section id="palm-mute---pm" class="level2">
<h2 class="anchored" data-anchor-id="palm-mute---pm">2.10. Palm Mute - PM</h2>
<p>Vẫn đánh ra tiếng nhưng dùng tay phải đè lên phần ngựa để hạn chế độ rung của dây. Tiếng gọn hơn chứ không vang đanh như bình thường.</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode numberSource txt number-lines code-with-copy"><code class="sourceCode default"><span id="cb14-1">                    PM---------- |</span>
<span id="cb14-2">E---------5---------3-----------------------------------</span>
<span id="cb14-3">B------------7------------------------------------------</span>
<span id="cb14-4">G-------------------------------------------------------</span>
<span id="cb14-5">D-------------------------------------------------------</span>
<span id="cb14-6">A------0--------0---------------------------------------</span>
<span id="cb14-7">E---0---------------------------------------------------</span></code></pre></div>
</section>
<section id="harmonic--" class="level2">
<h2 class="anchored" data-anchor-id="harmonic--">2.11. Harmonic - &lt;&gt;</h2>
<p>Đặt tay lên phím (không bấm, chỉ đặt hờ) gảy ở phía cuối dây đàn (nơi bình thường nếu gảy sẽ tạo ra tiếng đanh và sắc nhất), sẽ tạo ra tiếng harmonic.</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode numberSource txt number-lines code-with-copy"><code class="sourceCode default"><span id="cb15-1">E------------------------&lt;7&gt;-------------&lt;12&gt;-------------</span>
<span id="cb15-2">B----------------------------------------&lt;12&gt;-------------</span>
<span id="cb15-3">G----------------------------------------&lt;12&gt;-------------</span>
<span id="cb15-4">D---------------------------------------------------------</span>
<span id="cb15-5">A---------------------------------------------------------</span>
<span id="cb15-6">E---------------------------------------------------------</span></code></pre></div>
</section>
</section>
<section id="các-ký-hiệu" class="level1">
<h1>3. Các ký hiệu</h1>
<ul>
<li><p>b – Nhấn dây lên</p></li>
<li><p>r – Trả note nhấn về vị trí củ</p></li>
<li><p>p – luyến dây</p></li>
<li><p>h – gõ lên</p></li>
<li><p>/ – kéo note lên hoặc là (S)</p></li>
<li><p>\ – kéo note xuống; như trên</p></li>
<li><p>m – đánh tiếng câm</p></li>
<li><p>Pm – tiếng câm tây phải</p></li>
<li><p>v – rung dây (có khi sẽ viết là ~)</p></li>
<li><p>t – gõ lên bằng tây cầm phím (hoặc có thể viết là +)</p></li>
<li><p>ha – Đánh tiếng chuôn</p></li>
<li><p>x – không đánh hoặc có đánh thì đánh tiếng câm không ra note.</p></li>
<li><p>w/bar – dùng cần nhúng</p></li>
<li><p>h – hammer on – luyến từ âm thấp lên âm cao</p></li>
<li><p>p – pull off – luyến từ âm cao về âm thấp</p></li>
<li><p>hammeron và pulloff còn được kí hiệu bằng dấu ^ VD: ——-2^3^2^3——–</p></li>
<li><p>b – uốn dây lên (dí chặt dây đàn và di lên phía trên, tạo ra âm méo)</p></li>
<li><p>b^ = uốn ½ nhịp</p></li>
<li><p>b^^ = uốn 1 1/2 nhịp</p></li>
<li><p>pb = pre-bend</p></li>
<li><p>r – nhả uốn, tức là đưa dây về vị trí bình thường:&nbsp; Có nhiều kiểu uốn dây như uốn lên luôn, ko nhả, uốn rồi nhả về, uốn rồi nhả rồi lại uốn hoặc là uốn trước rồi mới gẩy (gọi là pre-bend), uốn trước – gẩy – và nhả về…</p></li>
<li><p>/ – miết lên (miết ngón tay từ 1 phím lên phím có cao độ lớn hơn)</p></li>
<li><p>\ – miết xuống</p></li>
<li><p>v (hoặc ~) – nhay nhay ngón tay để tạo âm rung</p></li>
<li><p>t – đánh kiểu tapping, dùng đầu ngón tay ấn nhanh vào dây đàn để tạo âm thanh</p></li>
<li><p>#(#) = Trill – đánh 2 nốt cùng 1 âm hoặc đánh như kiểu vê ý</p></li>
<li><p>x = Nốt chết – có đánh nhưng phát ra tiếng câm (sờ lên dây chứ ko bấm, kiểu thế)</p></li>
<li><p>P.M. = Ốp lòng bàn tay vào để tắt âm</p></li>
<li><p>Tp = oánh tapping bằng móng gẩy</p></li>
<li><p>&gt;&gt;&gt; tăng độ to</p></li>
<li><p>&lt;&lt;&lt; giảm độ to</p></li>
<li><p>Hình chữ X(x): Death note(âm chết). Cách đánh: đập mạnh dây cho chạm tới thanh đồng của cần đàn cho kêu thành tiếng “chạch” hoặc gãy vào 1 dây nhưng tay trái giữ cho không kêu -&gt;”pực”. Cả 2 cách đều có hiệu ứng như nhau nhưng cách đầu tiếng rất chói, dùng trong dập hoặc rock.</p></li>
<li><p>Grace Note(G): âm hoa mĩ, đánh nhỏ hơn các âm bình thường.</p></li>
<li><p>Ghost Note(O): âm ma, đánh nhỏ hơn âm hoa mĩ.</p></li>
<li><p>Accentuated note: âm nhấn mạnh.</p></li>
<li><p>Heavy accentuated note: nhấn mạnh hơn 1 chút nữa.</p></li>
<li><p>Let ring(I): để kêu, không ngắt tiếng.</p></li>
<li><p>Natural Harmonic: âm gió tự nhiên, đặt tay hờ vào phím 12 và gẩy tạo âm thanh lạ.</p></li>
<li><p>Artificial harmonic: âm gió nghệ thuật, tay trái bấm vào 1 phím bất kỳ còn tay phải bấm hờ vào phím cách phím cũ 1 khoảng nhất định(5,7,12,19…)-&gt; tạo ra các âm gió đa dạng hơn.</p></li>
<li><p>Hammer on/ Pull off(H): nháy phím, dùng tay bấm(trái) (chứ không phải tay gảy) để gảy nhẹ hoặc bấm mạnh vào các phím nhằm tạo ra âm thanh khác so với gảy-&gt; đánh 1 số chỗ nhanh cần dùng kỹ thuật này.</p></li>
<li><p>Bend(B): đẩy dây, ngón bấm phím đẩy dây lên dọc theo thanh đồng làm tiếng bị méo lên cao. 1/2 tức cao độ méo đi là 1 phím, full là 2 phím…</p></li>
<li><p>Tremolo Bar: cái này khó dùng lắm, mà người ta cũng không dùng mấy.</p></li>
<li><p>Legato slide(S): vuốt dây liền tiếng, vuốt dây mà không gảy ở cuối lúc vuốt.</p></li>
<li><p>Shift slide(Alt+S): vuốt dây đứt tiếng, vuốt dây sau khi đạt tới phím vuốt sau thì gảy 1 cái.</p></li>
<li><p>Slide: vuốt dây, có 4 loại là vuốt lên, vuốt xuống,… thông thường phím khởi điểm cách phím cuối 2 phím.</p></li>
<li><p>Vibrato(v): rung dây, Cách 1:ngón bấm rung dây theo chiều lên xuống dọc theo phím đồng, điểm tiếp xúc của ngón bấm với cần đàn chuyển động. Cách 2: tay trái bấm lay dây dọc theo cần đàn nhưng chỗ tiếp xúc với cần đàn đứng yên.</p></li>
<li><p>Wide Vibrato: rung dây biên độ lớn, cách đánh tương tự.</p></li>
<li><p>Trill: tremolo cả khuông nhạc. về kỹ thuật tremolo các bạn có thể tham khảo trên mạng hoặc trên www.guitarpro.vn</p></li>
<li><p>Tremolo picking: tremolo với số lần định trước.</p></li>
<li><p>P.M(P): Palm mute, tay gảy hoặc tay bấm chặn ở gần cầu ngựa hoặc gần chỗ đầu rung của dây là dây rung kém đi 1 chút, nếu thành thạo thì tiếng nghe giống tiếng đàn bầu.(Kỹ thuật này khó lắm, phụ thuộc vào cảm giác tay nhiều lắm)</p></li>
<li><p>Staccato: ngắt tiếng, làm thế nào cho 1 cái dây nó không kêu nữa 1 cách đột ngột thì làm.</p></li>
<li><p>Tapping: dùng tay gảy bấm note đó(trường hợp các phím bấm xa nhau không với được.</p></li>
<li><p>Slapping: trong bass thì có kỹ thuật lấy ngón cái đập vào dây khi kêu tạo hiệu ứng lạ.</p></li>
<li><p>Popping: cái này trong đàn bass dùng, tui cũng chưa biết nó thế nào vì không đánh bass bao giờ.</p></li>
<li><p>Fade In(F): tạo ra tiếng to dần(trong đàn điện mới được).</p></li>
<li><p>Wah Wah: Dấu + là đánh vì trí gảy dây tay gảy gảy gần về phía cầu ngựa, dấu o là gảy gần vào giữa dây đàn.</p></li>
<li><p>Chord(A): các thế bấm Gam.</p></li>
<li><p>Downstroke(Ctrl+D): rải hợp âm xuống.</p></li>
<li><p>Upstroke(Ctrl+U): rải hợp âm lên.</p></li>
<li><p>Pickstroke up: móc dây theo hướng lên trên.</p></li>
<li><p>Pickstroke down: bật dây xuống dưới.</p></li>
<li><p>“ppp”-&gt;”fff”: độ to của âm tăng dần.</p></li>
<li><p>Tempo: số note đen trong 1 phút, càng nhiều thì bài càng nhanh</p></li>
</ul>


<!-- -->

</section>

 ]]></description>
  <category>Guitar</category>
  <guid>https://lktuan.github.io/blog/2024-01-19-guitar-tablature/</guid>
  <pubDate>Tue, 23 Jan 2024 17:00:00 GMT</pubDate>
  <media:content url="https://lktuan.github.io/blog/2024-01-19-guitar-tablature/how-to-read-guitar-tabs.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>A tuturial of ggplot2</title>
  <dc:creator>Tuan Le Khac</dc:creator>
  <link>https://lktuan.github.io/blog/2023-12-24-a-first-lession-on-ggplot2/</link>
  <description><![CDATA[ <section id="preparation" class="level1"><h1>0. Preparation</h1>
<hr>
<p>I need to install the following packages:</p>
<div class="cell">
<details class="code-fold"><summary>Show the code</summary><div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># | eval: false</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install CRAN packages</span></span>
<span id="cb1-3">pkg_install <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span>   <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ggplot2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tibble"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tidyr"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"forcats"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"purrr"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"prismatic"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"corrr"</span>, </span>
<span id="cb1-4">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cowplot"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ggforce"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ggrepel"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ggridges"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ggsci"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ggtext"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ggthemes"</span>, </span>
<span id="cb1-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grid"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gridExtra"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"patchwork"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rcartocolor"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"scico"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"showtext"</span>, </span>
<span id="cb1-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"shiny"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plotly"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"highcharter"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"echarts4r"</span>)</span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install.packages(pkg_install)</span></span></code></pre></div>
</details>
</div>
<p>I was facing the error of installing devtools</p>
<div class="cell">
<details class="code-fold"><summary>Show the code</summary><div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># | eval: false</span></span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install from GitHub since not on CRAN</span></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install.packages('devtools')</span></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># devtools::install_github("JohnCoene/charter")</span></span></code></pre></div>
</details>
</div>
<p>I tried to update R to the latest version (commented the code as it would be run once)</p>
<div class="cell">
<details class="code-fold"><summary>Show the code</summary><div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># | eval: false</span></span>
<span id="cb3-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># update.packages(repos='http://cran.rstudio.com/', ask=FALSE, checkBuilt=TRUE)</span></span></code></pre></div>
</details>
</div>
<p>–&gt; Not worked</p>
<p><strong>Oops I was should be using “‘devtools’” instead of “devtools”!!! Problem solved</strong></p>
</section><section id="the-dataset" class="level1"><h1>1. The Dataset</h1>
<hr>
<p>I was using the dataset: “<em>National Morbidity and Mortality Air Pollution Study</em>&nbsp;(NMMAPS)”</p>
<p>Install the readr first:</p>
<div class="cell">
<details class="code-fold"><summary>Show the code</summary><div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># | eval: false</span></span>
<span id="cb4-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install.packages('readr')</span></span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install.packages("quarto")</span></span></code></pre></div>
</details>
</div>
<section id="import-data" class="level3"><h3 class="anchored" data-anchor-id="import-data">Import data</h3>
<p>“: :” here call the namespace and can be used to access a function without loading the package.</p>
<div class="cell">
<details class="code-fold"><summary>Show the code</summary><div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb5-1">chic <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> readr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://cedricscherer.com/data/chicago-nmmaps-custom.csv"</span>)</span></code></pre></div>
</details><div class="cell-output cell-output-stderr">
<pre><code>Rows: 1461 Columns: 10
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
chr  (3): city, season, month
dbl  (6): temp, o3, dewpoint, pm10, yday, year
date (1): date

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.</code></pre>
</div>
</div>
<p>view some data</p>
<div class="cell">
<details class="code-fold"><summary>Show the code</summary><div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb7-1">tibble<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(chic)</span></code></pre></div>
</details><div class="cell-output cell-output-stdout">
<pre><code>Rows: 1,461
Columns: 10
$ city     &lt;chr&gt; "chic", "chic", "chic", "chic", "chic", "chic", "chic", "chic…
$ date     &lt;date&gt; 1997-01-01, 1997-01-02, 1997-01-03, 1997-01-04, 1997-01-05, …
$ temp     &lt;dbl&gt; 36.0, 45.0, 40.0, 51.5, 27.0, 17.0, 16.0, 19.0, 26.0, 16.0, 1…
$ o3       &lt;dbl&gt; 5.659256, 5.525417, 6.288548, 7.537758, 20.760798, 14.940874,…
$ dewpoint &lt;dbl&gt; 37.500, 47.250, 38.000, 45.500, 11.250, 5.750, 7.000, 17.750,…
$ pm10     &lt;dbl&gt; 13.052268, 41.948600, 27.041751, 25.072573, 15.343121, 9.3646…
$ season   &lt;chr&gt; "Winter", "Winter", "Winter", "Winter", "Winter", "Winter", "…
$ yday     &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18…
$ month    &lt;chr&gt; "Jan", "Jan", "Jan", "Jan", "Jan", "Jan", "Jan", "Jan", "Jan"…
$ year     &lt;dbl&gt; 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1997, 1…</code></pre>
</div>
</div>
<div class="cell">
<details class="code-fold"><summary>Show the code</summary><div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(chic,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span></code></pre></div>
</details><div class="cell-output cell-output-stdout">
<pre><code># A tibble: 10 × 10
   city  date        temp    o3 dewpoint  pm10 season  yday month  year
   &lt;chr&gt; &lt;date&gt;     &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt;
 1 chic  1997-01-01  36    5.66    37.5  13.1  Winter     1 Jan    1997
 2 chic  1997-01-02  45    5.53    47.2  41.9  Winter     2 Jan    1997
 3 chic  1997-01-03  40    6.29    38    27.0  Winter     3 Jan    1997
 4 chic  1997-01-04  51.5  7.54    45.5  25.1  Winter     4 Jan    1997
 5 chic  1997-01-05  27   20.8     11.2  15.3  Winter     5 Jan    1997
 6 chic  1997-01-06  17   14.9      5.75  9.36 Winter     6 Jan    1997
 7 chic  1997-01-07  16   11.9      7    20.2  Winter     7 Jan    1997
 8 chic  1997-01-08  19    8.68    17.8  33.1  Winter     8 Jan    1997
 9 chic  1997-01-09  26   13.4     24    12.1  Winter     9 Jan    1997
10 chic  1997-01-10  16   10.4      5.38 24.8  Winter    10 Jan    1997</code></pre>
</div>
</div>
</section></section><section id="the-ggplot2-package" class="level1"><h1>3. The <code>{ggplot2}</code> Package</h1>
<hr>
<p>A ggplot is built up from a few basic elements:</p>
<ol type="1">
<li>Data;</li>
<li>Geometries <code>geom_</code>: the geometric shape (hình học) that will represent the data;</li>
<li>Aesthetics <code>aes_</code>: aesthetics (tính thẩm mỹ) of the geometric or statistical objects, such as postition, color, size, shape, and transparency;</li>
<li>Scales <code>scale_</code>: map between the data and the aesthetics dimensions (ánh xạ từ dữ liệu đến đồ thị), such as data range to plot width or factor values to colors;</li>
<li>Statistical transformations <code>stat_</code>: statistical summaries (thống kê) of data, such as quantitles, fitted curves, and sums;</li>
<li>Coordinate system <code>coord_</code>: the transformation used for mapping data coordinates into the plane of the data rectangles (hệ tọa độ);</li>
<li>Facets <code>facet_</code>: the arrangement of the data into a grid of plots;</li>
<li>Visual themes <code>theme()</code>: the overall visual defaults of a plot, such as background, grids, axes, default typeface, sizes and colors (tông).</li>
</ol>
<p>🚀<strong>Không nhất thiết một phần tử được gọi, và chúng cũng có thể được gọi nhiều lần.</strong></p>
</section><section id="a-default-ggplot" class="level1"><h1>4. A default <code>ggplot</code>
</h1>
<hr>
<p>Load the package for ability to use the functionality:</p>
<div class="cell">
<details class="code-fold"><summary>Show the code</summary><div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span></code></pre></div>
</details>
</div>
<p>A default ggplot needs three things that you have to specify: the&nbsp;<em>data</em>,&nbsp;<em>aesthetics</em>, and a&nbsp;<em>geometry.</em></p>
<ul>
<li><p>starting define a plot by using <code>ggplot(data = df)</code>;</p></li>
<li><p>if we want to plot (in most cases) 2 variables, we must add <em>positional aesthetics</em> <code>aes(x = var1, y = var2);</code></p></li>
</ul>
<p><strong>🚀Data được đề cập <em>bên ngoài</em><code>aes()</code>, trong khi đó biến/variables được đề cập <em>bên trong</em><code>aes()</code>.</strong></p>
<p>Ví dụ:</p>
<div class="cell">
<details class="code-fold"><summary>Show the code</summary><div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb12-1">(g <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(chic, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> date, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> temp)))</span></code></pre></div>
</details><div class="cell-output-display">
<div>
<figure class="figure"><p><img src="https://lktuan.github.io/blog/2023-12-24-a-first-lession-on-ggplot2/index_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Just a blank panel, because <a href="https://ggplot2.tidyverse.org">ggplot2</a> <em>does not know</em> how we plot data ~ we still need to provide geometry.</p>
<p><strong>🚀<code>ggplot2</code> cho phép chúng ta lưu <code>ggobject</code> thành một biến, trong trường hợp này là <code>g</code> . Chúng ta có thể mở rộng <code>g</code> bằng cách thêm cách layers về sau.</strong></p>
<p><strong>🚀Bằng cách dùng dấu <code>()</code>, chúng ta có thể <em>in</em> ngay object được gán ra.</strong></p>
<p>Many different geometries to use (called <code>geoms</code> because each function usually starts with <code>geom_</code>). For e.g., if we want to plot a scatter plot.</p>
<div class="cell">
<details class="code-fold"><summary>Show the code</summary><div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb13-1">g <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>()</span></code></pre></div>
</details><div class="cell-output-display">
<div>
<figure class="figure"><p><img src="https://lktuan.github.io/blog/2023-12-24-a-first-lession-on-ggplot2/index_files/figure-html/unnamed-chunk-10-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>also a lineplot which our managers always like:</p>
<div class="cell">
<details class="code-fold"><summary>Show the code</summary><div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb14-1">g <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>()</span></code></pre></div>
</details><div class="cell-output-display">
<div>
<figure class="figure"><p><img src="https://lktuan.github.io/blog/2023-12-24-a-first-lession-on-ggplot2/index_files/figure-html/unnamed-chunk-11-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>cool but the plot does not look optimal, we can also using mutiple layers of geometry, where the magic and fun start.</p>
<div class="cell">
<details class="code-fold"><summary>Show the code</summary><div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb15-1">g <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>()</span></code></pre></div>
</details><div class="cell-output-display">
<div>
<figure class="figure"><p><img src="https://lktuan.github.io/blog/2023-12-24-a-first-lession-on-ggplot2/index_files/figure-html/unnamed-chunk-12-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<details class="code-fold"><summary>Show the code</summary><div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># it's the same if we write g + geom_line() + geom_point() </span></span></code></pre></div>
</details>
</div>
<section id="change-properties-of-geometries" class="level3"><h3 class="anchored" data-anchor-id="change-properties-of-geometries">Change properties of geometries</h3>
<p>Turn all points to large fire-red diamonds:</p>
<div class="cell">
<details class="code-fold"><summary>Show the code</summary><div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb17-1">g <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'firebrick'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'diamond'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
</details><div class="cell-output-display">
<div>
<figure class="figure"><p><img src="https://lktuan.github.io/blog/2023-12-24-a-first-lession-on-ggplot2/index_files/figure-html/unnamed-chunk-13-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p><strong>🚀 <code>ggplot2</code> hiểu khi chúng ta dùng <code>color</code>, <code>colour</code>, cũng như <code>col</code>.</strong></p>
<p><strong>🐱‍🏍Có thể dùng <a href="http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf">màu mặc định</a> hoặc <a href="https://www.techopedia.com/definition/29788/color-hex-code">màu hex</a>, hoặc thậm chí là màu RGB/RGBA với hàm <code><a href="https://rdrr.io/r/grDevices/rgb.html">rgb()</a></code>. Ví dụ:</strong></p>
<div class="cell">
<details class="code-fold"><summary>Show the code</summary><div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb18-1">g <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#b22222"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"diamond"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
</details><div class="cell-output-display">
<div>
<figure class="figure"><p><img src="https://lktuan.github.io/blog/2023-12-24-a-first-lession-on-ggplot2/index_files/figure-html/unnamed-chunk-14-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<details class="code-fold"><summary>Show the code</summary><div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb19-1">g <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rgb</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">178</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">34</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">34</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">maxColorValue =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"diamond"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
</details><div class="cell-output-display">
<div>
<figure class="figure"><p><img src="https://lktuan.github.io/blog/2023-12-24-a-first-lession-on-ggplot2/index_files/figure-html/unnamed-chunk-14-2.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<section id="replacing-the-default-ggplot2-theme" class="level4"><h4 class="anchored" data-anchor-id="replacing-the-default-ggplot2-theme">Replacing the default <code>ggplot2</code> theme</h4>
<p>Calling eg <code>theme_bw()</code> using <code>theme_set()</code>, all following plots will have same blank’n’white theme.</p>
<div class="cell">
<details class="code-fold"><summary>Show the code</summary><div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_set</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>())</span>
<span id="cb20-2"></span>
<span id="cb20-3">g <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'firebrick'</span>)</span></code></pre></div>
</details><div class="cell-output-display">
<div>
<figure class="figure"><p><img src="https://lktuan.github.io/blog/2023-12-24-a-first-lession-on-ggplot2/index_files/figure-html/unnamed-chunk-15-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p><strong>🚀<code>theme()</code> is also a useful function to modify all kinds of theme elements (texts, rectangles, and lines).</strong></p>
</section></section></section><section id="axes" class="level1"><h1>5. Axes</h1>
<hr>
<section id="change-axis-titles" class="level3"><h3 class="anchored" data-anchor-id="change-axis-titles">Change Axis Titles</h3>
<p>Use <code>labs()</code> to assign character string for each lable.</p>
<div class="cell">
<details class="code-fold"><summary>Show the code</summary><div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb21-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(chic, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> date, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> temp)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-2">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'firebrick'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Year'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Temperature (°F)'</span>)</span></code></pre></div>
</details><div class="cell-output-display">
<div>
<figure class="figure"><p><img src="https://lktuan.github.io/blog/2023-12-24-a-first-lession-on-ggplot2/index_files/figure-html/unnamed-chunk-16-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Can also using <code>xlab()</code> and <code>ylab()</code>:</p>
<div class="cell">
<details class="code-fold"><summary>Show the code</summary><div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb22-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(chic, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> date, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> temp)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb22-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"firebrick"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb22-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xlab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Year"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb22-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temperature (°F)"</span>)</span></code></pre></div>
</details><div class="cell-output-display">
<div>
<figure class="figure"><p><img src="https://lktuan.github.io/blog/2023-12-24-a-first-lession-on-ggplot2/index_files/figure-html/unnamed-chunk-17-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>🐱‍🏍Not only the degree symbol before F, but also the supper script:</p>
<div class="cell">
<details class="code-fold"><summary>Show the code</summary><div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb23-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(chic, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> date, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> temp)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"firebrick"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Year"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expression</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temperature ("</span>, degree <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> F, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">")"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(Hey, why should we use metric units?!)"</span>)))</span></code></pre></div>
</details><div class="cell-output-display">
<div>
<figure class="figure"><p><img src="https://lktuan.github.io/blog/2023-12-24-a-first-lession-on-ggplot2/index_files/figure-html/unnamed-chunk-18-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section><section id="increase-space-between-axis-and-axis-titles." class="level3"><h3 class="anchored" data-anchor-id="increase-space-between-axis-and-axis-titles.">Increase space between Axis and Axis Titles.</h3>
<p>Overwrite the default <code>element_text()</code> within the <code>theme()</code> call:</p>
<div class="cell">
<details class="code-fold"><summary>Show the code</summary><div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb24-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(chic, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> date, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> temp)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb24-2">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'firebrick'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb24-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Year'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Temperature (°F)'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb24-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vjust =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>),</span>
<span id="cb24-5">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vjust =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>))</span></code></pre></div>
</details><div class="cell-output-display">
<div>
<figure class="figure"><p><img src="https://lktuan.github.io/blog/2023-12-24-a-first-lession-on-ggplot2/index_files/figure-html/unnamed-chunk-19-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p><code>vjust</code> refer to vertical alignment. We can also change the distance by specifying the margin of both text elements.</p>
<div class="cell">
<details class="code-fold"><summary>Show the code</summary><div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb25-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(chic, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> date, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> temp)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb25-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"firebrick"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb25-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Year"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temperature (°F)"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb25-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">margin =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">margin</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">t =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>),</span>
<span id="cb25-5">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">margin =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">margin</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>))</span></code></pre></div>
</details><div class="cell-output-display">
<div>
<figure class="figure"><p><img src="https://lktuan.github.io/blog/2023-12-24-a-first-lession-on-ggplot2/index_files/figure-html/unnamed-chunk-20-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p><code>r</code> and <code>t</code> in the <code>margin</code> are <strong>top</strong> and <strong>right</strong>. Margin has 4 arguments: <code>margin(t, r, b, l)</code>.</p>
<p>🚀A good way to remember the order of the margin sides is “<strong><em>t-r</em></strong>-ou-<strong><em>b-l</em></strong>-e”.</p>
</section><section id="change-aesthetics-of-the-axis-titles" class="level3"><h3 class="anchored" data-anchor-id="change-aesthetics-of-the-axis-titles">Change Aesthetics of the Axis Titles</h3>
<p>Again, we use <code>theme()</code> function and modify the <code>axis.tile</code> and/or the subordinated elements <code>axis.tile.x</code> and <code>axis.tile.y</code> . Within <code>element_text()</code> we can modify the default of <code>size</code>, <code>color</code>, and <code>face</code>.</p>
<div class="cell">
<details class="code-fold"><summary>Show the code</summary><div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb26-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(chic, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> date, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> temp)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb26-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"firebrick"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb26-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Year"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temperature (°F)"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb26-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"firebrick"</span>,</span>
<span id="cb26-5">                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">face =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"italic"</span>))</span></code></pre></div>
</details><div class="cell-output-display">
<div>
<figure class="figure"><p><img src="https://lktuan.github.io/blog/2023-12-24-a-first-lession-on-ggplot2/index_files/figure-html/unnamed-chunk-21-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>the <code>face</code> argument can be used to make the font <code>bold</code>, <code>italic</code>, or even <code>bold.italic</code>.</p>
<div class="cell">
<details class="code-fold"><summary>Show the code</summary><div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb27-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(chic, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> date, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> temp)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb27-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"firebrick"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb27-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Year"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temperature (°F)"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb27-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sienna"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">face =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bold'</span>),</span>
<span id="cb27-5">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"orangered"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">face =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bold.italic'</span>))</span></code></pre></div>
</details><div class="cell-output-display">
<div>
<figure class="figure"><p><img src="https://lktuan.github.io/blog/2023-12-24-a-first-lession-on-ggplot2/index_files/figure-html/unnamed-chunk-22-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>🐱‍🏍You could also use a combination of <code>axis.title</code> and <code>axis.title.y</code>, since <code>axis.title.x</code> inherits the values from <code>axis.title</code>. Eg:</p>
<div class="cell">
<details class="code-fold"><summary>Show the code</summary><div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb28-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(chic, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> date, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> temp)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb28-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"firebrick"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb28-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Year"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temperature (°F)"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb28-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sienna"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>),</span>
<span id="cb28-5">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"orangered"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>))</span></code></pre></div>
</details><div class="cell-output-display">
<div>
<figure class="figure"><p><img src="https://lktuan.github.io/blog/2023-12-24-a-first-lession-on-ggplot2/index_files/figure-html/unnamed-chunk-23-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>One can modify some properties for both axis titles and other only for one or properties for each on its own:</p>
<div class="cell">
<details class="code-fold"><summary>Show the code</summary><div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb29-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(chic, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> date, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> temp)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb29-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"firebrick"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb29-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Year"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temperature (°F)"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb29-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sienna"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">face =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bold"</span>),</span>
<span id="cb29-5">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">face =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bold.italic"</span>))</span></code></pre></div>
</details><div class="cell-output-display">
<div>
<figure class="figure"><p><img src="https://lktuan.github.io/blog/2023-12-24-a-first-lession-on-ggplot2/index_files/figure-html/unnamed-chunk-24-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section><section id="change-aesthetics-of-axis-text" class="level3"><h3 class="anchored" data-anchor-id="change-aesthetics-of-axis-text">Change Aesthetics of Axis Text</h3>
<p>Similar to the <code>title</code>, we can change the appearance of the axis text (number indeed) by using <code>axis.text</code> and/or the subordinated elements <code>axis.text.x</code> and <code>axis.text.y</code>.</p>
<div class="cell">
<details class="code-fold"><summary>Show the code</summary><div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb30-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(chic, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> date, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> temp)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb30-2">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'firebrick'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb30-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Year"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expression</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temperature("</span>,degree <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> F, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">")"</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb30-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dodgerblue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>),</span>
<span id="cb30-5">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">face =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'italic'</span>))</span></code></pre></div>
</details><div class="cell-output-display">
<div>
<figure class="figure"><p><img src="https://lktuan.github.io/blog/2023-12-24-a-first-lession-on-ggplot2/index_files/figure-html/unnamed-chunk-25-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section><section id="rotate-axis-text" class="level3"><h3 class="anchored" data-anchor-id="rotate-axis-text">Rotate Axis Text</h3>
<p>Specifying an <code>angle</code> help us to rotate any text elements. With <code>hjust</code> and <code>vjust</code> we can adjust the position of text afterwards horizontally (0 = left, 1 = right), and vertically (0 = top, 1 = bottom).</p>
<div class="cell">
<details class="code-fold"><summary>Show the code</summary><div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb31-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(chic, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> date, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> temp)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb31-2">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'firebrick'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb31-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Year"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expression</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temperature("</span>,degree <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> F, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">")"</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb31-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">angle =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vjust =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>))</span></code></pre></div>
</details><div class="cell-output-display">
<div>
<figure class="figure"><p><img src="https://lktuan.github.io/blog/2023-12-24-a-first-lession-on-ggplot2/index_files/figure-html/unnamed-chunk-26-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<details class="code-fold"><summary>Show the code</summary><div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb32-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 50 means 50 degrees, not % =)))</span></span></code></pre></div>
</details>
</div>
</section><section id="remove-axis-text-ticks" class="level3"><h3 class="anchored" data-anchor-id="remove-axis-text-ticks">Remove Axis Text &amp; Ticks</h3>
<p>Rarely a reason to do this but this is how it works.</p>
<div class="cell">
<details class="code-fold"><summary>Show the code</summary><div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb33-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(chic, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> date, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> temp)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb33-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"firebrick"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb33-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Year"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temperature (°F)"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb33-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.ticks.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb33-5">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>())</span></code></pre></div>
</details><div class="cell-output-display">
<div>
<figure class="figure"><p><img src="https://lktuan.github.io/blog/2023-12-24-a-first-lession-on-ggplot2/index_files/figure-html/unnamed-chunk-27-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p><strong>🚀If you want to get rid of a theme element, the element is always <code>element_blank</code>.</strong></p>
</section><section id="remove-axis-titles" class="level3"><h3 class="anchored" data-anchor-id="remove-axis-titles">Remove Axis Titles</h3>
<p>We could again use <code>element_blank()</code> but it is way simpler to just remove the label in the <code>labs()</code> (or <code>xlab()</code>) call:</p>
<div class="cell">
<details class="code-fold"><summary>Show the code</summary><div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb34-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(chic, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> date, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> temp)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb34-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"firebrick"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb34-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span></code></pre></div>
</details><div class="cell-output-display">
<div>
<figure class="figure"><p><img src="https://lktuan.github.io/blog/2023-12-24-a-first-lession-on-ggplot2/index_files/figure-html/unnamed-chunk-28-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Note that <code>NULL</code> removes the element (similarly to <code>element_blank()</code>) while empty quotes <code>""</code> will keep the spacing for the axis title and simply print nothing.</p>
</section><section id="limit-axis-range" class="level3"><h3 class="anchored" data-anchor-id="limit-axis-range">Limit Axis Range</h3>
<p>Some time you want to take a closer look at some range of you data. You can do this without subsetting your data:</p>
<div class="cell">
<details class="code-fold"><summary>Show the code</summary><div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb35-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(chic, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> date, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> temp)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb35-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"firebrick"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb35-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Year"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temperature (°F)"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb35-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylim</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>))</span></code></pre></div>
</details><div class="cell-output cell-output-stderr">
<pre><code>Warning: Removed 777 rows containing missing values or values outside the scale range
(`geom_point()`).</code></pre>
</div>
<div class="cell-output-display">
<div>
<figure class="figure"><p><img src="https://lktuan.github.io/blog/2023-12-24-a-first-lession-on-ggplot2/index_files/figure-html/unnamed-chunk-29-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Alternatively you can use <code>scale_y_continuous(limits = c(0, 50))</code> (subset) or <code>coord_cartesian(ylim = c(0, 50))</code>. The former removes all data points outside the range while the second adjusts the visible area (zooming) and is similar to <code>ylim(c(0, 50))</code> (subset).</p>
</section><section id="force-plot-to-start-at-the-origin" class="level3"><h3 class="anchored" data-anchor-id="force-plot-to-start-at-the-origin">Force Plot to start at the origin</h3>
<div class="cell">
<details class="code-fold"><summary>Show the code</summary><div class="sourceCode cell-code" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb37-1">chic_high <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(chic, temp <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>, o3 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb37-2"></span>
<span id="cb37-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(chic_high, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> temp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> o3)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb37-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"darkcyan"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb37-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temperature higher than 25°F"</span>,</span>
<span id="cb37-6">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ozone higher than 20 ppb"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb37-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expand_limits</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
</details><div class="cell-output-display">
<div>
<figure class="figure"><p><img src="https://lktuan.github.io/blog/2023-12-24-a-first-lession-on-ggplot2/index_files/figure-html/unnamed-chunk-30-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>🐱‍🏍Using <code>coord_cartesian(xlim = c(0,NA), ylim = c(0,NA))</code>will lead to the same result.</p>
<div class="cell">
<details class="code-fold"><summary>Show the code</summary><div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb38-1">chic_high <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(chic, temp <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>, o3 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb38-2"></span>
<span id="cb38-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(chic_high, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> temp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> o3)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb38-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"darkcyan"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb38-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temperature higher than 25°F"</span>,</span>
<span id="cb38-6">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ozone higher than 20 ppb"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb38-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>))</span></code></pre></div>
</details><div class="cell-output-display">
<div>
<figure class="figure"><p><img src="https://lktuan.github.io/blog/2023-12-24-a-first-lession-on-ggplot2/index_files/figure-html/unnamed-chunk-31-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>But we can also force it to <em>literally</em> start at the origin!</p>
<div class="cell">
<details class="code-fold"><summary>Show the code</summary><div class="sourceCode cell-code" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb39-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(chic_high, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> temp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> o3)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb39-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"darkcyan"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb39-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temperature higher than 25°F"</span>,</span>
<span id="cb39-4">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ozone higher than 20 ppb"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb39-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expand_limits</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb39-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expand =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">clip =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"off"</span>)</span></code></pre></div>
</details><div class="cell-output-display">
<div>
<figure class="figure"><p><img src="https://lktuan.github.io/blog/2023-12-24-a-first-lession-on-ggplot2/index_files/figure-html/unnamed-chunk-32-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p><strong>🚀The argument <code>clip = "off"</code> in any coordinate system, always starting with <code>coord_*</code>, allows to draw outside of the panel area. Call it here to make sure that the tick marks at <code>c(0, 0)</code> are not cut.</strong></p>
</section><section id="axes-with-same-scaling" class="level3"><h3 class="anchored" data-anchor-id="axes-with-same-scaling">Axes with Same Scaling</h3>
<p>Use <code>coord_equal()</code> with default <code>ratio = 1</code> to ensure the units are equally scaled on the x-axis and on the y-axis. We can set the aspect ratio of a plot with <code>coord_fixed()</code> or <code>coord_equal()</code>. Both use <code>aspect = 1</code> (1:1) as a default.</p>
<div class="cell">
<details class="code-fold"><summary>Show the code</summary><div class="sourceCode cell-code" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb40-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(chic, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> temp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> temp <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(chic), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb40-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sienna"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb40-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temperature (°F)"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temperature (°F) + random noise"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb40-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xlim</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylim</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb40-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>()</span></code></pre></div>
</details><div class="cell-output cell-output-stderr">
<pre><code>Warning: Removed 54 rows containing missing values or values outside the scale range
(`geom_point()`).</code></pre>
</div>
<div class="cell-output-display">
<div>
<figure class="figure"><p><img src="https://lktuan.github.io/blog/2023-12-24-a-first-lession-on-ggplot2/index_files/figure-html/unnamed-chunk-33-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Ratios higher than one make units on the y axis longer than units on the x-axis, and vice versa:</p>
<div class="cell">
<details class="code-fold"><summary>Show the code</summary><div class="sourceCode cell-code" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb42-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(chic, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> temp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> temp <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(chic), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb42-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sienna"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb42-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temperature (°F)"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temperature (°F) + random noise"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb42-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xlim</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylim</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb42-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ratio =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div>
</details><div class="cell-output cell-output-stderr">
<pre><code>Warning: Removed 51 rows containing missing values or values outside the scale range
(`geom_point()`).</code></pre>
</div>
<div class="cell-output-display">
<div>
<figure class="figure"><p><img src="https://lktuan.github.io/blog/2023-12-24-a-first-lession-on-ggplot2/index_files/figure-html/unnamed-chunk-34-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section><section id="use-a-function-to-alter-labels" class="level3"><h3 class="anchored" data-anchor-id="use-a-function-to-alter-labels">Use a Function to Alter Labels</h3>
<p>In case you want to format (eg adding % sign) without change the data.</p>
<div class="cell">
<details class="code-fold"><summary>Show the code</summary><div class="sourceCode cell-code" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb44-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(chic, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> date, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> temp)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb44-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"firebrick"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb44-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Year"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb44-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x) {<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(x, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Degrees Fahrenheit"</span>))})</span></code></pre></div>
</details><div class="cell-output-display">
<div>
<figure class="figure"><p><img src="https://lktuan.github.io/blog/2023-12-24-a-first-lession-on-ggplot2/index_files/figure-html/unnamed-chunk-35-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section></section><section id="titles" class="level1"><h1>6. Titles</h1>
<hr>
<section id="add-a-title" class="level3"><h3 class="anchored" data-anchor-id="add-a-title">Add a Title</h3>
<p>We can add a title via <code>ggtitle()</code> function.</p>
<div class="cell">
<details class="code-fold"><summary>Show the code</summary><div class="sourceCode cell-code" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb45-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(chic, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> date, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> temp)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb45-2">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"firebrick"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb45-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Year"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temperature (°F)"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb45-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggtitle</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temperatures in Chicago"</span>)</span></code></pre></div>
</details><div class="cell-output-display">
<div>
<figure class="figure"><p><img src="https://lktuan.github.io/blog/2023-12-24-a-first-lession-on-ggplot2/index_files/figure-html/unnamed-chunk-36-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Alternatively, we can use <code>labs()</code>, where we can add serveral arguments ~ metadata of the plot (a sub-title, a caption, and a tag):</p>
<div class="cell">
<details class="code-fold"><summary>Show the code</summary><div class="sourceCode cell-code" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb46-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(chic, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> date, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> temp)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb46-2">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"firebrick"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb46-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Year"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temperature (°F)"</span>,</span>
<span id="cb46-4">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Temperatures in Chicago"</span>,</span>
<span id="cb46-5">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subtitle =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Seasonal pattern of daily temperatures from 1997 to 2001"</span>,</span>
<span id="cb46-6">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Data: NMMAPS"</span>,</span>
<span id="cb46-7">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tag =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fig 1"</span>)</span></code></pre></div>
</details><div class="cell-output-display">
<div>
<figure class="figure"><p><img src="https://lktuan.github.io/blog/2023-12-24-a-first-lession-on-ggplot2/index_files/figure-html/unnamed-chunk-37-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section><section id="make-title-bold-add-a-space-at-the-baseline" class="level3"><h3 class="anchored" data-anchor-id="make-title-bold-add-a-space-at-the-baseline">Make title bold &amp; add a space at the baseline</h3>
</section></section><section id="legends" class="level1"><h1>7. Legends</h1>
<hr></section><section id="backgrounds-grid-lines" class="level1"><h1>8. Backgrounds &amp; Grid Lines</h1>
<hr></section><section id="margins" class="level1"><h1>9. Margins</h1>
<hr></section><section id="multi-panel-plots" class="level1"><h1>10. Multi-panel Plots</h1>
<hr></section><section id="colors" class="level1"><h1>11. Colors</h1>
<hr></section><section id="themes" class="level1"><h1>12. Themes</h1>
<hr></section><section id="lines" class="level1"><h1>13. Lines</h1>
<hr></section><section id="text" class="level1"><h1>14. Text</h1>
<hr></section><section id="coordinates" class="level1"><h1>15. Coordinates</h1>
<hr></section><section id="chart-types" class="level1"><h1>16. Chart Types</h1>
<hr></section><section id="ribbons-auc-ci-etc." class="level1"><h1>17. Ribbons (AUC, CI, etc.)</h1>
<hr></section><section id="smoothings" class="level1"><h1>18. Smoothings</h1>
<hr></section><section id="interactive-plots" class="level1"><h1>19. Interactive Plots</h1>
<hr></section><section id="remarks-tipps-resources" class="level1"><h1>20. Remarks, Tipps &amp; Resources</h1>
<hr></section><section id="references" class="level1"><h1>References</h1>
<hr>
<p>Source: <a href="https://www.cedricscherer.com/2019/08/05/a-ggplot2-tutorial-for-beautiful-plotting-in-r/" class="uri">https://www.cedricscherer.com/2019/08/05/a-ggplot2-tutorial-for-beautiful-plotting-in-r/</a></p>


<!-- -->

</section> ]]></description>
  <category>R</category>
  <category>ggplot2</category>
  <category>Data Visualization</category>
  <guid>https://lktuan.github.io/blog/2023-12-24-a-first-lession-on-ggplot2/</guid>
  <pubDate>Sat, 23 Dec 2023 17:00:00 GMT</pubDate>
  <media:content url="https://lktuan.github.io/blog/2023-12-24-a-first-lession-on-ggplot2/ggplot2.png" medium="image" type="image/png" height="167" width="144"/>
</item>
</channel>
</rss>
